{"version":3,"file":"static/js/397.bce6b0ef.chunk.js","mappings":"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","sources":["components/skeleton/SkeletonComponents.js","components/CreateProject.js","components/AnimatedProjectCard.js","components/ProjectList.js","hooks/usePrefetch.js"],"sourcesContent":["import React from \"react\";\n\n// Shimmer 애니메이션을 위한 CSS 클래스\nconst shimmerEffect =\n  \"relative overflow-hidden before:absolute before:inset-0 before:-translate-x-full before:animate-[shimmer_1.5s_infinite] before:bg-gradient-to-r before:from-transparent before:via-white/20 before:to-transparent\";\n\n// 기본 스켈레톤 박스 - Soft-Glass 스타일\nexport const SkeletonBox = ({\n  width = \"w-full\",\n  height = \"h-4\",\n  className = \"\",\n}) => (\n  <div\n    className={`bg-gray-200/80 dark:bg-gray-600/60 rounded-lg animate-pulse backdrop-blur-sm border border-gray-300/40 dark:border-gray-500/40 ${shimmerEffect} ${width} ${height} ${className}`}\n  ></div>\n);\n\n// 원형 스켈레톤 (아바타용) - Soft-Glass 스타일\nexport const SkeletonCircle = ({ size = \"w-10 h-10\", className = \"\" }) => (\n  <div\n    className={`bg-gray-200/80 dark:bg-gray-600/60 rounded-full animate-pulse backdrop-blur-sm border border-gray-300/40 dark:border-gray-500/40 ${shimmerEffect} ${size} ${className}`}\n  ></div>\n);\n\n// 채팅 메시지 스켈레톤 - 개선된 스타일\nexport const ChatMessageSkeleton = ({ isUser = false }) => (\n  <div className={`group relative ${isUser ? \"ml-8\" : \"mr-8\"} mb-6`}>\n    <div className={`flex ${isUser ? \"justify-end\" : \"justify-start\"}`}>\n      {isUser ? (\n        // 사용자 메시지 스켈레톤 - 블루 톤\n        <div className=\"max-w-[85%] rounded-xl px-6 py-4 bg-blue-100/80 dark:bg-blue-900/30 animate-pulse backdrop-blur-sm border border-blue-200/60 dark:border-blue-700/50\">\n          <div className=\"space-y-2\">\n            <SkeletonBox\n              width=\"w-3/4\"\n              height=\"h-4\"\n              className=\"bg-blue-200/60 dark:bg-blue-800/40\"\n            />\n            <SkeletonBox\n              width=\"w-full\"\n              height=\"h-4\"\n              className=\"bg-blue-200/60 dark:bg-blue-800/40\"\n            />\n            <SkeletonBox\n              width=\"w-1/2\"\n              height=\"h-4\"\n              className=\"bg-blue-200/60 dark:bg-blue-800/40\"\n            />\n          </div>\n          <SkeletonBox\n            width=\"w-16\"\n            height=\"h-3\"\n            className=\"mt-3 bg-blue-200/40 dark:bg-blue-800/30\"\n          />\n        </div>\n      ) : (\n        // AI 메시지 스켈레톤 - Soft-Glass 스타일\n        <div className=\"max-w-[85%] w-full backdrop-blur-sm bg-white/70 dark:bg-gray-800/60 rounded-xl p-4 border border-white/40 dark:border-gray-700/50\">\n          <div className=\"space-y-3\">\n            <SkeletonBox width=\"w-full\" height=\"h-4\" />\n            <SkeletonBox width=\"w-5/6\" height=\"h-4\" />\n            <SkeletonBox width=\"w-4/5\" height=\"h-4\" />\n            <SkeletonBox width=\"w-3/4\" height=\"h-4\" />\n            <SkeletonBox width=\"w-2/3\" height=\"h-4\" />\n          </div>\n\n          {/* 복사 버튼 영역 스켈레톤 */}\n          <div className=\"mt-4 flex items-center justify-between\">\n            <div className=\"flex items-center space-x-3\">\n              <SkeletonBox width=\"w-20\" height=\"h-8\" className=\"rounded-xl\" />\n              <SkeletonBox width=\"w-16\" height=\"h-6\" className=\"rounded-lg\" />\n            </div>\n            <SkeletonBox width=\"w-12\" height=\"h-3\" />\n          </div>\n        </div>\n      )}\n    </div>\n  </div>\n);\n\n// 프로젝트 카드 스켈레톤\nexport const ProjectCardSkeleton = () => (\n  <div className=\"bg-white dark:bg-gray-800 rounded-xl shadow-sm border border-gray-200 dark:border-gray-700 h-[280px] flex flex-col animate-pulse\">\n    <div className=\"p-6 flex flex-col flex-1\">\n      <div className=\"flex justify-between items-start mb-4\">\n        <div className=\"flex items-center space-x-3 flex-1\">\n          <SkeletonCircle size=\"w-12 h-12\" />\n          <div className=\"flex-1 space-y-2\">\n            <SkeletonBox width=\"w-3/4\" height=\"h-5\" />\n            <SkeletonBox width=\"w-1/2\" height=\"h-4\" />\n          </div>\n        </div>\n        <SkeletonBox width=\"w-6\" height=\"h-6\" className=\"rounded\" />\n      </div>\n\n      <div className=\"flex-1 space-y-3 mb-4\">\n        <SkeletonBox width=\"w-full\" height=\"h-4\" />\n        <SkeletonBox width=\"w-5/6\" height=\"h-4\" />\n        <SkeletonBox width=\"w-4/5\" height=\"h-4\" />\n      </div>\n\n      <div className=\"flex items-center justify-between text-sm\">\n        <SkeletonBox width=\"w-20\" height=\"h-4\" />\n        <SkeletonBox width=\"w-16\" height=\"h-4\" />\n      </div>\n    </div>\n  </div>\n);\n\n// 프로젝트 목록 스켈레톤\nexport const ProjectListSkeleton = ({ count = 6 }) => (\n  <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6\">\n    {Array.from({ length: count }, (_, index) => (\n      <ProjectCardSkeleton key={index} />\n    ))}\n  </div>\n);\n\n// 채팅 인터페이스 스켈레톤\nexport const ChatInterfaceSkeleton = () => (\n  <div className=\"h-full flex flex-col bg-white dark:bg-gray-900 animate-pulse\">\n    {/* 헤더 스켈레톤 */}\n    <div className=\"border-b border-gray-200 dark:border-gray-700 p-4\">\n      <div className=\"flex items-center justify-between\">\n        <div className=\"flex items-center space-x-3\">\n          <SkeletonBox width=\"w-16\" height=\"h-8\" className=\"rounded-lg\" />\n          <SkeletonBox width=\"w-32\" height=\"h-6\" />\n        </div>\n        <div className=\"flex items-center space-x-2\">\n          <SkeletonBox width=\"w-20\" height=\"h-6\" className=\"rounded-full\" />\n        </div>\n      </div>\n    </div>\n\n    {/* 메시지 영역 스켈레톤 */}\n    <div className=\"flex-1 overflow-y-auto p-4 space-y-6\">\n      <ChatMessageSkeleton isUser={true} />\n      <ChatMessageSkeleton isUser={false} />\n      <ChatMessageSkeleton isUser={true} />\n      <ChatMessageSkeleton isUser={false} />\n    </div>\n\n    {/* 입력 영역 스켈레톤 */}\n    <div className=\"border-t border-gray-200 dark:border-gray-700 p-4\">\n      <div className=\"flex space-x-3\">\n        <SkeletonBox width=\"flex-1\" height=\"h-12\" className=\"rounded-lg\" />\n        <SkeletonBox width=\"w-12\" height=\"h-12\" className=\"rounded-lg\" />\n      </div>\n    </div>\n  </div>\n);\n\n// 페이지 스켈레톤 (이미 있던 것을 향상)\nexport const PageSkeleton = () => (\n  <div className=\"min-h-screen bg-gray-50 dark:bg-dark-primary\">\n    <div className=\"bg-white dark:bg-dark-secondary border-b border-gray-200 dark:border-gray-700 animate-pulse\">\n      <div className=\"max-w-7xl mx-auto px-4 py-4\">\n        <SkeletonBox width=\"w-32\" height=\"h-6\" />\n      </div>\n    </div>\n    <div className=\"max-w-7xl mx-auto px-4 py-8\">\n      <div className=\"space-y-6\">\n        <SkeletonBox width=\"w-48\" height=\"h-8\" />\n        <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6\">\n          {Array.from({ length: 6 }, (_, index) => (\n            <div\n              key={index}\n              className=\"bg-white dark:bg-dark-secondary rounded-xl border border-gray-200 dark:border-gray-700 p-6 animate-pulse\"\n            >\n              <div className=\"space-y-4\">\n                <SkeletonBox width=\"w-3/4\" height=\"h-5\" />\n                <SkeletonBox width=\"w-full\" height=\"h-4\" />\n                <SkeletonBox width=\"w-5/6\" height=\"h-4\" />\n                <div className=\"flex justify-between mt-4\">\n                  <SkeletonBox width=\"w-16\" height=\"h-4\" />\n                  <SkeletonBox width=\"w-12\" height=\"h-4\" />\n                </div>\n              </div>\n            </div>\n          ))}\n        </div>\n      </div>\n    </div>\n  </div>\n);\n","import React, { useState } from \"react\";\nimport { toast } from \"react-hot-toast\";\nimport {\n  PlusIcon,\n  XMarkIcon,\n  BookmarkIcon,\n  HashtagIcon,\n} from \"@heroicons/react/24/outline\";\nimport { projectAPI, handleAPIError } from \"../services/api\";\n\nconst CreateProject = ({ isOpen, onClose, onSuccess }) => {\n  const [loading, setLoading] = useState(false);\n  const [formData, setFormData] = useState({\n    name: \"\",\n    description: \"\",\n    tags: [],\n  });\n  const [tagInput, setTagInput] = useState(\"\");\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n\n    if (!formData.name.trim()) {\n      toast.error(\"프로젝트 이름을 입력해주세요.\");\n      return;\n    }\n\n    try {\n      setLoading(true);\n      const response = await projectAPI.createProject(formData);\n      toast.success(\"프로젝트가 생성되었습니다!\");\n      onSuccess?.(response);\n      onClose();\n    } catch (error) {\n      console.error(\"프로젝트 생성 실패:\", error);\n      const errorInfo = handleAPIError(error);\n      toast.error(errorInfo.message);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const handleTagAdd = (e) => {\n    if (e.key === \"Enter\" && tagInput.trim()) {\n      e.preventDefault();\n      const newTag = tagInput.trim();\n      if (!formData.tags.includes(newTag)) {\n        setFormData((prev) => ({\n          ...prev,\n          tags: [...prev.tags, newTag],\n        }));\n      }\n      setTagInput(\"\");\n    }\n  };\n\n  const handleTagRemove = (tagToRemove) => {\n    setFormData((prev) => ({\n      ...prev,\n      tags: prev.tags.filter((tag) => tag !== tagToRemove),\n    }));\n  };\n\n  if (!isOpen) return null;\n\n  return (\n    <div className=\"fixed inset-0 bg-black/50 backdrop-blur-sm z-50 flex items-center justify-center p-4\">\n      <div className=\"bg-white dark:bg-dark-secondary rounded-2xl max-w-md w-full shadow-xl dark:shadow-none transform transition-all duration-300\">\n        <div className=\"p-6\">\n          <div className=\"flex items-center justify-between\">\n            <div className=\"flex items-center space-x-3\">\n              <div className=\"w-10 h-10 bg-blue-100 dark:bg-blue-900 rounded-lg flex items-center justify-center\">\n                <BookmarkIcon className=\"h-5 w-5 text-blue-600 dark:text-blue-400\" />\n              </div>\n              <div>\n                <h3 className=\"text-lg font-semibold text-gray-900 dark:text-white\">\n                  새 프로젝트 생성\n                </h3>\n                <p className=\"text-sm text-gray-500 dark:text-gray-400\">\n                  AI 제목 생성 프로젝트를 만들어보세요\n                </p>\n              </div>\n            </div>\n            <button\n              onClick={onClose}\n              className=\"p-2 text-gray-400 dark:text-gray-500 hover:text-gray-600 dark:hover:text-gray-300 rounded-lg hover:bg-gray-100 dark:hover:bg-dark-tertiary transition-colors\"\n            >\n              <XMarkIcon className=\"h-5 w-5\" />\n            </button>\n          </div>\n        </div>\n\n        <form onSubmit={handleSubmit} className=\"p-6 space-y-6\">\n          {/* 프로젝트 이름 */}\n          <div className=\"space-y-2\">\n            <label className=\"text-sm font-semibold text-gray-800 dark:text-gray-200\">\n              프로젝트 이름 <span className=\"text-red-500\">*</span>\n            </label>\n            <input\n              type=\"text\"\n              value={formData.name}\n              onChange={(e) =>\n                setFormData((prev) => ({ ...prev, name: e.target.value }))\n              }\n              className=\"w-full px-4 py-3 rounded-xl bg-gray-50 dark:bg-dark-tertiary text-gray-900 dark:text-white placeholder-gray-500 dark:placeholder-gray-400 focus:outline-none focus:ring-2 focus:ring-blue-500 transition-all duration-200\"\n              placeholder=\"예: 서울경제신문 제목 생성\"\n              required\n            />\n          </div>\n\n          {/* 프로젝트 설명 */}\n          <div className=\"space-y-2\">\n            <label className=\"text-sm font-semibold text-gray-800 dark:text-gray-200\">\n              프로젝트 설명\n            </label>\n            <textarea\n              value={formData.description}\n              onChange={(e) =>\n                setFormData((prev) => ({\n                  ...prev,\n                  description: e.target.value,\n                }))\n              }\n              className=\"w-full px-4 py-3 rounded-xl bg-gray-50 dark:bg-dark-tertiary text-gray-900 dark:text-white placeholder-gray-500 dark:placeholder-gray-400 focus:outline-none focus:ring-2 focus:ring-blue-500 transition-all duration-200 resize-none\"\n              placeholder=\"프로젝트에 대한 간단한 설명을 입력하세요\"\n              rows={4}\n            />\n          </div>\n\n          {/* 해시태그 */}\n          <div className=\"space-y-2\">\n            <label className=\"flex items-center text-sm font-semibold text-gray-800 dark:text-gray-200\">\n              <HashtagIcon className=\"h-4 w-4 mr-2 text-gray-500 dark:text-gray-400\" />\n              태그\n            </label>\n            <div className=\"space-y-3\">\n              {/* 태그 입력 */}\n              <input\n                type=\"text\"\n                value={tagInput}\n                onChange={(e) => setTagInput(e.target.value)}\n                onKeyPress={handleTagAdd}\n                className=\"w-full px-4 py-3 rounded-xl bg-gray-50 dark:bg-dark-tertiary text-gray-900 dark:text-white placeholder-gray-500 dark:placeholder-gray-400 focus:outline-none focus:ring-2 focus:ring-blue-500 transition-all duration-200\"\n                placeholder=\"태그를 입력하고 Enter를 누르세요\"\n              />\n\n              {/* 태그 목록 */}\n              {formData.tags.length > 0 && (\n                <div className=\"flex flex-wrap gap-2\">\n                  {formData.tags.map((tag, index) => (\n                    <span\n                      key={index}\n                      className=\"inline-flex items-center px-3 py-1 bg-blue-100 dark:bg-blue-900 text-blue-800 dark:text-blue-200 text-sm rounded-full\"\n                    >\n                      #{tag}\n                      <button\n                        type=\"button\"\n                        onClick={() => handleTagRemove(tag)}\n                        className=\"ml-2 text-blue-600 dark:text-blue-400 hover:text-blue-800 dark:hover:text-blue-200\"\n                      >\n                        <XMarkIcon className=\"h-3 w-3\" />\n                      </button>\n                    </span>\n                  ))}\n                </div>\n              )}\n            </div>\n          </div>\n\n          {/* 버튼 */}\n          <div className=\"flex justify-end space-x-3 pt-4\">\n            <button\n              type=\"button\"\n              onClick={onClose}\n              className=\"px-6 py-2.5 text-gray-700 dark:text-gray-300 bg-gray-100 dark:bg-dark-tertiary rounded-lg hover:bg-gray-200 dark:hover:bg-dark-primary transition-colors font-medium\"\n            >\n              취소\n            </button>\n            <button\n              type=\"submit\"\n              disabled={loading || !formData.name.trim()}\n              className=\"px-6 py-2.5 bg-gradient-to-r from-blue-600 to-blue-700 hover:from-blue-700 hover:to-blue-800 text-white rounded-lg disabled:opacity-50 disabled:cursor-not-allowed transition-all duration-200 font-medium shadow-lg hover:shadow-xl flex items-center gap-2\"\n            >\n              {loading ? (\n                <>\n                  <div className=\"animate-spin rounded-full h-4 w-4 border-b-2 border-white\"></div>\n                  생성 중...\n                </>\n              ) : (\n                <>\n                  <PlusIcon className=\"h-4 w-4\" />\n                  생성하기\n                </>\n              )}\n            </button>\n          </div>\n        </form>\n      </div>\n    </div>\n  );\n};\n\nexport default CreateProject;\n","import React, { useState, useRef, useEffect } from \"react\";\nimport { motion, AnimatePresence } from \"framer-motion\";\nimport {\n  DocumentTextIcon,\n  EllipsisHorizontalIcon,\n  PencilIcon,\n  TrashIcon,\n  CalendarIcon,\n  TagIcon,\n} from \"@heroicons/react/24/outline\";\nimport { useTheme } from \"../contexts/ThemeContext\";\n\nconst AnimatedProjectCard = ({\n  project,\n  onDelete,\n  onEdit,\n  viewMode,\n  navigate,\n  onMouseEnter,\n}) => {\n  const [showMenu, setShowMenu] = useState(false);\n  const [isHovered, setIsHovered] = useState(false);\n  const { isDark } = useTheme();\n  const menuRef = useRef(null);\n\n  const handleCardClick = (e) => {\n    if (e.target.closest(\"button\") || e.target.closest(\"a\")) {\n      return;\n    }\n    navigate(`/projects/${project.projectId}`);\n  };\n\n  useEffect(() => {\n    const handleClickOutside = (event) => {\n      if (menuRef.current && !menuRef.current.contains(event.target)) {\n        setShowMenu(false);\n      }\n    };\n\n    document.addEventListener(\"mousedown\", handleClickOutside);\n    return () => {\n      document.removeEventListener(\"mousedown\", handleClickOutside);\n    };\n  }, []);\n\n  const cardVariants = {\n    initial: {\n      scale: 1,\n      y: 0,\n      boxShadow:\n        \"0 1px 3px 0 rgba(0, 0, 0, 0.1), 0 1px 2px 0 rgba(0, 0, 0, 0.06)\",\n    },\n    hover: {\n      scale: 1.02,\n      y: -4,\n      boxShadow:\n        \"0 10px 25px -3px rgba(0, 0, 0, 0.1), 0 4px 6px -2px rgba(0, 0, 0, 0.05)\",\n      transition: {\n        type: \"spring\",\n        stiffness: 300,\n        damping: 20,\n      },\n    },\n    tap: {\n      scale: 0.98,\n      transition: {\n        type: \"spring\",\n        stiffness: 400,\n        damping: 25,\n      },\n    },\n  };\n\n  const iconVariants = {\n    initial: { scale: 1, rotate: 0 },\n    hover: {\n      scale: 1.1,\n      rotate: 5,\n      transition: {\n        type: \"spring\",\n        stiffness: 300,\n        damping: 20,\n      },\n    },\n  };\n\n  const menuVariants = {\n    hidden: {\n      opacity: 0,\n      scale: 0.95,\n      y: -10,\n      transition: {\n        duration: 0.1,\n      },\n    },\n    visible: {\n      opacity: 1,\n      scale: 1,\n      y: 0,\n      transition: {\n        type: \"spring\",\n        stiffness: 300,\n        damping: 25,\n      },\n    },\n  };\n\n  const tagVariants = {\n    initial: { opacity: 0, x: -10 },\n    animate: (i) => ({\n      opacity: 1,\n      x: 0,\n      transition: {\n        delay: i * 0.1,\n        type: \"spring\",\n        stiffness: 300,\n        damping: 25,\n      },\n    }),\n    hover: {\n      scale: 1.05,\n      transition: {\n        type: \"spring\",\n        stiffness: 400,\n        damping: 20,\n      },\n    },\n  };\n\n  return (\n    <motion.div\n      variants={cardVariants}\n      initial=\"initial\"\n      whileHover=\"hover\"\n      whileTap=\"tap\"\n      onHoverStart={() => {\n        setIsHovered(true);\n        if (onMouseEnter) onMouseEnter();\n      }}\n      onHoverEnd={() => setIsHovered(false)}\n      onClick={handleCardClick}\n      className=\"bg-white dark:bg-dark-secondary rounded-xl transition-colors duration-300 cursor-pointer h-[280px] flex flex-col overflow-hidden\"\n    >\n      <div className=\"p-6 flex flex-col flex-1\">\n        <div className=\"flex justify-between items-start mb-4\">\n          <div className=\"flex items-center space-x-3\">\n            <motion.div variants={iconVariants} className=\"flex-shrink-0\">\n              <DocumentTextIcon className=\"h-8 w-8 text-blue-600 dark:text-blue-400\" />\n            </motion.div>\n            <div>\n              <motion.h3\n                className=\"text-lg font-semibold text-gray-900 dark:text-white truncate\"\n                animate={{\n                  color: isHovered ? \"#3B82F6\" : isDark ? \"#ffffff\" : \"#111827\",\n                }}\n                transition={{ duration: 0.2 }}\n              >\n                {project.name}\n              </motion.h3>\n              <p className=\"text-sm text-gray-500 dark:text-gray-300 mt-1 line-clamp-2\">\n                {project.description || \"설명 없음\"}\n              </p>\n            </div>\n          </div>\n\n          <div className=\"relative\" ref={menuRef}>\n            <motion.button\n              onClick={() => setShowMenu(!showMenu)}\n              className=\"p-2 text-gray-400 hover:text-gray-600 dark:hover:text-gray-300 rounded-lg hover:bg-gray-100 dark:hover:bg-dark-tertiary transition-colors border-0 shadow-none\"\n              whileHover={{ scale: 1.1 }}\n              whileTap={{ scale: 0.95 }}\n              title=\"프로젝트 옵션\"\n              style={{ border: \"none\", boxShadow: \"none\" }}\n            >\n              <EllipsisHorizontalIcon className=\"h-5 w-5\" />\n            </motion.button>\n\n            <AnimatePresence>\n              {showMenu && (\n                <motion.div\n                  variants={menuVariants}\n                  initial=\"hidden\"\n                  animate=\"visible\"\n                  exit=\"hidden\"\n                  className=\"absolute right-0 mt-2 w-48 bg-white dark:bg-dark-tertiary rounded-lg shadow-lg ring-1 ring-black ring-opacity-5 z-10\"\n                >\n                  <div className=\"py-1\">\n                    <motion.button\n                      onClick={() => {\n                        onEdit(project);\n                        setShowMenu(false);\n                      }}\n                      className=\"flex items-center w-full px-4 py-2 text-sm text-gray-700 dark:text-gray-300 hover:bg-gray-50 dark:hover:bg-dark-secondary\"\n                      whileHover={{ x: 4 }}\n                      transition={{\n                        type: \"spring\",\n                        stiffness: 300,\n                        damping: 25,\n                      }}\n                    >\n                      <PencilIcon className=\"h-4 w-4 mr-3\" />\n                      편집\n                    </motion.button>\n                    <motion.button\n                      onClick={() => {\n                        onDelete(project.projectId, project.name);\n                        setShowMenu(false);\n                      }}\n                      className=\"flex items-center w-full px-4 py-2 text-sm text-red-700 dark:text-red-400 hover:bg-red-50 dark:hover:bg-red-900/20\"\n                      whileHover={{ x: 4 }}\n                      transition={{\n                        type: \"spring\",\n                        stiffness: 300,\n                        damping: 25,\n                      }}\n                    >\n                      <TrashIcon className=\"h-4 w-4 mr-3\" />\n                      삭제\n                    </motion.button>\n                  </div>\n                </motion.div>\n              )}\n            </AnimatePresence>\n          </div>\n        </div>\n\n        <div className=\"flex-1 overflow-y-auto\">\n          {/* 날짜 */}\n          <motion.div\n            className=\"flex items-center space-x-4 mb-3\"\n            initial={{ opacity: 0, y: 10 }}\n            animate={{ opacity: 1, y: 0 }}\n            transition={{ delay: 0.1 }}\n          >\n            <div className=\"flex items-center text-sm text-gray-500 dark:text-gray-300\">\n              <CalendarIcon className=\"h-4 w-4 mr-1.5\" />\n              <span>\n                생성 {new Date(project.createdAt).toLocaleDateString(\"ko-KR\")}\n              </span>\n            </div>\n            {project.updatedAt && project.updatedAt !== project.createdAt && (\n              <div className=\"flex items-center text-sm text-gray-500 dark:text-gray-300\">\n                <span className=\"text-gray-300 dark:text-gray-600\">•</span>\n                <span className=\"ml-1.5\">\n                  수정 {new Date(project.updatedAt).toLocaleDateString(\"ko-KR\")}\n                </span>\n              </div>\n            )}\n          </motion.div>\n\n          {/* 프롬프트 정보 */}\n          <motion.div\n            className=\"flex items-center space-x-4 mb-3\"\n            initial={{ opacity: 0, y: 10 }}\n            animate={{ opacity: 1, y: 0 }}\n            transition={{ delay: 0.2 }}\n          >\n            <div className=\"flex items-center text-sm text-gray-500 dark:text-gray-300\">\n              <DocumentTextIcon className=\"h-4 w-4 mr-1.5\" />\n              <span>프롬프트 클릭해 주세요</span>\n            </div>\n          </motion.div>\n\n          {/* 태그 */}\n          {project.tags && project.tags.length > 0 && (\n            <motion.div\n              className=\"mb-4\"\n              initial={{ opacity: 0, y: 10 }}\n              animate={{ opacity: 1, y: 0 }}\n              transition={{ delay: 0.3 }}\n            >\n              <div className=\"flex items-center\">\n                <TagIcon className=\"h-4 w-4 mr-1.5 text-gray-400 dark:text-gray-500\" />\n                <div className=\"flex flex-wrap gap-1.5\">\n                  {project.tags.slice(0, 3).map((tag, index) => (\n                    <motion.span\n                      key={index}\n                      custom={index}\n                      variants={tagVariants}\n                      initial=\"initial\"\n                      animate=\"animate\"\n                      whileHover=\"hover\"\n                      className=\"inline-flex items-center bg-gray-100 dark:bg-dark-tertiary text-gray-600 dark:text-gray-300 px-2.5 py-1 rounded-full text-xs font-medium\"\n                    >\n                      {tag}\n                    </motion.span>\n                  ))}\n                  {project.tags.length > 3 && (\n                    <motion.span\n                      className=\"inline-flex items-center text-xs text-gray-400 dark:text-gray-500 px-2\"\n                      initial={{ opacity: 0 }}\n                      animate={{ opacity: 1 }}\n                      transition={{ delay: 0.5 }}\n                    >\n                      +{project.tags.length - 3}개\n                    </motion.span>\n                  )}\n                </div>\n              </div>\n            </motion.div>\n          )}\n        </div>\n\n        {/* 호버 시 표시되는 추가 정보 - 고정 높이 */}\n        <div className=\"h-6 flex items-end\">\n          <AnimatePresence>\n            {isHovered && (\n              <motion.div\n                initial={{ opacity: 0, y: 10 }}\n                animate={{ opacity: 1, y: 0 }}\n                exit={{ opacity: 0, y: 10 }}\n                transition={{ duration: 0.2 }}\n                className=\"pt-2 w-full\"\n              >\n                <p className=\"text-xs text-blue-600 dark:text-blue-400 font-medium\">\n                  클릭하여 프로젝트 열기 →\n                </p>\n              </motion.div>\n            )}\n          </AnimatePresence>\n        </div>\n      </div>\n    </motion.div>\n  );\n};\n\nexport default AnimatedProjectCard;\n","import React, { useState, useEffect, useMemo, useRef } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { toast } from \"react-hot-toast\";\nimport {\n  FolderOpenIcon,\n  PlusIcon,\n  PencilIcon,\n  MagnifyingGlassIcon,\n  FunnelIcon,\n  Squares2X2Icon,\n  ListBulletIcon,\n  XMarkIcon,\n  ChevronDownIcon,\n  CheckIcon,\n} from \"@heroicons/react/24/outline\";\nimport { projectAPI, handleAPIError, filterProjects } from \"../services/api\";\nimport CreateProject from \"./CreateProject\";\nimport { usePrefetch } from \"../hooks/usePrefetch\";\nimport { ProjectListSkeleton } from \"./skeleton/SkeletonComponents\";\nimport AnimatedProjectCard from \"./AnimatedProjectCard\";\n\nconst ProjectList = () => {\n  const navigate = useNavigate();\n  const { prefetchProjectDetail, prefetchCreateProject } = usePrefetch();\n\n  // 상태 관리\n  const [projects, setProjects] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [searchQuery, setSearchQuery] = useState(\"\");\n  const [sortBy, setSortBy] = useState(\"updated\");\n  const [viewMode, setViewMode] = useState(\"grid\");\n  const [sortDropdownOpen, setSortDropdownOpen] = useState(false);\n  const sortDropdownRef = useRef(null);\n\n  // 프로젝트 편집 상태\n  const [editingProject, setEditingProject] = useState(null);\n  const [showEditModal, setShowEditModal] = useState(false);\n  const [showCreateModal, setShowCreateModal] = useState(false);\n\n  useEffect(() => {\n    loadProjects();\n  }, []);\n\n  // 드롭다운 외부 클릭 감지\n  useEffect(() => {\n    const handleClickOutside = (event) => {\n      if (\n        sortDropdownRef.current &&\n        !sortDropdownRef.current.contains(event.target)\n      ) {\n        setSortDropdownOpen(false);\n      }\n    };\n\n    document.addEventListener(\"mousedown\", handleClickOutside);\n    return () => {\n      document.removeEventListener(\"mousedown\", handleClickOutside);\n    };\n  }, []);\n\n  const loadProjects = async () => {\n    try {\n      console.log(\"🔄 loadProjects 시작\");\n      setLoading(true);\n      setError(null);\n      const data = await projectAPI.getProjects();\n      const projectsWithStats = data.projects || [];\n      console.log(\"📊 로드된 프로젝트 수:\", projectsWithStats.length);\n      console.log(\"📋 프로젝트 목록:\", projectsWithStats);\n\n      setProjects(projectsWithStats);\n    } catch (err) {\n      const errorInfo = handleAPIError(err);\n      setError(errorInfo.message);\n      toast.error(errorInfo.message);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const deleteProject = async (projectId, projectName) => {\n    if (!window.confirm(`\"${projectName}\" 프로젝트를 삭제하시겠습니까?`)) {\n      return;\n    }\n\n    // 낙관적 업데이트: 즉시 UI에서 프로젝트 제거\n    const originalProjects = [...projects];\n    const updatedProjects = projects.filter((p) => p.projectId !== projectId);\n    setProjects(updatedProjects);\n\n    // 즉시 성공 토스트 표시\n    toast.success(\"프로젝트가 삭제되었습니다\");\n\n    try {\n      // 백그라운드에서 실제 삭제 진행\n      await projectAPI.deleteProject(projectId);\n      console.log(\"프로젝트 삭제 성공:\", projectId);\n    } catch (err) {\n      console.error(\"프로젝트 삭제 오류:\", err);\n\n      // 실패 시 원래 상태로 복원\n      setProjects(originalProjects);\n\n      let errorMessage = \"프로젝트 삭제에 실패했습니다\";\n\n      if (err.response?.status === 403) {\n        errorMessage =\n          \"삭제 권한이 없습니다. S3 파일 삭제 권한을 확인해주세요.\";\n      } else if (err.response?.status === 404) {\n        errorMessage = \"이미 삭제된 프로젝트입니다\";\n        // 404의 경우 실제로는 삭제된 것이므로 복원하지 않음\n        return;\n      } else if (err.response) {\n        errorMessage =\n          err.response.data?.message || `서버 오류 (${err.response.status})`;\n      } else if (err.request) {\n        errorMessage = \"네트워크 오류: CORS 또는 연결 문제\";\n      }\n\n      toast.error(errorMessage);\n    }\n  };\n\n  // 프로젝트 편집 함수들\n  const handleEditProject = (project) => {\n    setEditingProject(project);\n    setShowEditModal(true);\n  };\n\n  const handleUpdateProject = async (projectData) => {\n    try {\n      await projectAPI.updateProject(editingProject.projectId, projectData);\n      toast.success(\"프로젝트가 수정되었습니다\");\n      setShowEditModal(false);\n      setEditingProject(null);\n      loadProjects();\n    } catch (err) {\n      const errorInfo = handleAPIError(err);\n      toast.error(`프로젝트 수정 실패: ${errorInfo.message}`);\n    }\n  };\n\n  const handleCancelEdit = () => {\n    setShowEditModal(false);\n    setEditingProject(null);\n  };\n\n  // 필터링된 프로젝트 목록\n  const filteredProjects = useMemo(() => {\n    return filterProjects(projects, {\n      searchQuery,\n      sortBy,\n    });\n  }, [projects, searchQuery, sortBy]);\n\n  // 정렬 옵션 데이터\n  const sortOptions = [\n    { value: \"created\", label: \"생성일순\" },\n    { value: \"updated\", label: \"수정일순\" },\n    { value: \"name\", label: \"이름순\" },\n  ];\n\n  const currentSortOption = sortOptions.find(\n    (option) => option.value === sortBy\n  );\n\n  if (loading) {\n    return <ProjectListSkeleton />;\n  }\n\n  if (error) {\n    return (\n      <div className=\"text-center py-12\">\n        <div className=\"text-red-600 mb-4\">⚠️ 오류가 발생했습니다</div>\n        <p className=\"text-gray-600 mb-6\">{error}</p>\n        <button\n          onClick={loadProjects}\n          className=\"bg-blue-600 text-white px-4 py-2 rounded-md hover:bg-blue-700\"\n        >\n          다시 시도\n        </button>\n      </div>\n    );\n  }\n\n  const handleCreateSuccess = () => {\n    console.log(\"📝 handleCreateSuccess 호출됨 - 프로젝트 목록 새로고침 시작\");\n    loadProjects(); // 프로젝트 목록 새로고침\n  };\n\n  return (\n    <div className=\"min-h-screen bg-gray-50 dark:bg-dark-primary transition-colors duration-300\">\n      <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-8\">\n        {/* 상단 헤더 제거 (불필요한 소개 영역) */}\n\n        {/* 필터링 바 */}\n        <div className=\"space-y-6\">\n          {/* 헤더 */}\n          <div className=\"flex flex-col lg:flex-row lg:items-center lg:justify-between gap-4\">\n            <div>\n              <h2 className=\"text-3xl font-bold text-gray-900 dark:text-white\">\n                프로젝트 목록\n              </h2>\n              <p className=\"text-gray-600 dark:text-gray-300 mt-1\">\n                AI 제목 생성 프로젝트를 관리하고 새로운 프로젝트를 생성하세요\n              </p>\n            </div>\n          </div>\n\n          {/* 필터링 바 */}\n          <div className=\"bg-white dark:bg-dark-secondary rounded-xl p-6 shadow-sm transition-colors duration-200\">\n            <div className=\"flex flex-col sm:flex-row gap-4\">\n              {/* 검색바 */}\n              <div className=\"flex-1 relative\">\n                <MagnifyingGlassIcon className=\"absolute left-3 top-1/2 transform -translate-y-1/2 h-5 w-5 text-gray-400\" />\n                <input\n                  type=\"text\"\n                  placeholder=\"프로젝트 이름, 설명, 태그로 검색...\"\n                  value={searchQuery}\n                  onChange={(e) => setSearchQuery(e.target.value)}\n                  className=\"w-full pl-10 pr-4 py-3 rounded-lg bg-white dark:bg-dark-tertiary text-gray-900 dark:text-white placeholder-gray-500 dark:placeholder-gray-400 focus:outline-none focus:ring-2 focus:ring-blue-500 transition-colors duration-200 border-0\"\n                  style={{ border: \"none\", boxShadow: \"none\" }}\n                />\n              </div>\n\n              {/* 정렬 옵션 - 커스텀 드롭다운 */}\n              <div className=\"flex items-center space-x-3\">\n                <FunnelIcon className=\"h-5 w-5 text-gray-400 flex-shrink-0\" />\n                <div className=\"relative\" ref={sortDropdownRef}>\n                  <button\n                    onClick={() => setSortDropdownOpen(!sortDropdownOpen)}\n                    className=\"flex items-center justify-between pl-4 pr-3 py-3 bg-white dark:bg-dark-tertiary rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500 transition-all duration-200 min-w-[140px]\"\n                  >\n                    <div className=\"flex items-center space-x-2\">\n                      <span className=\"text-gray-700 dark:text-gray-300 font-medium\">\n                        {currentSortOption?.label}\n                      </span>\n                    </div>\n                    <ChevronDownIcon\n                      className={`h-4 w-4 text-gray-400 transition-transform duration-200 ${\n                        sortDropdownOpen ? \"rotate-180\" : \"\"\n                      }`}\n                    />\n                  </button>\n\n                  {/* 드롭다운 메뉴 */}\n                  {sortDropdownOpen && (\n                    <div className=\"absolute top-full left-0 mt-1 w-full bg-white dark:bg-dark-tertiary rounded-lg shadow-lg z-50 overflow-hidden\">\n                      {sortOptions.map((option) => (\n                        <button\n                          key={option.value}\n                          onClick={() => {\n                            setSortBy(option.value);\n                            setSortDropdownOpen(false);\n                          }}\n                          className={`w-full flex items-center justify-between px-4 py-3 text-left hover:bg-gray-50 dark:hover:bg-dark-secondary transition-colors duration-150 ${\n                            sortBy === option.value\n                              ? \"bg-blue-50 dark:bg-blue-900 text-blue-600 dark:text-blue-400\"\n                              : \"text-gray-700 dark:text-gray-300\"\n                          }`}\n                        >\n                          <div className=\"flex items-center space-x-2\">\n                            <span className=\"font-medium\">{option.label}</span>\n                          </div>\n                          {sortBy === option.value && (\n                            <CheckIcon className=\"h-4 w-4 text-blue-600\" />\n                          )}\n                        </button>\n                      ))}\n                    </div>\n                  )}\n                </div>\n              </div>\n\n              {/* 뷰 모드 */}\n              <div className=\"flex items-center space-x-1 bg-gray-100 dark:bg-dark-tertiary rounded-lg p-1\">\n                <button\n                  onClick={() => setViewMode(\"grid\")}\n                  className={`p-2 rounded-md transition-all duration-200 ${\n                    viewMode === \"grid\"\n                      ? \"bg-white dark:bg-dark-secondary text-gray-900 dark:text-white shadow-sm\"\n                      : \"text-gray-600 dark:text-gray-400 hover:bg-gray-200 dark:hover:bg-dark-secondary\"\n                  }`}\n                >\n                  <Squares2X2Icon className=\"h-4 w-4\" />\n                </button>\n                <button\n                  onClick={() => setViewMode(\"list\")}\n                  className={`p-2 rounded-md transition-all duration-200 ${\n                    viewMode === \"list\"\n                      ? \"bg-white dark:bg-dark-secondary text-gray-900 dark:text-white shadow-sm\"\n                      : \"text-gray-600 dark:text-gray-400 hover:bg-gray-200 dark:hover:bg-dark-secondary\"\n                  }`}\n                >\n                  <ListBulletIcon className=\"h-4 w-4\" />\n                </button>\n              </div>\n\n              {/* 새 프로젝트 버튼 */}\n              <button\n                onClick={() => setShowCreateModal(true)}\n                onMouseEnter={prefetchCreateProject}\n                className=\"inline-flex items-center px-6 py-3 bg-blue-600 text-white dark:text-white rounded-lg hover:bg-blue-700 transition-colors font-medium\"\n              >\n                <PlusIcon className=\"h-4 w-4 mr-2 text-white dark:text-white\" />\n                새 프로젝트\n              </button>\n            </div>\n          </div>\n\n          {/* 프로젝트 목록 */}\n          {filteredProjects.length === 0 ? (\n            <div className=\"text-center py-16 bg-white dark:bg-dark-secondary rounded-xl transition-colors duration-200\">\n              <FolderOpenIcon className=\"mx-auto h-16 w-16 text-gray-400 mb-4\" />\n              <h3 className=\"text-xl font-medium text-gray-900 dark:text-white mb-2\">\n                {searchQuery\n                  ? \"조건에 맞는 프로젝트가 없습니다\"\n                  : \"프로젝트가 없습니다\"}\n              </h3>\n              <p className=\"text-gray-500 dark:text-gray-300 mb-8\">\n                {searchQuery\n                  ? \"다른 조건으로 검색해보세요\"\n                  : \"첫 번째 프로젝트를 생성해보세요\"}\n              </p>\n              <button\n                onClick={() => setShowCreateModal(true)}\n                onMouseEnter={prefetchCreateProject}\n                className=\"inline-flex items-center px-6 py-3 bg-blue-600 text-white dark:text-white rounded-lg hover:bg-blue-700 font-medium\"\n              >\n                <PlusIcon className=\"h-4 w-4 mr-2 text-white dark:text-white\" />\n                새 프로젝트 생성\n              </button>\n            </div>\n          ) : (\n            <div\n              className={\n                viewMode === \"grid\"\n                  ? \"grid gap-6 md:grid-cols-2 lg:grid-cols-3\"\n                  : \"space-y-4\"\n              }\n            >\n              {filteredProjects.map((project) => (\n                <AnimatedProjectCard\n                  key={project.projectId}\n                  project={project}\n                  onDelete={deleteProject}\n                  onEdit={handleEditProject}\n                  viewMode={viewMode}\n                  navigate={navigate}\n                  onMouseEnter={prefetchProjectDetail}\n                />\n              ))}\n            </div>\n          )}\n\n          {/* 새 프로젝트 생성 모달 */}\n          <CreateProject\n            isOpen={showCreateModal}\n            onClose={() => setShowCreateModal(false)}\n            onSuccess={handleCreateSuccess}\n          />\n\n          {/* 프로젝트 편집 모달 */}\n          <ProjectEditModal\n            project={editingProject}\n            isOpen={showEditModal}\n            onSave={handleUpdateProject}\n            onCancel={handleCancelEdit}\n          />\n        </div>\n      </div>\n    </div>\n  );\n};\n\n// 프로젝트 편집 모달 컴포넌트\nconst ProjectEditModal = ({ project, isOpen, onSave, onCancel }) => {\n  const [formData, setFormData] = useState({\n    name: \"\",\n    description: \"\",\n    tags: [],\n  });\n  const [tagInput, setTagInput] = useState(\"\");\n\n  useEffect(() => {\n    if (project) {\n      setFormData({\n        name: project.name || \"\",\n        description: project.description || \"\",\n        tags: Array.isArray(project.tags) ? [...project.tags] : [],\n      });\n    }\n  }, [project]);\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    if (!formData.name.trim()) {\n      toast.error(\"프로젝트 이름을 입력해주세요\");\n      return;\n    }\n    onSave(formData);\n  };\n\n  const handleModalClose = () => {\n    setTagInput(\"\");\n    onCancel();\n  };\n\n  // 태그 추가 함수\n  const addTag = () => {\n    const tag = tagInput.trim();\n    if (tag && !formData.tags.includes(tag) && formData.tags.length < 10) {\n      setFormData({\n        ...formData,\n        tags: [...formData.tags, tag],\n      });\n      setTagInput(\"\");\n    }\n  };\n\n  // 태그 제거 함수\n  const removeTag = (tagToRemove) => {\n    setFormData({\n      ...formData,\n      tags: formData.tags.filter((tag) => tag !== tagToRemove),\n    });\n  };\n\n  // Enter 키로 태그 추가\n  const handleTagKeyPress = (e) => {\n    if (e.key === \"Enter\") {\n      e.preventDefault();\n      addTag();\n    }\n  };\n\n  if (!isOpen) return null;\n\n  return (\n    <>\n      {/* 깔끔한 전체 화면 오버레이 */}\n      <div\n        className=\"fixed top-0 left-0 right-0 bottom-0 bg-black/50 backdrop-blur-sm transition-opacity\"\n        style={{\n          zIndex: 9999,\n          position: \"fixed\",\n          top: 0,\n          left: 0,\n          right: 0,\n          bottom: 0,\n          width: \"100vw\",\n          height: \"100vh\",\n        }}\n        onClick={handleModalClose}\n        aria-hidden=\"true\"\n      />\n\n      {/* 모달 컨테이너 */}\n      <div\n        className=\"fixed inset-0 flex items-center justify-center p-4\"\n        style={{ zIndex: 10000 }}\n        role=\"dialog\"\n        aria-modal=\"true\"\n        aria-labelledby=\"modal-title\"\n      >\n        <div className=\"bg-white dark:bg-dark-secondary rounded-2xl max-w-md w-full shadow-xl dark:shadow-none transform transition-all duration-300\">\n          <div className=\"p-6\">\n            <div className=\"flex items-center justify-between mb-6\">\n              <div className=\"flex items-center space-x-3\">\n                <PencilIcon className=\"h-6 w-6 text-gray-600 dark:text-gray-400\" />\n                <h3\n                  id=\"modal-title\"\n                  className=\"text-lg font-semibold text-gray-900 dark:text-white\"\n                >\n                  프로젝트 편집\n                </h3>\n              </div>\n              <button\n                onClick={handleModalClose}\n                className=\"text-gray-400 dark:text-gray-500 hover:text-gray-600 dark:hover:text-gray-300 transition-colors\"\n              >\n                <XMarkIcon className=\"h-5 w-5\" />\n              </button>\n            </div>\n\n            <div className=\"overflow-y-auto max-h-[calc(90vh-80px)]\">\n              <form onSubmit={handleSubmit} className=\"p-4 space-y-4\">\n                <div>\n                  <label className=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2\">\n                    프로젝트 이름 *\n                  </label>\n                  <input\n                    type=\"text\"\n                    value={formData.name}\n                    onChange={(e) =>\n                      setFormData({ ...formData, name: e.target.value })\n                    }\n                    className=\"w-full px-4 py-3 rounded-xl bg-gray-50 dark:bg-dark-tertiary text-gray-900 dark:text-white placeholder-gray-500 dark:placeholder-gray-400 focus:outline-none focus:ring-2 focus:ring-blue-500 transition-all duration-200 \"\n                    placeholder=\"프로젝트 이름을 입력하세요\"\n                    required\n                  />\n                </div>\n\n                {/* 프로젝트 설명 */}\n                <div className=\"space-y-2\">\n                  <label className=\"text-sm font-semibold text-gray-800 dark:text-gray-200\">\n                    프로젝트 설명\n                  </label>\n                  <textarea\n                    value={formData.description}\n                    onChange={(e) =>\n                      setFormData({ ...formData, description: e.target.value })\n                    }\n                    className=\"w-full px-4 py-3 rounded-xl bg-gray-50 dark:bg-dark-tertiary text-gray-900 dark:text-white placeholder-gray-500 dark:placeholder-gray-400 focus:outline-none focus:ring-2 focus:ring-blue-500 transition-all duration-200 resize-none \"\n                    placeholder=\"프로젝트에 대한 간단한 설명을 입력하세요\"\n                    rows={4}\n                  />\n                </div>\n\n                {/* 해시태그 */}\n                <div>\n                  <label className=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2\">\n                    태그 ({formData.tags.length}/10)\n                  </label>\n\n                  {/* 현재 태그들 */}\n                  {formData.tags.length > 0 && (\n                    <div className=\"flex flex-wrap gap-2 mb-3\">\n                      {formData.tags.map((tag, index) => (\n                        <span\n                          key={index}\n                          className=\"inline-flex items-center px-3 py-1 rounded-full text-sm bg-blue-100 dark:bg-blue-900 text-blue-800 dark:text-blue-200\"\n                        >\n                          {tag}\n                          <button\n                            type=\"button\"\n                            onClick={() => removeTag(tag)}\n                            className=\"ml-2 text-blue-600 dark:text-blue-400 hover:text-blue-800 dark:hover:text-blue-200\"\n                          >\n                            <XMarkIcon className=\"h-3 w-3\" />\n                          </button>\n                        </span>\n                      ))}\n                    </div>\n                  )}\n\n                  {/* 태그 입력 */}\n                  <div className=\"flex gap-2\">\n                    <input\n                      type=\"text\"\n                      value={tagInput}\n                      onChange={(e) => setTagInput(e.target.value)}\n                      onKeyPress={handleTagKeyPress}\n                      className=\"flex-1 px-4 py-3 rounded-xl bg-gray-50 dark:bg-dark-tertiary text-gray-900 dark:text-white placeholder-gray-500 dark:placeholder-gray-400 focus:outline-none focus:ring-2 focus:ring-blue-500 transition-all duration-200 \"\n                      placeholder=\"태그를 입력하세요\"\n                      maxLength={20}\n                    />\n                    <button\n                      type=\"button\"\n                      onClick={addTag}\n                      disabled={!tagInput.trim() || formData.tags.length >= 10}\n                      className=\"px-4 py-2 bg-blue-600 text-white rounded-lg hover:bg-blue-700 disabled:opacity-50 disabled:cursor-not-allowed\"\n                    >\n                      추가\n                    </button>\n                  </div>\n                  <p className=\"text-xs text-gray-500 dark:text-gray-400 mt-1\">\n                    태그는 최대 10개까지 추가할 수 있습니다. 각 태그는 20자\n                    이내로 입력하세요.\n                  </p>\n                </div>\n\n                <div className=\"flex justify-end space-x-3 pt-4\">\n                  <button\n                    type=\"button\"\n                    onClick={handleModalClose}\n                    className=\"px-6 py-2.5 text-gray-700 dark:text-gray-300 bg-gray-100 dark:bg-dark-tertiary rounded-lg hover:bg-gray-200 dark:hover:bg-dark-primary transition-colors duration-200 font-medium\"\n                  >\n                    취소\n                  </button>\n                  <button\n                    type=\"submit\"\n                    disabled={!formData.name.trim()}\n                    className=\"px-6 py-2.5 bg-gradient-to-r from-blue-600 to-blue-700 hover:from-blue-700 hover:to-blue-800 text-white rounded-lg disabled:opacity-50 disabled:cursor-not-allowed transition-all duration-200 font-medium shadow-lg hover:shadow-xl\"\n                  >\n                    저장\n                  </button>\n                </div>\n              </form>\n            </div>\n          </div>\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default ProjectList;\n","import { useCallback } from 'react';\n\n/**\n * 컴포넌트 프리로딩을 위한 커스텀 훅\n */\nexport const usePrefetch = () => {\n  // 프로젝트 상세 페이지 프리로딩\n  const prefetchProjectDetail = useCallback(() => {\n    // ProjectDetail 컴포넌트를 미리 로드\n    import('../components/ProjectDetail').then(() => {\n      console.log('🚀 ProjectDetail 컴포넌트 프리로드 완료');\n    }).catch((error) => {\n      console.warn('⚠️ ProjectDetail 프리로드 실패:', error);\n    });\n  }, []);\n\n  // 프로젝트 생성 페이지 프리로딩  \n  const prefetchCreateProject = useCallback(() => {\n    import('../components/CreateProject').then(() => {\n      console.log('🚀 CreateProject 컴포넌트 프리로드 완료');\n    }).catch((error) => {\n      console.warn('⚠️ CreateProject 프리로드 실패:', error);\n    });\n  }, []);\n\n  return {\n    prefetchProjectDetail,\n    prefetchCreateProject,\n  };\n};\n\n/**\n * 링크 프리페칭을 위한 유틸리티\n */\nexport const useLinkPrefetch = () => {\n  const prefetchRoute = useCallback((path) => {\n    // 특정 경로에 해당하는 컴포넌트를 프리로드\n    if (path.startsWith('/projects/') && path !== '/projects') {\n      // 프로젝트 상세 페이지\n      import('../components/ProjectDetail').catch(() => {});\n    } else if (path === '/projects') {\n      // 프로젝트 목록 페이지\n      import('../components/ProjectList').catch(() => {});\n    } else if (path === '/create') {\n      // 프로젝트 생성 페이지\n      import('../components/CreateProject').catch(() => {});\n    }\n  }, []);\n\n  return { prefetchRoute };\n};"],"names":["shimmerEffect","SkeletonBox","_ref","width","height","className","_jsx","SkeletonCircle","_ref2","size","ChatMessageSkeleton","_ref3","isUser","children","_jsxs","ProjectCardSkeleton","ProjectListSkeleton","_ref4","count","Array","from","length","_","index","ChatInterfaceSkeleton","isOpen","onClose","onSuccess","loading","setLoading","useState","formData","setFormData","name","description","tags","tagInput","setTagInput","BookmarkIcon","onClick","XMarkIcon","onSubmit","async","e","preventDefault","trim","response","projectAPI","createProject","toast","success","error","console","errorInfo","handleAPIError","message","type","value","onChange","prev","target","placeholder","required","rows","HashtagIcon","onKeyPress","key","newTag","includes","map","tag","handleTagRemove","tagToRemove","filter","disabled","_Fragment","PlusIcon","project","onDelete","onEdit","viewMode","navigate","onMouseEnter","showMenu","setShowMenu","isHovered","setIsHovered","isDark","useTheme","menuRef","useRef","useEffect","handleClickOutside","event","current","contains","document","addEventListener","removeEventListener","tagVariants","initial","opacity","x","animate","i","transition","delay","stiffness","damping","hover","scale","motion","div","variants","y","boxShadow","tap","whileHover","whileTap","onHoverStart","onHoverEnd","closest","projectId","rotate","DocumentTextIcon","h3","color","duration","ref","button","title","style","border","EllipsisHorizontalIcon","AnimatePresence","hidden","visible","exit","PencilIcon","TrashIcon","CalendarIcon","Date","createdAt","toLocaleDateString","updatedAt","TagIcon","slice","span","custom","ProjectEditModal","onSave","onCancel","isArray","handleModalClose","addTag","zIndex","position","top","left","right","bottom","role","id","removeTag","maxLength","ProjectList","useNavigate","prefetchProjectDetail","prefetchCreateProject","useCallback","then","log","catch","warn","projects","setProjects","setError","searchQuery","setSearchQuery","sortBy","setSortBy","setViewMode","sortDropdownOpen","setSortDropdownOpen","sortDropdownRef","editingProject","setEditingProject","showEditModal","setShowEditModal","showCreateModal","setShowCreateModal","loadProjects","projectsWithStats","getProjects","err","deleteProject","projectName","window","confirm","originalProjects","updatedProjects","p","_err$response","_err$response2","errorMessage","status","_err$response$data","data","request","handleEditProject","filteredProjects","useMemo","filterProjects","sortOptions","label","currentSortOption","find","option","MagnifyingGlassIcon","FunnelIcon","ChevronDownIcon","CheckIcon","Squares2X2Icon","ListBulletIcon","FolderOpenIcon","AnimatedProjectCard","CreateProject","handleCreateSuccess","updateProject","projectData","handleCancelEdit"],"sourceRoot":""}