{"version":3,"file":"static/js/362.1d81616e.chunk.js","mappings":"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","sources":["../node_modules/@heroicons/react/24/outline/esm/MagnifyingGlassIcon.js","../node_modules/@heroicons/react/24/outline/esm/FunnelIcon.js","../node_modules/@heroicons/react/24/outline/esm/ChevronDownIcon.js","../node_modules/@heroicons/react/24/outline/esm/CheckIcon.js","../node_modules/@heroicons/react/24/outline/esm/Squares2X2Icon.js","../node_modules/@heroicons/react/24/outline/esm/ListBulletIcon.js","../node_modules/@heroicons/react/24/outline/esm/FolderOpenIcon.js","../node_modules/@heroicons/react/24/outline/esm/EllipsisHorizontalIcon.js","../node_modules/@heroicons/react/24/outline/esm/CalendarIcon.js","../node_modules/@heroicons/react/24/outline/esm/TagIcon.js","components/AnimatedProjectCard.js","components/ProjectList.js","hooks/usePrefetch.js","../node_modules/@heroicons/react/24/outline/esm/BookmarkIcon.js","components/CreateProject.js","components/skeleton/SkeletonComponents.js"],"sourcesContent":["import * as React from \"react\";\nfunction MagnifyingGlassIcon({\n  title,\n  titleId,\n  ...props\n}, svgRef) {\n  return /*#__PURE__*/React.createElement(\"svg\", Object.assign({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    fill: \"none\",\n    viewBox: \"0 0 24 24\",\n    strokeWidth: 1.5,\n    stroke: \"currentColor\",\n    \"aria-hidden\": \"true\",\n    \"data-slot\": \"icon\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, /*#__PURE__*/React.createElement(\"path\", {\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    d: \"m21 21-5.197-5.197m0 0A7.5 7.5 0 1 0 5.196 5.196a7.5 7.5 0 0 0 10.607 10.607Z\"\n  }));\n}\nconst ForwardRef = /*#__PURE__*/ React.forwardRef(MagnifyingGlassIcon);\nexport default ForwardRef;","import * as React from \"react\";\nfunction FunnelIcon({\n  title,\n  titleId,\n  ...props\n}, svgRef) {\n  return /*#__PURE__*/React.createElement(\"svg\", Object.assign({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    fill: \"none\",\n    viewBox: \"0 0 24 24\",\n    strokeWidth: 1.5,\n    stroke: \"currentColor\",\n    \"aria-hidden\": \"true\",\n    \"data-slot\": \"icon\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, /*#__PURE__*/React.createElement(\"path\", {\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    d: \"M12 3c2.755 0 5.455.232 8.083.678.533.09.917.556.917 1.096v1.044a2.25 2.25 0 0 1-.659 1.591l-5.432 5.432a2.25 2.25 0 0 0-.659 1.591v2.927a2.25 2.25 0 0 1-1.244 2.013L9.75 21v-6.568a2.25 2.25 0 0 0-.659-1.591L3.659 7.409A2.25 2.25 0 0 1 3 5.818V4.774c0-.54.384-1.006.917-1.096A48.32 48.32 0 0 1 12 3Z\"\n  }));\n}\nconst ForwardRef = /*#__PURE__*/ React.forwardRef(FunnelIcon);\nexport default ForwardRef;","import * as React from \"react\";\nfunction ChevronDownIcon({\n  title,\n  titleId,\n  ...props\n}, svgRef) {\n  return /*#__PURE__*/React.createElement(\"svg\", Object.assign({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    fill: \"none\",\n    viewBox: \"0 0 24 24\",\n    strokeWidth: 1.5,\n    stroke: \"currentColor\",\n    \"aria-hidden\": \"true\",\n    \"data-slot\": \"icon\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, /*#__PURE__*/React.createElement(\"path\", {\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    d: \"m19.5 8.25-7.5 7.5-7.5-7.5\"\n  }));\n}\nconst ForwardRef = /*#__PURE__*/ React.forwardRef(ChevronDownIcon);\nexport default ForwardRef;","import * as React from \"react\";\nfunction CheckIcon({\n  title,\n  titleId,\n  ...props\n}, svgRef) {\n  return /*#__PURE__*/React.createElement(\"svg\", Object.assign({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    fill: \"none\",\n    viewBox: \"0 0 24 24\",\n    strokeWidth: 1.5,\n    stroke: \"currentColor\",\n    \"aria-hidden\": \"true\",\n    \"data-slot\": \"icon\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, /*#__PURE__*/React.createElement(\"path\", {\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    d: \"m4.5 12.75 6 6 9-13.5\"\n  }));\n}\nconst ForwardRef = /*#__PURE__*/ React.forwardRef(CheckIcon);\nexport default ForwardRef;","import * as React from \"react\";\nfunction Squares2X2Icon({\n  title,\n  titleId,\n  ...props\n}, svgRef) {\n  return /*#__PURE__*/React.createElement(\"svg\", Object.assign({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    fill: \"none\",\n    viewBox: \"0 0 24 24\",\n    strokeWidth: 1.5,\n    stroke: \"currentColor\",\n    \"aria-hidden\": \"true\",\n    \"data-slot\": \"icon\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, /*#__PURE__*/React.createElement(\"path\", {\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    d: \"M3.75 6A2.25 2.25 0 0 1 6 3.75h2.25A2.25 2.25 0 0 1 10.5 6v2.25a2.25 2.25 0 0 1-2.25 2.25H6a2.25 2.25 0 0 1-2.25-2.25V6ZM3.75 15.75A2.25 2.25 0 0 1 6 13.5h2.25a2.25 2.25 0 0 1 2.25 2.25V18a2.25 2.25 0 0 1-2.25 2.25H6A2.25 2.25 0 0 1 3.75 18v-2.25ZM13.5 6a2.25 2.25 0 0 1 2.25-2.25H18A2.25 2.25 0 0 1 20.25 6v2.25A2.25 2.25 0 0 1 18 10.5h-2.25a2.25 2.25 0 0 1-2.25-2.25V6ZM13.5 15.75a2.25 2.25 0 0 1 2.25-2.25H18a2.25 2.25 0 0 1 2.25 2.25V18A2.25 2.25 0 0 1 18 20.25h-2.25A2.25 2.25 0 0 1 13.5 18v-2.25Z\"\n  }));\n}\nconst ForwardRef = /*#__PURE__*/ React.forwardRef(Squares2X2Icon);\nexport default ForwardRef;","import * as React from \"react\";\nfunction ListBulletIcon({\n  title,\n  titleId,\n  ...props\n}, svgRef) {\n  return /*#__PURE__*/React.createElement(\"svg\", Object.assign({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    fill: \"none\",\n    viewBox: \"0 0 24 24\",\n    strokeWidth: 1.5,\n    stroke: \"currentColor\",\n    \"aria-hidden\": \"true\",\n    \"data-slot\": \"icon\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, /*#__PURE__*/React.createElement(\"path\", {\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    d: \"M8.25 6.75h12M8.25 12h12m-12 5.25h12M3.75 6.75h.007v.008H3.75V6.75Zm.375 0a.375.375 0 1 1-.75 0 .375.375 0 0 1 .75 0ZM3.75 12h.007v.008H3.75V12Zm.375 0a.375.375 0 1 1-.75 0 .375.375 0 0 1 .75 0Zm-.375 5.25h.007v.008H3.75v-.008Zm.375 0a.375.375 0 1 1-.75 0 .375.375 0 0 1 .75 0Z\"\n  }));\n}\nconst ForwardRef = /*#__PURE__*/ React.forwardRef(ListBulletIcon);\nexport default ForwardRef;","import * as React from \"react\";\nfunction FolderOpenIcon({\n  title,\n  titleId,\n  ...props\n}, svgRef) {\n  return /*#__PURE__*/React.createElement(\"svg\", Object.assign({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    fill: \"none\",\n    viewBox: \"0 0 24 24\",\n    strokeWidth: 1.5,\n    stroke: \"currentColor\",\n    \"aria-hidden\": \"true\",\n    \"data-slot\": \"icon\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, /*#__PURE__*/React.createElement(\"path\", {\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    d: \"M3.75 9.776c.112-.017.227-.026.344-.026h15.812c.117 0 .232.009.344.026m-16.5 0a2.25 2.25 0 0 0-1.883 2.542l.857 6a2.25 2.25 0 0 0 2.227 1.932H19.05a2.25 2.25 0 0 0 2.227-1.932l.857-6a2.25 2.25 0 0 0-1.883-2.542m-16.5 0V6A2.25 2.25 0 0 1 6 3.75h3.879a1.5 1.5 0 0 1 1.06.44l2.122 2.12a1.5 1.5 0 0 0 1.06.44H18A2.25 2.25 0 0 1 20.25 9v.776\"\n  }));\n}\nconst ForwardRef = /*#__PURE__*/ React.forwardRef(FolderOpenIcon);\nexport default ForwardRef;","import * as React from \"react\";\nfunction EllipsisHorizontalIcon({\n  title,\n  titleId,\n  ...props\n}, svgRef) {\n  return /*#__PURE__*/React.createElement(\"svg\", Object.assign({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    fill: \"none\",\n    viewBox: \"0 0 24 24\",\n    strokeWidth: 1.5,\n    stroke: \"currentColor\",\n    \"aria-hidden\": \"true\",\n    \"data-slot\": \"icon\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, /*#__PURE__*/React.createElement(\"path\", {\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    d: \"M6.75 12a.75.75 0 1 1-1.5 0 .75.75 0 0 1 1.5 0ZM12.75 12a.75.75 0 1 1-1.5 0 .75.75 0 0 1 1.5 0ZM18.75 12a.75.75 0 1 1-1.5 0 .75.75 0 0 1 1.5 0Z\"\n  }));\n}\nconst ForwardRef = /*#__PURE__*/ React.forwardRef(EllipsisHorizontalIcon);\nexport default ForwardRef;","import * as React from \"react\";\nfunction CalendarIcon({\n  title,\n  titleId,\n  ...props\n}, svgRef) {\n  return /*#__PURE__*/React.createElement(\"svg\", Object.assign({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    fill: \"none\",\n    viewBox: \"0 0 24 24\",\n    strokeWidth: 1.5,\n    stroke: \"currentColor\",\n    \"aria-hidden\": \"true\",\n    \"data-slot\": \"icon\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, /*#__PURE__*/React.createElement(\"path\", {\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    d: \"M6.75 3v2.25M17.25 3v2.25M3 18.75V7.5a2.25 2.25 0 0 1 2.25-2.25h13.5A2.25 2.25 0 0 1 21 7.5v11.25m-18 0A2.25 2.25 0 0 0 5.25 21h13.5A2.25 2.25 0 0 0 21 18.75m-18 0v-7.5A2.25 2.25 0 0 1 5.25 9h13.5A2.25 2.25 0 0 1 21 11.25v7.5\"\n  }));\n}\nconst ForwardRef = /*#__PURE__*/ React.forwardRef(CalendarIcon);\nexport default ForwardRef;","import * as React from \"react\";\nfunction TagIcon({\n  title,\n  titleId,\n  ...props\n}, svgRef) {\n  return /*#__PURE__*/React.createElement(\"svg\", Object.assign({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    fill: \"none\",\n    viewBox: \"0 0 24 24\",\n    strokeWidth: 1.5,\n    stroke: \"currentColor\",\n    \"aria-hidden\": \"true\",\n    \"data-slot\": \"icon\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, /*#__PURE__*/React.createElement(\"path\", {\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    d: \"M9.568 3H5.25A2.25 2.25 0 0 0 3 5.25v4.318c0 .597.237 1.17.659 1.591l9.581 9.581c.699.699 1.78.872 2.607.33a18.095 18.095 0 0 0 5.223-5.223c.542-.827.369-1.908-.33-2.607L11.16 3.66A2.25 2.25 0 0 0 9.568 3Z\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    d: \"M6 6h.008v.008H6V6Z\"\n  }));\n}\nconst ForwardRef = /*#__PURE__*/ React.forwardRef(TagIcon);\nexport default ForwardRef;","import React, { useState, useRef, useEffect } from 'react';\nimport { motion, AnimatePresence } from 'framer-motion';\nimport {\n  DocumentTextIcon,\n  EllipsisHorizontalIcon,\n  PencilIcon,\n  TrashIcon,\n  CalendarIcon,\n  TagIcon,\n} from '@heroicons/react/24/outline';\n\nconst AnimatedProjectCard = ({ project, onDelete, onEdit, viewMode, navigate, onMouseEnter }) => {\n  const [showMenu, setShowMenu] = useState(false);\n  const [isHovered, setIsHovered] = useState(false);\n  const menuRef = useRef(null);\n\n  const handleCardClick = (e) => {\n    if (e.target.closest('button') || e.target.closest('a')) {\n      return;\n    }\n    navigate(`/projects/${project.projectId}`);\n  };\n\n  useEffect(() => {\n    const handleClickOutside = (event) => {\n      if (menuRef.current && !menuRef.current.contains(event.target)) {\n        setShowMenu(false);\n      }\n    };\n\n    document.addEventListener('mousedown', handleClickOutside);\n    return () => {\n      document.removeEventListener('mousedown', handleClickOutside);\n    };\n  }, []);\n\n  const cardVariants = {\n    initial: { \n      scale: 1, \n      y: 0,\n      boxShadow: \"0 1px 3px 0 rgba(0, 0, 0, 0.1), 0 1px 2px 0 rgba(0, 0, 0, 0.06)\"\n    },\n    hover: { \n      scale: 1.02,\n      y: -4,\n      boxShadow: \"0 10px 25px -3px rgba(0, 0, 0, 0.1), 0 4px 6px -2px rgba(0, 0, 0, 0.05)\",\n      transition: {\n        type: \"spring\",\n        stiffness: 300,\n        damping: 20\n      }\n    },\n    tap: { \n      scale: 0.98,\n      transition: {\n        type: \"spring\",\n        stiffness: 400,\n        damping: 25\n      }\n    }\n  };\n\n  const iconVariants = {\n    initial: { scale: 1, rotate: 0 },\n    hover: { \n      scale: 1.1, \n      rotate: 5,\n      transition: {\n        type: \"spring\",\n        stiffness: 300,\n        damping: 20\n      }\n    }\n  };\n\n  const menuVariants = {\n    hidden: {\n      opacity: 0,\n      scale: 0.95,\n      y: -10,\n      transition: {\n        duration: 0.1\n      }\n    },\n    visible: {\n      opacity: 1,\n      scale: 1,\n      y: 0,\n      transition: {\n        type: \"spring\",\n        stiffness: 300,\n        damping: 25\n      }\n    }\n  };\n\n  const tagVariants = {\n    initial: { opacity: 0, x: -10 },\n    animate: (i) => ({\n      opacity: 1,\n      x: 0,\n      transition: {\n        delay: i * 0.1,\n        type: \"spring\",\n        stiffness: 300,\n        damping: 25\n      }\n    }),\n    hover: {\n      scale: 1.05,\n      transition: {\n        type: \"spring\",\n        stiffness: 400,\n        damping: 20\n      }\n    }\n  };\n\n  return (\n    <motion.div\n      variants={cardVariants}\n      initial=\"initial\"\n      whileHover=\"hover\"\n      whileTap=\"tap\"\n      onHoverStart={() => {\n        setIsHovered(true);\n        if (onMouseEnter) onMouseEnter();\n      }}\n      onHoverEnd={() => setIsHovered(false)}\n      onClick={handleCardClick}\n      className=\"bg-white dark:bg-gray-800 rounded-xl border border-gray-200 dark:border-gray-700 transition-colors duration-200 cursor-pointer h-[280px] flex flex-col overflow-hidden\"\n    >\n      <div className=\"p-6 flex flex-col flex-1\">\n        <div className=\"flex justify-between items-start mb-4\">\n          <div className=\"flex items-center space-x-3\">\n            <motion.div \n              variants={iconVariants}\n              className=\"flex-shrink-0\"\n            >\n              <DocumentTextIcon className=\"h-8 w-8 text-blue-600 dark:text-blue-400\" />\n            </motion.div>\n            <div>\n              <motion.h3 \n                className=\"text-lg font-semibold text-gray-900 dark:text-white truncate\"\n                animate={{\n                  color: isHovered ? '#3B82F6' : undefined\n                }}\n                transition={{ duration: 0.2 }}\n              >\n                {project.name}\n              </motion.h3>\n              <p className=\"text-sm text-gray-500 dark:text-gray-400 mt-1 line-clamp-2\">\n                {project.description || '설명 없음'}\n              </p>\n            </div>\n          </div>\n\n          <div className=\"relative\" ref={menuRef}>\n            <motion.button\n              onClick={() => setShowMenu(!showMenu)}\n              className=\"p-2 text-gray-400 hover:text-gray-600 dark:hover:text-gray-300 rounded-lg hover:bg-gray-100 dark:hover:bg-gray-700 transition-colors\"\n              whileHover={{ scale: 1.1 }}\n              whileTap={{ scale: 0.95 }}\n              title=\"프로젝트 옵션\"\n            >\n              <EllipsisHorizontalIcon className=\"h-5 w-5\" />\n            </motion.button>\n\n            <AnimatePresence>\n              {showMenu && (\n                <motion.div\n                  variants={menuVariants}\n                  initial=\"hidden\"\n                  animate=\"visible\"\n                  exit=\"hidden\"\n                  className=\"absolute right-0 mt-2 w-48 bg-white dark:bg-gray-700 rounded-lg shadow-lg ring-1 ring-black ring-opacity-5 z-10\"\n                >\n                  <div className=\"py-1\">\n                    <motion.button\n                      onClick={() => {\n                        onEdit(project);\n                        setShowMenu(false);\n                      }}\n                      className=\"flex items-center w-full px-4 py-2 text-sm text-gray-700 dark:text-gray-300 hover:bg-gray-50 dark:hover:bg-gray-600\"\n                      whileHover={{ x: 4 }}\n                      transition={{ type: \"spring\", stiffness: 300, damping: 25 }}\n                    >\n                      <PencilIcon className=\"h-4 w-4 mr-3\" />\n                      편집\n                    </motion.button>\n                    <motion.button\n                      onClick={() => {\n                        onDelete(project.projectId, project.name);\n                        setShowMenu(false);\n                      }}\n                      className=\"flex items-center w-full px-4 py-2 text-sm text-red-700 dark:text-red-400 hover:bg-red-50 dark:hover:bg-red-900\"\n                      whileHover={{ x: 4 }}\n                      transition={{ type: \"spring\", stiffness: 300, damping: 25 }}\n                    >\n                      <TrashIcon className=\"h-4 w-4 mr-3\" />\n                      삭제\n                    </motion.button>\n                  </div>\n                </motion.div>\n              )}\n            </AnimatePresence>\n          </div>\n        </div>\n\n        <div className=\"flex-1 overflow-y-auto\">\n          {/* 날짜 */}\n          <motion.div \n            className=\"flex items-center space-x-4 mb-3\"\n            initial={{ opacity: 0, y: 10 }}\n            animate={{ opacity: 1, y: 0 }}\n            transition={{ delay: 0.1 }}\n          >\n            <div className=\"flex items-center text-sm text-gray-500 dark:text-gray-400\">\n              <CalendarIcon className=\"h-4 w-4 mr-1.5\" />\n              <span>\n                생성 {new Date(project.createdAt).toLocaleDateString('ko-KR')}\n              </span>\n            </div>\n            {project.updatedAt && project.updatedAt !== project.createdAt && (\n              <div className=\"flex items-center text-sm text-gray-500 dark:text-gray-400\">\n                <span className=\"text-gray-300 dark:text-gray-600\">•</span>\n                <span className=\"ml-1.5\">\n                  수정 {new Date(project.updatedAt).toLocaleDateString('ko-KR')}\n                </span>\n              </div>\n            )}\n          </motion.div>\n\n          {/* 프롬프트 정보 */}\n          <motion.div \n            className=\"flex items-center space-x-4 mb-3\"\n            initial={{ opacity: 0, y: 10 }}\n            animate={{ opacity: 1, y: 0 }}\n            transition={{ delay: 0.2 }}\n          >\n            <div className=\"flex items-center text-sm text-gray-500 dark:text-gray-400\">\n              <DocumentTextIcon className=\"h-4 w-4 mr-1.5\" />\n              <span>프롬프트 클릭해 주세요</span>\n            </div>\n          </motion.div>\n\n          {/* 태그 */}\n          {project.tags && project.tags.length > 0 && (\n            <motion.div \n              className=\"mb-4\"\n              initial={{ opacity: 0, y: 10 }}\n              animate={{ opacity: 1, y: 0 }}\n              transition={{ delay: 0.3 }}\n            >\n              <div className=\"flex items-center\">\n                <TagIcon className=\"h-4 w-4 mr-1.5 text-gray-400 dark:text-gray-500\" />\n                <div className=\"flex flex-wrap gap-1.5\">\n                  {project.tags.slice(0, 3).map((tag, index) => (\n                    <motion.span\n                      key={index}\n                      custom={index}\n                      variants={tagVariants}\n                      initial=\"initial\"\n                      animate=\"animate\"\n                      whileHover=\"hover\"\n                      className=\"inline-flex items-center bg-gray-100 dark:bg-gray-700 text-gray-600 dark:text-gray-300 px-2.5 py-1 rounded-full text-xs font-medium\"\n                    >\n                      {tag}\n                    </motion.span>\n                  ))}\n                  {project.tags.length > 3 && (\n                    <motion.span \n                      className=\"inline-flex items-center text-xs text-gray-400 dark:text-gray-500 px-2\"\n                      initial={{ opacity: 0 }}\n                      animate={{ opacity: 1 }}\n                      transition={{ delay: 0.5 }}\n                    >\n                      +{project.tags.length - 3}개\n                    </motion.span>\n                  )}\n                </div>\n              </div>\n            </motion.div>\n          )}\n        </div>\n\n        {/* 호버 시 표시되는 추가 정보 - 고정 높이 */}\n        <div className=\"h-6 flex items-end\">\n          <AnimatePresence>\n            {isHovered && (\n              <motion.div\n                initial={{ opacity: 0, y: 10 }}\n                animate={{ opacity: 1, y: 0 }}\n                exit={{ opacity: 0, y: 10 }}\n                transition={{ duration: 0.2 }}\n                className=\"border-t border-gray-200 dark:border-gray-700 pt-2 w-full\"\n              >\n                <p className=\"text-xs text-blue-600 dark:text-blue-400 font-medium\">\n                  클릭하여 프로젝트 열기 →\n                </p>\n              </motion.div>\n            )}\n          </AnimatePresence>\n        </div>\n      </div>\n    </motion.div>\n  );\n};\n\nexport default AnimatedProjectCard;","import React, { useState, useEffect, useMemo, useRef } from \"react\";\nimport { Link, useNavigate } from \"react-router-dom\";\nimport { toast } from \"react-hot-toast\";\nimport {\n  FolderOpenIcon,\n  PlusIcon,\n  EllipsisHorizontalIcon,\n  TrashIcon,\n  PencilIcon,\n  CalendarIcon,\n  DocumentTextIcon,\n  MagnifyingGlassIcon,\n  FunnelIcon,\n  Squares2X2Icon,\n  ListBulletIcon,\n  TagIcon,\n  XMarkIcon,\n  ChevronDownIcon,\n  CheckIcon,\n} from \"@heroicons/react/24/outline\";\nimport { projectAPI, handleAPIError, filterProjects } from \"../services/api\";\nimport CreateProject from \"./CreateProject\";\nimport { usePrefetch } from \"../hooks/usePrefetch\";\nimport { ProjectListSkeleton } from \"./skeleton/SkeletonComponents\";\nimport AnimatedProjectCard from \"./AnimatedProjectCard\";\n\nconst ProjectList = () => {\n  const navigate = useNavigate();\n  const { prefetchProjectDetail, prefetchCreateProject } = usePrefetch();\n  \n  // 상태 관리\n  const [projects, setProjects] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [searchQuery, setSearchQuery] = useState(\"\");\n  const [sortBy, setSortBy] = useState(\"updated\");\n  const [viewMode, setViewMode] = useState(\"grid\");\n  const [sortDropdownOpen, setSortDropdownOpen] = useState(false);\n  const sortDropdownRef = useRef(null);\n\n  // 프로젝트 편집 상태\n  const [editingProject, setEditingProject] = useState(null);\n  const [showEditModal, setShowEditModal] = useState(false);\n  const [showCreateModal, setShowCreateModal] = useState(false);\n\n  useEffect(() => {\n    loadProjects();\n  }, []);\n\n  // 드롭다운 외부 클릭 감지\n  useEffect(() => {\n    const handleClickOutside = (event) => {\n      if (\n        sortDropdownRef.current &&\n        !sortDropdownRef.current.contains(event.target)\n      ) {\n        setSortDropdownOpen(false);\n      }\n    };\n\n    document.addEventListener(\"mousedown\", handleClickOutside);\n    return () => {\n      document.removeEventListener(\"mousedown\", handleClickOutside);\n    };\n  }, []);\n\n  const loadProjects = async () => {\n    try {\n      console.log(\"🔄 loadProjects 시작\");\n      setLoading(true);\n      setError(null);\n      const data = await projectAPI.getProjects();\n      const projectsWithStats = data.projects || [];\n      console.log(\"📊 로드된 프로젝트 수:\", projectsWithStats.length);\n      console.log(\"📋 프로젝트 목록:\", projectsWithStats);\n\n      setProjects(projectsWithStats);\n    } catch (err) {\n      const errorInfo = handleAPIError(err);\n      setError(errorInfo.message);\n      toast.error(errorInfo.message);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const deleteProject = async (projectId, projectName) => {\n    if (!window.confirm(`\"${projectName}\" 프로젝트를 삭제하시겠습니까?`)) {\n      return;\n    }\n\n    // 낙관적 업데이트: 즉시 UI에서 프로젝트 제거\n    const originalProjects = [...projects];\n    const updatedProjects = projects.filter((p) => p.projectId !== projectId);\n    setProjects(updatedProjects);\n\n    // 즉시 성공 토스트 표시\n    toast.success(\"프로젝트가 삭제되었습니다\");\n\n    try {\n      // 백그라운드에서 실제 삭제 진행\n      await projectAPI.deleteProject(projectId);\n      console.log(\"프로젝트 삭제 성공:\", projectId);\n    } catch (err) {\n      console.error(\"프로젝트 삭제 오류:\", err);\n\n      // 실패 시 원래 상태로 복원\n      setProjects(originalProjects);\n\n      let errorMessage = \"프로젝트 삭제에 실패했습니다\";\n\n      if (err.response?.status === 403) {\n        errorMessage =\n          \"삭제 권한이 없습니다. S3 파일 삭제 권한을 확인해주세요.\";\n      } else if (err.response?.status === 404) {\n        errorMessage = \"이미 삭제된 프로젝트입니다\";\n        // 404의 경우 실제로는 삭제된 것이므로 복원하지 않음\n        return;\n      } else if (err.response) {\n        errorMessage =\n          err.response.data?.message || `서버 오류 (${err.response.status})`;\n      } else if (err.request) {\n        errorMessage = \"네트워크 오류: CORS 또는 연결 문제\";\n      }\n\n      toast.error(errorMessage);\n    }\n  };\n\n  // 프로젝트 편집 함수들\n  const handleEditProject = (project) => {\n    setEditingProject(project);\n    setShowEditModal(true);\n  };\n\n  const handleUpdateProject = async (projectData) => {\n    try {\n      await projectAPI.updateProject(editingProject.projectId, projectData);\n      toast.success(\"프로젝트가 수정되었습니다\");\n      setShowEditModal(false);\n      setEditingProject(null);\n      loadProjects();\n    } catch (err) {\n      const errorInfo = handleAPIError(err);\n      toast.error(`프로젝트 수정 실패: ${errorInfo.message}`);\n    }\n  };\n\n  const handleCancelEdit = () => {\n    setShowEditModal(false);\n    setEditingProject(null);\n  };\n\n  // 필터링된 프로젝트 목록\n  const filteredProjects = useMemo(() => {\n    return filterProjects(projects, {\n      searchQuery,\n      sortBy,\n    });\n  }, [projects, searchQuery, sortBy]);\n\n  // 정렬 옵션 데이터\n  const sortOptions = [\n    { value: \"created\", label: \"생성일순\" },\n    { value: \"updated\", label: \"수정일순\" },\n    { value: \"name\", label: \"이름순\" },\n  ];\n\n  const currentSortOption = sortOptions.find(\n    (option) => option.value === sortBy\n  );\n\n  if (loading) {\n    return <ProjectListSkeleton />;\n  }\n\n  if (error) {\n    return (\n      <div className=\"text-center py-12\">\n        <div className=\"text-red-600 mb-4\">⚠️ 오류가 발생했습니다</div>\n        <p className=\"text-gray-600 mb-6\">{error}</p>\n        <button\n          onClick={loadProjects}\n          className=\"bg-blue-600 text-white px-4 py-2 rounded-md hover:bg-blue-700\"\n        >\n          다시 시도\n        </button>\n      </div>\n    );\n  }\n\n  const handleCreateSuccess = () => {\n    console.log(\"📝 handleCreateSuccess 호출됨 - 프로젝트 목록 새로고침 시작\");\n    loadProjects(); // 프로젝트 목록 새로고침\n  };\n\n  return (\n    <div className=\"space-y-6\">\n      {/* 헤더 */}\n      <div className=\"flex flex-col lg:flex-row lg:items-center lg:justify-between gap-4\">\n        <div>\n          <h2 className=\"text-3xl font-bold text-gray-900\">프로젝트 목록</h2>\n          <p className=\"text-gray-600 mt-1\">\n            AI 제목 생성 프로젝트를 관리하고 새로운 프로젝트를 생성하세요\n          </p>\n        </div>\n      </div>\n\n      {/* 필터링 바 */}\n      <div className=\"bg-white dark:bg-gray-800 rounded-xl border border-gray-200 dark:border-gray-700 p-6 shadow-sm transition-colors duration-200\">\n        <div className=\"flex flex-col sm:flex-row gap-4\">\n          {/* 검색바 */}\n          <div className=\"flex-1 relative\">\n            <MagnifyingGlassIcon className=\"absolute left-3 top-1/2 transform -translate-y-1/2 h-5 w-5 text-gray-400\" />\n            <input\n              type=\"text\"\n              placeholder=\"프로젝트 이름, 설명, 태그로 검색...\"\n              value={searchQuery}\n              onChange={(e) => setSearchQuery(e.target.value)}\n              className=\"w-full pl-10 pr-4 py-3 border border-gray-300 dark:border-gray-600 rounded-lg bg-white dark:bg-gray-700 text-gray-900 dark:text-white placeholder-gray-500 dark:placeholder-gray-400 focus:outline-none focus:ring-2 focus:ring-blue-500 transition-colors duration-200\"\n            />\n          </div>\n\n          {/* 정렬 옵션 - 커스텀 드롭다운 */}\n          <div className=\"flex items-center space-x-3\">\n            <FunnelIcon className=\"h-5 w-5 text-gray-400 flex-shrink-0\" />\n            <div className=\"relative\" ref={sortDropdownRef}>\n              <button\n                onClick={() => setSortDropdownOpen(!sortDropdownOpen)}\n                className=\"flex items-center justify-between pl-4 pr-3 py-3 bg-white dark:bg-gray-700 border border-gray-300 dark:border-gray-600 rounded-lg hover:border-gray-400 dark:hover:border-gray-500 focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-blue-500 transition-all duration-200 min-w-[140px]\"\n              >\n                <div className=\"flex items-center space-x-2\">\n                  <span className=\"text-gray-700 dark:text-gray-300 font-medium\">\n                    {currentSortOption?.label}\n                  </span>\n                </div>\n                <ChevronDownIcon\n                  className={`h-4 w-4 text-gray-400 transition-transform duration-200 ${\n                    sortDropdownOpen ? \"rotate-180\" : \"\"\n                  }`}\n                />\n              </button>\n\n              {/* 드롭다운 메뉴 */}\n              {sortDropdownOpen && (\n                <div className=\"absolute top-full left-0 mt-1 w-full bg-white dark:bg-gray-700 border border-gray-200 dark:border-gray-600 rounded-lg shadow-lg z-50 overflow-hidden\">\n                  {sortOptions.map((option) => (\n                    <button\n                      key={option.value}\n                      onClick={() => {\n                        setSortBy(option.value);\n                        setSortDropdownOpen(false);\n                      }}\n                      className={`w-full flex items-center justify-between px-4 py-3 text-left hover:bg-gray-50 dark:hover:bg-gray-600 transition-colors duration-150 ${\n                        sortBy === option.value\n                          ? \"bg-blue-50 dark:bg-blue-900 text-blue-600 dark:text-blue-400\"\n                          : \"text-gray-700 dark:text-gray-300\"\n                      }`}\n                    >\n                      <div className=\"flex items-center space-x-2\">\n                        <span className=\"font-medium\">{option.label}</span>\n                      </div>\n                      {sortBy === option.value && (\n                        <CheckIcon className=\"h-4 w-4 text-blue-600\" />\n                      )}\n                    </button>\n                  ))}\n                </div>\n              )}\n            </div>\n          </div>\n\n          {/* 뷰 모드 */}\n          <div className=\"flex items-center space-x-1 bg-gray-100 rounded-lg p-1\">\n            <button\n              onClick={() => setViewMode(\"grid\")}\n              className={`p-2 rounded-md ${\n                viewMode === \"grid\" ? \"bg-white shadow-sm\" : \"hover:bg-gray-200\"\n              }`}\n            >\n              <Squares2X2Icon className=\"h-4 w-4\" />\n            </button>\n            <button\n              onClick={() => setViewMode(\"list\")}\n              className={`p-2 rounded-md ${\n                viewMode === \"list\" ? \"bg-white shadow-sm\" : \"hover:bg-gray-200\"\n              }`}\n            >\n              <ListBulletIcon className=\"h-4 w-4\" />\n            </button>\n          </div>\n\n          {/* 새 프로젝트 버튼 */}\n          <button\n            onClick={() => setShowCreateModal(true)}\n            onMouseEnter={prefetchCreateProject}\n            className=\"inline-flex items-center px-6 py-3 bg-blue-600 text-white rounded-lg hover:bg-blue-700 transition-colors font-medium\"\n          >\n            <PlusIcon className=\"h-4 w-4 mr-2\" />새 프로젝트\n          </button>\n        </div>\n      </div>\n\n      {/* 프로젝트 목록 */}\n      {filteredProjects.length === 0 ? (\n        <div className=\"text-center py-16 bg-white dark:bg-gray-800 rounded-xl border border-gray-200 dark:border-gray-700 transition-colors duration-200\">\n          <FolderOpenIcon className=\"mx-auto h-16 w-16 text-gray-400 mb-4\" />\n          <h3 className=\"text-xl font-medium text-gray-900 dark:text-white mb-2\">\n            {searchQuery\n              ? \"조건에 맞는 프로젝트가 없습니다\"\n              : \"프로젝트가 없습니다\"}\n          </h3>\n          <p className=\"text-gray-500 dark:text-gray-400 mb-8\">\n            {searchQuery\n              ? \"다른 조건으로 검색해보세요\"\n              : \"첫 번째 프로젝트를 생성해보세요\"}\n          </p>\n          <button\n            onClick={() => setShowCreateModal(true)}\n            onMouseEnter={prefetchCreateProject}\n            className=\"inline-flex items-center px-6 py-3 bg-blue-600 text-white rounded-lg hover:bg-blue-700 font-medium\"\n          >\n            <PlusIcon className=\"h-4 w-4 mr-2\" />새 프로젝트 생성\n          </button>\n        </div>\n      ) : (\n        <div\n          className={\n            viewMode === \"grid\"\n              ? \"grid gap-6 md:grid-cols-2 lg:grid-cols-3\"\n              : \"space-y-4\"\n          }\n        >\n          {filteredProjects.map((project) => (\n            <AnimatedProjectCard\n              key={project.projectId}\n              project={project}\n              onDelete={deleteProject}\n              onEdit={handleEditProject}\n              viewMode={viewMode}\n              navigate={navigate}\n              onMouseEnter={prefetchProjectDetail}\n            />\n          ))}\n        </div>\n      )}\n\n      {/* 새 프로젝트 생성 모달 */}\n      <CreateProject\n        isOpen={showCreateModal}\n        onClose={() => setShowCreateModal(false)}\n        onSuccess={handleCreateSuccess}\n      />\n\n      {/* 프로젝트 편집 모달 */}\n      <ProjectEditModal\n        project={editingProject}\n        isOpen={showEditModal}\n        onSave={handleUpdateProject}\n        onCancel={handleCancelEdit}\n      />\n    </div>\n  );\n};\n\n// 프로젝트 카드 컴포넌트\nconst ProjectCard = ({ project, onDelete, onEdit, viewMode, navigate }) => {\n  const [showMenu, setShowMenu] = useState(false);\n  const menuRef = useRef(null);\n\n  // 카드 클릭 핸들러\n  const handleCardClick = (e) => {\n    // 메뉴 버튼을 클릭한 경우 무시\n    if (e.target.closest(\"button\") || e.target.closest(\"a\")) {\n      return;\n    }\n    // 프로젝트 상세 페이지로 이동\n    navigate(`/projects/${project.projectId}`);\n  };\n\n  // 외부 클릭 시 메뉴 닫기\n  useEffect(() => {\n    const handleClickOutside = (event) => {\n      if (menuRef.current && !menuRef.current.contains(event.target)) {\n        setShowMenu(false);\n      }\n    };\n\n    document.addEventListener(\"mousedown\", handleClickOutside);\n    return () => {\n      document.removeEventListener(\"mousedown\", handleClickOutside);\n    };\n  }, []);\n\n  if (viewMode === \"list\") {\n    return (\n      <div\n        onClick={handleCardClick}\n        onMouseEnter={prefetchProjectDetail}\n        className=\"bg-white rounded-xl border border-gray-200 hover:shadow-md transition-all cursor-pointer h-[320px] flex flex-col\"\n      >\n        <div className=\"p-6\">\n          <div className=\"flex items-center justify-between\">\n            <div className=\"flex items-center space-x-4 flex-1\">\n              <div className=\"flex-shrink-0\">\n                <DocumentTextIcon className=\"h-12 w-12 text-blue-600\" />\n              </div>\n\n              <div className=\"flex-1 min-w-0\">\n                <div className=\"flex items-center space-x-3 mb-2\">\n                  <h3 className=\"text-xl font-semibold text-gray-900 truncate\">\n                    {project.name}\n                  </h3>\n                </div>\n                <p className=\"text-gray-500 truncate mb-3\">\n                  {project.description || \"설명 없음\"}\n                </p>\n\n                {/* 날짜 */}\n                <div className=\"flex items-center space-x-4 mb-3\">\n                  <div className=\"flex items-center text-sm text-gray-500\">\n                    <CalendarIcon className=\"h-4 w-4 mr-1.5\" />\n                    <span>\n                      생성{\" \"}\n                      {new Date(project.createdAt).toLocaleDateString(\"ko-KR\")}\n                    </span>\n                  </div>\n                  {project.updatedAt &&\n                    project.updatedAt !== project.createdAt && (\n                      <div className=\"flex items-center text-sm text-gray-500\">\n                        <span className=\"text-gray-300\">•</span>\n                        <span className=\"ml-1.5\">\n                          수정{\" \"}\n                          {new Date(project.updatedAt).toLocaleDateString(\n                            \"ko-KR\"\n                          )}\n                        </span>\n                      </div>\n                    )}\n                </div>\n\n                {/* 프롬프트 정보 */}\n                <div className=\"flex items-center space-x-4 mb-3\">\n                  <div className=\"flex items-center text-sm text-gray-500\">\n                    <DocumentTextIcon className=\"h-4 w-4 mr-1.5\" />\n                    <span>프롬프트 클릭해 주세요</span>\n                  </div>\n                </div>\n\n                {/* 태그 */}\n                {project.tags && project.tags.length > 0 && (\n                  <div className=\"mb-4\">\n                    <div className=\"flex items-center\">\n                      <TagIcon className=\"h-4 w-4 mr-1.5 text-gray-400\" />\n                      <div className=\"flex flex-wrap gap-1.5\">\n                        {project.tags.slice(0, 3).map((tag, index) => (\n                          <span\n                            key={index}\n                            className=\"inline-flex items-center bg-gray-100 text-gray-600 px-2.5 py-1 rounded-full text-xs font-medium\"\n                          >\n                            {tag}\n                          </span>\n                        ))}\n                        {project.tags.length > 3 && (\n                          <span className=\"inline-flex items-center text-xs text-gray-400 px-2\">\n                            +{project.tags.length - 3}개\n                          </span>\n                        )}\n                      </div>\n                    </div>\n                  </div>\n                )}\n              </div>\n            </div>\n\n            <div className=\"flex items-center space-x-3\">\n              <div className=\"relative\" ref={menuRef}>\n                <button\n                  onClick={() => setShowMenu(!showMenu)}\n                  className=\"text-gray-400 hover:text-gray-600 p-2 rounded-lg hover:bg-gray-100\"\n                >\n                  <EllipsisHorizontalIcon className=\"h-5 w-5\" />\n                </button>\n\n                {showMenu && (\n                  <div className=\"absolute right-0 mt-2 w-48 bg-white rounded-lg shadow-lg ring-1 ring-black ring-opacity-5 z-10\">\n                    <div className=\"py-1\">\n                      <button\n                        onClick={() => {\n                          onEdit(project);\n                          setShowMenu(false);\n                        }}\n                        className=\"flex items-center w-full px-4 py-2 text-sm text-gray-700 hover:bg-gray-50\"\n                      >\n                        <PencilIcon className=\"h-4 w-4 mr-3\" />\n                        편집\n                      </button>\n                      <button\n                        onClick={() => {\n                          onDelete(project.projectId, project.name);\n                          setShowMenu(false);\n                        }}\n                        className=\"flex items-center w-full px-4 py-2 text-sm text-red-700 hover:bg-red-50\"\n                      >\n                        <TrashIcon className=\"h-4 w-4 mr-3\" />\n                        삭제\n                      </button>\n                    </div>\n                  </div>\n                )}\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <div\n      onClick={handleCardClick}\n      onMouseEnter={prefetchProjectDetail}\n      className=\"bg-white dark:bg-gray-800 rounded-xl shadow-sm border border-gray-200 dark:border-gray-700 hover:shadow-md transition-all cursor-pointer h-[280px] flex flex-col\"\n    >\n      <div className=\"p-6 flex flex-col flex-1\">\n        <div className=\"flex justify-between items-start mb-4\">\n          <div className=\"flex items-center space-x-3\">\n            <div className=\"flex-shrink-0\">\n              <DocumentTextIcon className=\"h-8 w-8 text-blue-600\" />\n            </div>\n            <div>\n              <h3 className=\"text-lg font-semibold text-gray-900 dark:text-white truncate\">\n                {project.name}\n              </h3>\n              <p className=\"text-sm text-gray-500 dark:text-gray-400 mt-1 line-clamp-2\">\n                {project.description || \"설명 없음\"}\n              </p>\n            </div>\n          </div>\n\n          <div className=\"relative\" ref={menuRef}>\n            <button\n              onClick={() => setShowMenu(!showMenu)}\n              className=\"p-2 text-gray-400 hover:text-gray-600 rounded-lg hover:bg-gray-100 transition-colors\"\n              title=\"프로젝트 옵션\"\n            >\n              <EllipsisHorizontalIcon className=\"h-5 w-5\" />\n            </button>\n\n            {showMenu && (\n              <div className=\"absolute right-0 mt-2 w-48 bg-white rounded-lg shadow-lg ring-1 ring-black ring-opacity-5 z-10\">\n                <div className=\"py-1\">\n                  <button\n                    onClick={() => {\n                      onEdit(project);\n                      setShowMenu(false);\n                    }}\n                    className=\"flex items-center w-full px-4 py-2 text-sm text-gray-700 hover:bg-gray-50\"\n                  >\n                    <PencilIcon className=\"h-4 w-4 mr-3\" />\n                    편집\n                  </button>\n                  <button\n                    onClick={() => {\n                      onDelete(project.projectId, project.name);\n                      setShowMenu(false);\n                    }}\n                    className=\"flex items-center w-full px-4 py-2 text-sm text-red-700 hover:bg-red-50\"\n                  >\n                    <TrashIcon className=\"h-4 w-4 mr-3\" />\n                    삭제\n                  </button>\n                </div>\n              </div>\n            )}\n          </div>\n        </div>\n\n        <div className=\"flex-1 overflow-y-auto\">\n          {/* 날짜 */}\n          <div className=\"flex items-center space-x-4 mb-3\">\n            <div className=\"flex items-center text-sm text-gray-500\">\n              <CalendarIcon className=\"h-4 w-4 mr-1.5\" />\n              <span>\n                생성 {new Date(project.createdAt).toLocaleDateString(\"ko-KR\")}\n              </span>\n            </div>\n            {project.updatedAt && project.updatedAt !== project.createdAt && (\n              <div className=\"flex items-center text-sm text-gray-500\">\n                <span className=\"text-gray-300\">•</span>\n                <span className=\"ml-1.5\">\n                  수정 {new Date(project.updatedAt).toLocaleDateString(\"ko-KR\")}\n                </span>\n              </div>\n            )}\n          </div>\n\n          {/* 프롬프트 정보 */}\n          <div className=\"flex items-center space-x-4 mb-3\">\n            <div className=\"flex items-center text-sm text-gray-500\">\n              <DocumentTextIcon className=\"h-4 w-4 mr-1.5\" />\n              <span>프롬프트 클릭해 주세요</span>\n            </div>\n          </div>\n\n          {/* 태그 */}\n          {project.tags && project.tags.length > 0 && (\n            <div className=\"mb-4\">\n              <div className=\"flex items-center\">\n                <TagIcon className=\"h-4 w-4 mr-1.5 text-gray-400\" />\n                <div className=\"flex flex-wrap gap-1.5\">\n                  {project.tags.slice(0, 3).map((tag, index) => (\n                    <span\n                      key={index}\n                      className=\"inline-flex items-center bg-gray-100 text-gray-600 px-2.5 py-1 rounded-full text-xs font-medium\"\n                    >\n                      {tag}\n                    </span>\n                  ))}\n                  {project.tags.length > 3 && (\n                    <span className=\"inline-flex items-center text-xs text-gray-400 px-2\">\n                      +{project.tags.length - 3}개\n                    </span>\n                  )}\n                </div>\n              </div>\n            </div>\n          )}\n        </div>\n      </div>\n    </div>\n  );\n};\n\n// 프로젝트 편집 모달 컴포넌트\nconst ProjectEditModal = ({ project, isOpen, onSave, onCancel }) => {\n  const [formData, setFormData] = useState({\n    name: \"\",\n    description: \"\",\n    tags: [],\n  });\n  const [tagInput, setTagInput] = useState(\"\");\n\n  useEffect(() => {\n    if (project) {\n      setFormData({\n        name: project.name || \"\",\n        description: project.description || \"\",\n        tags: Array.isArray(project.tags) ? [...project.tags] : [],\n      });\n    }\n  }, [project]);\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    if (!formData.name.trim()) {\n      toast.error(\"프로젝트 이름을 입력해주세요\");\n      return;\n    }\n    onSave(formData);\n  };\n\n  const handleModalClose = () => {\n    setTagInput(\"\");\n    onCancel();\n  };\n\n  // 태그 추가 함수\n  const addTag = () => {\n    const tag = tagInput.trim();\n    if (tag && !formData.tags.includes(tag) && formData.tags.length < 10) {\n      setFormData({\n        ...formData,\n        tags: [...formData.tags, tag],\n      });\n      setTagInput(\"\");\n    }\n  };\n\n  // 태그 제거 함수\n  const removeTag = (tagToRemove) => {\n    setFormData({\n      ...formData,\n      tags: formData.tags.filter((tag) => tag !== tagToRemove),\n    });\n  };\n\n  // Enter 키로 태그 추가\n  const handleTagKeyPress = (e) => {\n    if (e.key === \"Enter\") {\n      e.preventDefault();\n      addTag();\n    }\n  };\n\n  if (!isOpen) return null;\n\n  return (\n    <div className=\"fixed inset-0 bg-black bg-opacity-50 z-50 flex items-center justify-center p-4\">\n      <div className=\"bg-white rounded-lg max-w-md w-full\">\n        <div className=\"flex items-center justify-between p-4 border-b border-gray-200\">\n          <h3 className=\"text-lg font-semibold text-gray-900\">프로젝트 편집</h3>\n          <button\n            onClick={handleModalClose}\n            className=\"text-gray-400 hover:text-gray-600\"\n          >\n            <XMarkIcon className=\"h-5 w-5\" />\n          </button>\n        </div>\n\n        <form onSubmit={handleSubmit} className=\"p-4 space-y-4\">\n          <div>\n            <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n              프로젝트 이름 *\n            </label>\n            <input\n              type=\"text\"\n              value={formData.name}\n              onChange={(e) =>\n                setFormData({ ...formData, name: e.target.value })\n              }\n              className=\"w-full px-3 py-2 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500\"\n              placeholder=\"프로젝트 이름을 입력하세요\"\n            />\n          </div>\n\n          <div>\n            <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n              설명\n            </label>\n            <textarea\n              value={formData.description}\n              onChange={(e) =>\n                setFormData({ ...formData, description: e.target.value })\n              }\n              rows={3}\n              className=\"w-full px-3 py-2 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500\"\n              placeholder=\"프로젝트 설명을 입력하세요\"\n            />\n          </div>\n\n          {/* 태그 관리 */}\n          <div>\n            <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n              태그 ({formData.tags.length}/10)\n            </label>\n\n            {/* 현재 태그들 */}\n            {formData.tags.length > 0 && (\n              <div className=\"flex flex-wrap gap-2 mb-3\">\n                {formData.tags.map((tag, index) => (\n                  <span\n                    key={index}\n                    className=\"inline-flex items-center px-3 py-1 rounded-full text-sm bg-blue-100 text-blue-800\"\n                  >\n                    {tag}\n                    <button\n                      type=\"button\"\n                      onClick={() => removeTag(tag)}\n                      className=\"ml-2 text-blue-600 hover:text-blue-800\"\n                    >\n                      <XMarkIcon className=\"h-3 w-3\" />\n                    </button>\n                  </span>\n                ))}\n              </div>\n            )}\n\n            {/* 태그 입력 */}\n            <div className=\"flex gap-2\">\n              <input\n                type=\"text\"\n                value={tagInput}\n                onChange={(e) => setTagInput(e.target.value)}\n                onKeyPress={handleTagKeyPress}\n                className=\"flex-1 px-3 py-2 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500\"\n                placeholder=\"태그를 입력하고 Enter를 누르세요\"\n                maxLength={20}\n                disabled={formData.tags.length >= 10}\n              />\n              <button\n                type=\"button\"\n                onClick={addTag}\n                disabled={!tagInput.trim() || formData.tags.length >= 10}\n                className=\"px-4 py-2 bg-blue-600 text-white rounded-lg hover:bg-blue-700 disabled:opacity-50 disabled:cursor-not-allowed\"\n              >\n                추가\n              </button>\n            </div>\n            <p className=\"text-xs text-gray-500 mt-1\">\n              태그는 최대 10개까지 추가할 수 있습니다. 각 태그는 20자 이내로\n              입력하세요.\n            </p>\n          </div>\n\n          <div className=\"flex justify-end space-x-3 pt-4\">\n            <button\n              type=\"button\"\n              onClick={handleModalClose}\n              className=\"px-4 py-2 text-gray-700 border border-gray-300 rounded-lg hover:bg-gray-50\"\n            >\n              취소\n            </button>\n            <button\n              type=\"submit\"\n              disabled={!formData.name.trim()}\n              className=\"px-4 py-2 bg-blue-600 text-white rounded-lg hover:bg-blue-700 disabled:opacity-50 disabled:cursor-not-allowed\"\n            >\n              저장\n            </button>\n          </div>\n        </form>\n      </div>\n    </div>\n  );\n};\n\nexport default ProjectList;\n","import { useCallback } from 'react';\n\n/**\n * 컴포넌트 프리로딩을 위한 커스텀 훅\n */\nexport const usePrefetch = () => {\n  // 프로젝트 상세 페이지 프리로딩\n  const prefetchProjectDetail = useCallback(() => {\n    // ProjectDetail 컴포넌트를 미리 로드\n    import('../components/ProjectDetail').then(() => {\n      console.log('🚀 ProjectDetail 컴포넌트 프리로드 완료');\n    }).catch((error) => {\n      console.warn('⚠️ ProjectDetail 프리로드 실패:', error);\n    });\n  }, []);\n\n  // 프로젝트 생성 페이지 프리로딩  \n  const prefetchCreateProject = useCallback(() => {\n    import('../components/CreateProject').then(() => {\n      console.log('🚀 CreateProject 컴포넌트 프리로드 완료');\n    }).catch((error) => {\n      console.warn('⚠️ CreateProject 프리로드 실패:', error);\n    });\n  }, []);\n\n  return {\n    prefetchProjectDetail,\n    prefetchCreateProject,\n  };\n};\n\n/**\n * 링크 프리페칭을 위한 유틸리티\n */\nexport const useLinkPrefetch = () => {\n  const prefetchRoute = useCallback((path) => {\n    // 특정 경로에 해당하는 컴포넌트를 프리로드\n    if (path.startsWith('/projects/') && path !== '/projects') {\n      // 프로젝트 상세 페이지\n      import('../components/ProjectDetail').catch(() => {});\n    } else if (path === '/projects') {\n      // 프로젝트 목록 페이지\n      import('../components/ProjectList').catch(() => {});\n    } else if (path === '/create') {\n      // 프로젝트 생성 페이지\n      import('../components/CreateProject').catch(() => {});\n    }\n  }, []);\n\n  return { prefetchRoute };\n};","import * as React from \"react\";\nfunction BookmarkIcon({\n  title,\n  titleId,\n  ...props\n}, svgRef) {\n  return /*#__PURE__*/React.createElement(\"svg\", Object.assign({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    fill: \"none\",\n    viewBox: \"0 0 24 24\",\n    strokeWidth: 1.5,\n    stroke: \"currentColor\",\n    \"aria-hidden\": \"true\",\n    \"data-slot\": \"icon\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, /*#__PURE__*/React.createElement(\"path\", {\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    d: \"M17.593 3.322c1.1.128 1.907 1.077 1.907 2.185V21L12 17.25 4.5 21V5.507c0-1.108.806-2.057 1.907-2.185a48.507 48.507 0 0 1 11.186 0Z\"\n  }));\n}\nconst ForwardRef = /*#__PURE__*/ React.forwardRef(BookmarkIcon);\nexport default ForwardRef;","import React, { useState, useRef, useEffect } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { toast } from \"react-hot-toast\";\nimport {\n  PlusIcon,\n  XMarkIcon,\n  BookmarkIcon,\n  HashtagIcon,\n} from \"@heroicons/react/24/outline\";\nimport { projectAPI, handleAPIError } from \"../services/api\";\n\nconst CreateProject = ({ isOpen, onClose, onSuccess }) => {\n  const [loading, setLoading] = useState(false);\n  const [formData, setFormData] = useState({\n    name: \"\",\n    description: \"\",\n    tags: [],\n  });\n  const [tagInput, setTagInput] = useState(\"\");\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n\n    if (!formData.name.trim()) {\n      toast.error(\"프로젝트 이름을 입력해주세요.\");\n      return;\n    }\n\n    try {\n      setLoading(true);\n      const response = await projectAPI.createProject(formData);\n      toast.success(\"프로젝트가 생성되었습니다!\");\n      onSuccess?.(response);\n      onClose();\n    } catch (error) {\n      console.error(\"프로젝트 생성 실패:\", error);\n      const errorInfo = handleAPIError(error);\n      toast.error(errorInfo.message);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const handleTagAdd = (e) => {\n    if (e.key === \"Enter\" && tagInput.trim()) {\n      e.preventDefault();\n      const newTag = tagInput.trim();\n      if (!formData.tags.includes(newTag)) {\n        setFormData((prev) => ({\n          ...prev,\n          tags: [...prev.tags, newTag],\n        }));\n      }\n      setTagInput(\"\");\n    }\n  };\n\n  const handleTagRemove = (tagToRemove) => {\n    setFormData((prev) => ({\n      ...prev,\n      tags: prev.tags.filter((tag) => tag !== tagToRemove),\n    }));\n  };\n\n  if (!isOpen) return null;\n\n  return (\n    <div className=\"fixed inset-0 bg-black/50 backdrop-blur-sm z-50 flex items-center justify-center p-4\">\n      <div className=\"bg-white rounded-2xl max-w-md w-full shadow-2xl\">\n        <div className=\"p-6 border-b border-gray-200\">\n          <div className=\"flex items-center justify-between\">\n            <div className=\"flex items-center space-x-3\">\n              <div className=\"w-10 h-10 bg-blue-100 rounded-lg flex items-center justify-center\">\n                <BookmarkIcon className=\"h-5 w-5 text-blue-600\" />\n              </div>\n              <div>\n                <h3 className=\"text-lg font-semibold text-gray-900\">\n                  새 프로젝트 생성\n                </h3>\n                <p className=\"text-sm text-gray-500\">\n                  AI 제목 생성 프로젝트를 만들어보세요\n                </p>\n              </div>\n            </div>\n            <button\n              onClick={onClose}\n              className=\"p-2 text-gray-400 hover:text-gray-600 rounded-lg hover:bg-gray-100 transition-colors\"\n            >\n              <XMarkIcon className=\"h-5 w-5\" />\n            </button>\n          </div>\n        </div>\n\n        <form onSubmit={handleSubmit} className=\"p-6 space-y-6\">\n          {/* 프로젝트 이름 */}\n          <div className=\"space-y-2\">\n            <label className=\"text-sm font-semibold text-gray-800\">\n              프로젝트 이름 <span className=\"text-red-500\">*</span>\n            </label>\n            <input\n              type=\"text\"\n              value={formData.name}\n              onChange={(e) =>\n                setFormData((prev) => ({ ...prev, name: e.target.value }))\n              }\n              className=\"w-full px-4 py-3 border-2 border-gray-200 rounded-xl focus:outline-none focus:border-blue-500 focus:ring-4 focus:ring-blue-100 transition-all duration-200\"\n              placeholder=\"예: 서울경제신문 제목 생성\"\n              required\n            />\n          </div>\n\n          {/* 프로젝트 설명 */}\n          <div className=\"space-y-2\">\n            <label className=\"text-sm font-semibold text-gray-800\">\n              프로젝트 설명\n            </label>\n            <textarea\n              value={formData.description}\n              onChange={(e) =>\n                setFormData((prev) => ({\n                  ...prev,\n                  description: e.target.value,\n                }))\n              }\n              className=\"w-full px-4 py-3 border-2 border-gray-200 rounded-xl focus:outline-none focus:border-blue-500 focus:ring-4 focus:ring-blue-100 transition-all duration-200 resize-none\"\n              placeholder=\"프로젝트에 대한 간단한 설명을 입력하세요\"\n              rows={3}\n            />\n          </div>\n\n          {/* 해시태그 */}\n          <div className=\"space-y-2\">\n            <label className=\"flex items-center text-sm font-semibold text-gray-800\">\n              <HashtagIcon className=\"h-4 w-4 mr-2 text-gray-500\" />\n              태그\n            </label>\n            <div className=\"space-y-3\">\n              {/* 태그 입력 */}\n              <input\n                type=\"text\"\n                value={tagInput}\n                onChange={(e) => setTagInput(e.target.value)}\n                onKeyPress={handleTagAdd}\n                className=\"w-full px-4 py-3 border-2 border-gray-200 rounded-xl focus:outline-none focus:border-blue-500 focus:ring-4 focus:ring-blue-100 transition-all duration-200\"\n                placeholder=\"태그를 입력하고 Enter를 누르세요\"\n              />\n\n              {/* 태그 목록 */}\n              {formData.tags.length > 0 && (\n                <div className=\"flex flex-wrap gap-2\">\n                  {formData.tags.map((tag, index) => (\n                    <span\n                      key={index}\n                      className=\"inline-flex items-center px-3 py-1 bg-blue-100 text-blue-800 text-sm rounded-full\"\n                    >\n                      #{tag}\n                      <button\n                        type=\"button\"\n                        onClick={() => handleTagRemove(tag)}\n                        className=\"ml-2 text-blue-600 hover:text-blue-800\"\n                      >\n                        <XMarkIcon className=\"h-3 w-3\" />\n                      </button>\n                    </span>\n                  ))}\n                </div>\n              )}\n            </div>\n          </div>\n\n          {/* 버튼 */}\n          <div className=\"flex justify-end space-x-3 pt-4\">\n            <button\n              type=\"button\"\n              onClick={onClose}\n              className=\"px-4 py-2 text-gray-700 bg-white border border-gray-300 rounded-lg hover:bg-gray-50 transition-colors font-medium\"\n            >\n              취소\n            </button>\n            <button\n              type=\"submit\"\n              disabled={loading || !formData.name.trim()}\n              className=\"px-4 py-2 bg-blue-600 text-white rounded-lg hover:bg-blue-700 disabled:opacity-50 disabled:cursor-not-allowed transition-colors font-medium flex items-center gap-2\"\n            >\n              {loading ? (\n                <>\n                  <div className=\"animate-spin rounded-full h-4 w-4 border-b-2 border-white\"></div>\n                  생성 중...\n                </>\n              ) : (\n                <>\n                  <PlusIcon className=\"h-4 w-4\" />\n                  생성하기\n                </>\n              )}\n            </button>\n          </div>\n        </form>\n      </div>\n    </div>\n  );\n};\n\nexport default CreateProject;\n","import React from 'react';\n\n// 기본 스켈레톤 박스\nexport const SkeletonBox = ({ width = 'w-full', height = 'h-4', className = '' }) => (\n  <div className={`bg-gray-200 dark:bg-gray-700 rounded animate-pulse ${width} ${height} ${className}`}></div>\n);\n\n// 원형 스켈레톤 (아바타용)\nexport const SkeletonCircle = ({ size = 'w-10 h-10', className = '' }) => (\n  <div className={`bg-gray-200 dark:bg-gray-700 rounded-full animate-pulse ${size} ${className}`}></div>\n);\n\n// 채팅 메시지 스켈레톤\nexport const ChatMessageSkeleton = ({ isUser = false }) => (\n  <div className={`group relative ${isUser ? \"ml-8\" : \"mr-8\"} mb-6`}>\n    <div className={`flex ${isUser ? \"justify-end\" : \"justify-start\"}`}>\n      {isUser ? (\n        // 사용자 메시지 스켈레톤\n        <div className=\"max-w-[85%] rounded-lg px-6 py-4 bg-gray-200 dark:bg-gray-700 animate-pulse\">\n          <div className=\"space-y-2\">\n            <SkeletonBox width=\"w-3/4\" height=\"h-4\" />\n            <SkeletonBox width=\"w-full\" height=\"h-4\" />\n            <SkeletonBox width=\"w-1/2\" height=\"h-4\" />\n          </div>\n          <SkeletonBox width=\"w-16\" height=\"h-3\" className=\"mt-3\" />\n        </div>\n      ) : (\n        // AI 메시지 스켈레톤\n        <div className=\"max-w-[85%] w-full\">\n          <div className=\"space-y-3\">\n            <SkeletonBox width=\"w-full\" height=\"h-4\" />\n            <SkeletonBox width=\"w-5/6\" height=\"h-4\" />\n            <SkeletonBox width=\"w-4/5\" height=\"h-4\" />\n            <SkeletonBox width=\"w-3/4\" height=\"h-4\" />\n            <SkeletonBox width=\"w-2/3\" height=\"h-4\" />\n          </div>\n          \n          {/* 복사 버튼 영역 스켈레톤 */}\n          <div className=\"mt-4 flex items-center justify-between\">\n            <div className=\"flex items-center space-x-3\">\n              <SkeletonBox width=\"w-20\" height=\"h-8\" className=\"rounded-lg\" />\n              <SkeletonBox width=\"w-16\" height=\"h-6\" className=\"rounded\" />\n            </div>\n            <SkeletonBox width=\"w-12\" height=\"h-3\" />\n          </div>\n        </div>\n      )}\n    </div>\n  </div>\n);\n\n// 프로젝트 카드 스켈레톤\nexport const ProjectCardSkeleton = () => (\n  <div className=\"bg-white dark:bg-gray-800 rounded-xl shadow-sm border border-gray-200 dark:border-gray-700 h-[280px] flex flex-col animate-pulse\">\n    <div className=\"p-6 flex flex-col flex-1\">\n      <div className=\"flex justify-between items-start mb-4\">\n        <div className=\"flex items-center space-x-3 flex-1\">\n          <SkeletonCircle size=\"w-12 h-12\" />\n          <div className=\"flex-1 space-y-2\">\n            <SkeletonBox width=\"w-3/4\" height=\"h-5\" />\n            <SkeletonBox width=\"w-1/2\" height=\"h-4\" />\n          </div>\n        </div>\n        <SkeletonBox width=\"w-6\" height=\"h-6\" className=\"rounded\" />\n      </div>\n      \n      <div className=\"flex-1 space-y-3 mb-4\">\n        <SkeletonBox width=\"w-full\" height=\"h-4\" />\n        <SkeletonBox width=\"w-5/6\" height=\"h-4\" />\n        <SkeletonBox width=\"w-4/5\" height=\"h-4\" />\n      </div>\n      \n      <div className=\"flex items-center justify-between text-sm\">\n        <SkeletonBox width=\"w-20\" height=\"h-4\" />\n        <SkeletonBox width=\"w-16\" height=\"h-4\" />\n      </div>\n    </div>\n  </div>\n);\n\n// 프로젝트 목록 스켈레톤\nexport const ProjectListSkeleton = ({ count = 6 }) => (\n  <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6\">\n    {Array.from({ length: count }, (_, index) => (\n      <ProjectCardSkeleton key={index} />\n    ))}\n  </div>\n);\n\n// 채팅 인터페이스 스켈레톤\nexport const ChatInterfaceSkeleton = () => (\n  <div className=\"h-full flex flex-col bg-white dark:bg-gray-900 animate-pulse\">\n    {/* 헤더 스켈레톤 */}\n    <div className=\"border-b border-gray-200 dark:border-gray-700 p-4\">\n      <div className=\"flex items-center justify-between\">\n        <div className=\"flex items-center space-x-3\">\n          <SkeletonBox width=\"w-16\" height=\"h-8\" className=\"rounded-lg\" />\n          <SkeletonBox width=\"w-32\" height=\"h-6\" />\n        </div>\n        <div className=\"flex items-center space-x-2\">\n          <SkeletonBox width=\"w-20\" height=\"h-6\" className=\"rounded-full\" />\n        </div>\n      </div>\n    </div>\n    \n    {/* 메시지 영역 스켈레톤 */}\n    <div className=\"flex-1 overflow-y-auto p-4 space-y-6\">\n      <ChatMessageSkeleton isUser={true} />\n      <ChatMessageSkeleton isUser={false} />\n      <ChatMessageSkeleton isUser={true} />\n      <ChatMessageSkeleton isUser={false} />\n    </div>\n    \n    {/* 입력 영역 스켈레톤 */}\n    <div className=\"border-t border-gray-200 dark:border-gray-700 p-4\">\n      <div className=\"flex space-x-3\">\n        <SkeletonBox width=\"flex-1\" height=\"h-12\" className=\"rounded-lg\" />\n        <SkeletonBox width=\"w-12\" height=\"h-12\" className=\"rounded-lg\" />\n      </div>\n    </div>\n  </div>\n);\n\n// 페이지 스켈레톤 (이미 있던 것을 향상)\nexport const PageSkeleton = () => (\n  <div className=\"min-h-screen bg-gray-50 dark:bg-gray-900\">\n    <div className=\"bg-white dark:bg-gray-800 border-b border-gray-200 dark:border-gray-700 animate-pulse\">\n      <div className=\"max-w-7xl mx-auto px-4 py-4\">\n        <SkeletonBox width=\"w-32\" height=\"h-6\" />\n      </div>\n    </div>\n    <div className=\"max-w-7xl mx-auto px-4 py-8\">\n      <div className=\"space-y-6\">\n        <SkeletonBox width=\"w-48\" height=\"h-8\" />\n        <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6\">\n          {Array.from({ length: 6 }, (_, index) => (\n            <div key={index} className=\"bg-white dark:bg-gray-800 rounded-xl border border-gray-200 dark:border-gray-700 p-6 animate-pulse\">\n              <div className=\"space-y-4\">\n                <SkeletonBox width=\"w-3/4\" height=\"h-5\" />\n                <SkeletonBox width=\"w-full\" height=\"h-4\" />\n                <SkeletonBox width=\"w-5/6\" height=\"h-4\" />\n                <div className=\"flex justify-between mt-4\">\n                  <SkeletonBox width=\"w-16\" height=\"h-4\" />\n                  <SkeletonBox width=\"w-12\" height=\"h-4\" />\n                </div>\n              </div>\n            </div>\n          ))}\n        </div>\n      </div>\n    </div>\n  </div>\n);"],"names":["MagnifyingGlassIcon","_ref","svgRef","title","titleId","props","React","Object","assign","xmlns","fill","viewBox","strokeWidth","stroke","ref","id","strokeLinecap","strokeLinejoin","d","FunnelIcon","ChevronDownIcon","CheckIcon","Squares2X2Icon","ListBulletIcon","FolderOpenIcon","EllipsisHorizontalIcon","CalendarIcon","TagIcon","project","onDelete","onEdit","viewMode","navigate","onMouseEnter","showMenu","setShowMenu","useState","isHovered","setIsHovered","menuRef","useRef","useEffect","handleClickOutside","event","current","contains","target","document","addEventListener","removeEventListener","tagVariants","initial","opacity","x","animate","i","transition","delay","type","stiffness","damping","hover","scale","_jsx","motion","div","variants","y","boxShadow","tap","whileHover","whileTap","onHoverStart","onHoverEnd","onClick","e","closest","projectId","className","children","_jsxs","rotate","DocumentTextIcon","h3","color","undefined","duration","name","description","button","AnimatePresence","hidden","visible","exit","PencilIcon","TrashIcon","Date","createdAt","toLocaleDateString","updatedAt","tags","length","slice","map","tag","index","span","custom","ProjectEditModal","_ref2","isOpen","onSave","onCancel","formData","setFormData","tagInput","setTagInput","Array","isArray","handleModalClose","addTag","trim","includes","XMarkIcon","onSubmit","preventDefault","toast","error","value","onChange","placeholder","rows","removeTag","tagToRemove","filter","onKeyPress","key","maxLength","disabled","ProjectList","useNavigate","prefetchProjectDetail","prefetchCreateProject","useCallback","then","console","log","catch","warn","projects","setProjects","loading","setLoading","setError","searchQuery","setSearchQuery","sortBy","setSortBy","setViewMode","sortDropdownOpen","setSortDropdownOpen","sortDropdownRef","editingProject","setEditingProject","showEditModal","setShowEditModal","showCreateModal","setShowCreateModal","loadProjects","async","projectsWithStats","projectAPI","getProjects","err","errorInfo","handleAPIError","message","deleteProject","projectName","window","confirm","originalProjects","updatedProjects","p","success","_err$response","_err$response2","errorMessage","response","status","_err$response$data","data","request","handleEditProject","filteredProjects","useMemo","filterProjects","sortOptions","label","currentSortOption","find","option","ProjectListSkeleton","PlusIcon","AnimatedProjectCard","CreateProject","onClose","onSuccess","handleCreateSuccess","updateProject","projectData","handleCancelEdit","BookmarkIcon","createProject","prev","required","HashtagIcon","newTag","handleTagRemove","_Fragment","SkeletonBox","width","height","SkeletonCircle","size","ChatMessageSkeleton","_ref3","isUser","ProjectCardSkeleton","_ref4","count","from","_","ChatInterfaceSkeleton"],"sourceRoot":""}