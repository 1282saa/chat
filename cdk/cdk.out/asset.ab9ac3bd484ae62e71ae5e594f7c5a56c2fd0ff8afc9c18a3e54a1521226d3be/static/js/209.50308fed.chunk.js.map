{"version":3,"file":"static/js/209.50308fed.chunk.js","mappings":"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","sources":["../node_modules/framer-motion/dist/es/utils/use-isomorphic-effect.mjs","../node_modules/@heroicons/react/24/outline/esm/TagIcon.js","../node_modules/framer-motion/dist/es/context/MotionConfigContext.mjs","../node_modules/@heroicons/react/24/outline/esm/DocumentTextIcon.js","../node_modules/@heroicons/react/24/outline/esm/PencilIcon.js","../node_modules/framer-motion/dist/es/components/AnimatePresence/PopChild.mjs","../node_modules/framer-motion/dist/es/components/AnimatePresence/PresenceChild.mjs","../node_modules/framer-motion/dist/es/components/AnimatePresence/utils.mjs","../node_modules/framer-motion/dist/es/components/AnimatePresence/index.mjs","../node_modules/framer-motion/dist/es/utils/is-browser.mjs","../node_modules/@heroicons/react/24/outline/esm/Squares2X2Icon.js","../node_modules/framer-motion/dist/es/utils/use-constant.mjs","../node_modules/motion-dom/dist/es/render/utils/keys-transform.mjs","../node_modules/motion-dom/dist/es/render/dom/parse-transform.mjs","../node_modules/motion-dom/dist/es/animation/utils/is-css-variable.mjs","../node_modules/framer-motion/dist/es/projection/geometry/conversion.mjs","../node_modules/motion-dom/dist/es/utils/mix/number.mjs","../node_modules/framer-motion/dist/es/projection/utils/has-transform.mjs","../node_modules/framer-motion/dist/es/projection/geometry/delta-apply.mjs","../node_modules/framer-motion/dist/es/projection/utils/measure.mjs","../node_modules/motion-dom/dist/es/render/utils/keys-position.mjs","../node_modules/motion-utils/dist/es/clamp.mjs","../node_modules/motion-dom/dist/es/value/types/numbers/index.mjs","../node_modules/motion-dom/dist/es/value/types/numbers/units.mjs","../node_modules/motion-dom/dist/es/value/types/test.mjs","../node_modules/motion-dom/dist/es/value/types/dimensions.mjs","../node_modules/motion-dom/dist/es/value/types/auto.mjs","../node_modules/motion-utils/dist/es/is-numerical-string.mjs","../node_modules/motion-dom/dist/es/animation/utils/css-variables-conversion.mjs","../node_modules/motion-dom/dist/es/animation/keyframes/utils/unit-conversion.mjs","../node_modules/motion-utils/dist/es/noop.mjs","../node_modules/motion-utils/dist/es/global-config.mjs","../node_modules/motion-dom/dist/es/frameloop/order.mjs","../node_modules/motion-dom/dist/es/stats/buffer.mjs","../node_modules/motion-dom/dist/es/frameloop/batcher.mjs","../node_modules/motion-dom/dist/es/frameloop/render-step.mjs","../node_modules/motion-dom/dist/es/frameloop/frame.mjs","../node_modules/motion-dom/dist/es/animation/keyframes/KeyframesResolver.mjs","../node_modules/motion-dom/dist/es/animation/keyframes/utils/fill-wildcards.mjs","../node_modules/motion-utils/dist/es/is-zero-value-string.mjs","../node_modules/motion-dom/dist/es/animation/keyframes/utils/is-none.mjs","../node_modules/motion-dom/dist/es/value/types/utils/sanitize.mjs","../node_modules/motion-dom/dist/es/value/types/utils/float-regex.mjs","../node_modules/motion-dom/dist/es/value/types/utils/single-color-regex.mjs","../node_modules/motion-dom/dist/es/value/types/color/utils.mjs","../node_modules/motion-dom/dist/es/value/types/utils/is-nullish.mjs","../node_modules/motion-dom/dist/es/value/types/color/rgba.mjs","../node_modules/motion-dom/dist/es/value/types/color/hex.mjs","../node_modules/motion-dom/dist/es/value/types/color/hsla.mjs","../node_modules/motion-dom/dist/es/value/types/color/index.mjs","../node_modules/motion-dom/dist/es/value/types/utils/color-regex.mjs","../node_modules/motion-dom/dist/es/value/types/complex/index.mjs","../node_modules/motion-dom/dist/es/value/types/complex/filter.mjs","../node_modules/motion-dom/dist/es/value/types/int.mjs","../node_modules/motion-dom/dist/es/value/types/maps/number.mjs","../node_modules/motion-dom/dist/es/value/types/maps/transform.mjs","../node_modules/motion-dom/dist/es/value/types/maps/defaults.mjs","../node_modules/motion-dom/dist/es/value/types/utils/animatable-none.mjs","../node_modules/motion-dom/dist/es/animation/keyframes/utils/make-none-animatable.mjs","../node_modules/motion-dom/dist/es/animation/keyframes/DOMKeyframesResolver.mjs","../node_modules/motion-dom/dist/es/value/utils/is-motion-value.mjs","../node_modules/motion-dom/dist/es/frameloop/sync-time.mjs","../node_modules/motion-utils/dist/es/array.mjs","../node_modules/motion-utils/dist/es/subscription-manager.mjs","../node_modules/motion-utils/dist/es/velocity-per-second.mjs","../node_modules/motion-dom/dist/es/value/index.mjs","../node_modules/motion-dom/dist/es/value/types/utils/find.mjs","../node_modules/motion-dom/dist/es/frameloop/microtask.mjs","../node_modules/framer-motion/dist/es/motion/features/definitions.mjs","../node_modules/framer-motion/dist/es/projection/geometry/models.mjs","../node_modules/framer-motion/dist/es/utils/reduced-motion/state.mjs","../node_modules/framer-motion/dist/es/render/store.mjs","../node_modules/framer-motion/dist/es/animation/utils/is-animation-controls.mjs","../node_modules/framer-motion/dist/es/render/utils/is-variant-label.mjs","../node_modules/framer-motion/dist/es/render/utils/variant-props.mjs","../node_modules/framer-motion/dist/es/render/utils/is-controlling-variants.mjs","../node_modules/framer-motion/dist/es/render/utils/resolve-variants.mjs","../node_modules/framer-motion/dist/es/render/VisualElement.mjs","../node_modules/framer-motion/dist/es/utils/reduced-motion/index.mjs","../node_modules/framer-motion/dist/es/render/utils/motion-values.mjs","../node_modules/framer-motion/dist/es/render/dom/DOMVisualElement.mjs","../node_modules/motion-dom/dist/es/value/types/utils/get-as-type.mjs","../node_modules/framer-motion/dist/es/render/html/utils/build-transform.mjs","../node_modules/framer-motion/dist/es/render/html/utils/build-styles.mjs","../node_modules/framer-motion/dist/es/render/html/utils/render.mjs","../node_modules/framer-motion/dist/es/projection/styles/scale-correction.mjs","../node_modules/framer-motion/dist/es/motion/utils/is-forced-motion-value.mjs","../node_modules/framer-motion/dist/es/render/html/utils/scrape-motion-values.mjs","../node_modules/framer-motion/dist/es/render/html/HTMLVisualElement.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/camel-to-dash.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/path.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/build-attrs.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/camel-case-attrs.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/is-svg-tag.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/scrape-motion-values.mjs","../node_modules/framer-motion/dist/es/render/svg/SVGVisualElement.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/render.mjs","../node_modules/framer-motion/dist/es/render/svg/lowercase-elements.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/is-svg-component.mjs","../node_modules/framer-motion/dist/es/render/dom/create-visual-element.mjs","../node_modules/framer-motion/dist/es/context/LazyContext.mjs","../node_modules/framer-motion/dist/es/context/MotionContext/index.mjs","../node_modules/framer-motion/dist/es/context/MotionContext/create.mjs","../node_modules/framer-motion/dist/es/context/MotionContext/utils.mjs","../node_modules/framer-motion/dist/es/render/html/utils/create-render-state.mjs","../node_modules/framer-motion/dist/es/render/html/use-props.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/create-render-state.mjs","../node_modules/framer-motion/dist/es/render/svg/use-props.mjs","../node_modules/framer-motion/dist/es/motion/utils/valid-prop.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/filter-props.mjs","../node_modules/framer-motion/dist/es/render/dom/use-render.mjs","../node_modules/framer-motion/dist/es/value/utils/resolve-motion-value.mjs","../node_modules/framer-motion/dist/es/motion/utils/use-visual-state.mjs","../node_modules/framer-motion/dist/es/render/html/use-html-visual-state.mjs","../node_modules/framer-motion/dist/es/render/svg/use-svg-visual-state.mjs","../node_modules/framer-motion/dist/es/motion/utils/symbol.mjs","../node_modules/framer-motion/dist/es/utils/is-ref-object.mjs","../node_modules/framer-motion/dist/es/motion/utils/use-motion-ref.mjs","../node_modules/framer-motion/dist/es/animation/optimized-appear/data-id.mjs","../node_modules/framer-motion/dist/es/context/SwitchLayoutGroupContext.mjs","../node_modules/framer-motion/dist/es/motion/utils/use-visual-element.mjs","../node_modules/framer-motion/dist/es/motion/index.mjs","../node_modules/framer-motion/dist/es/motion/features/load-features.mjs","../node_modules/framer-motion/dist/es/render/components/create-proxy.mjs","../node_modules/framer-motion/dist/es/render/utils/resolve-dynamic-variants.mjs","../node_modules/motion-dom/dist/es/animation/utils/get-value-transition.mjs","../node_modules/framer-motion/dist/es/animation/utils/is-keyframes-target.mjs","../node_modules/framer-motion/dist/es/render/utils/setters.mjs","../node_modules/framer-motion/dist/es/value/use-will-change/add-will-change.mjs","../node_modules/framer-motion/dist/es/value/use-will-change/is.mjs","../node_modules/framer-motion/dist/es/animation/optimized-appear/get-appear-id.mjs","../node_modules/motion-utils/dist/es/pipe.mjs","../node_modules/motion-utils/dist/es/time-conversion.mjs","../node_modules/motion-dom/dist/es/stats/animation-count.mjs","../node_modules/motion-dom/dist/es/value/types/color/hsla-to-rgba.mjs","../node_modules/motion-dom/dist/es/utils/mix/immediate.mjs","../node_modules/motion-dom/dist/es/utils/mix/color.mjs","../node_modules/motion-dom/dist/es/utils/mix/visibility.mjs","../node_modules/motion-dom/dist/es/utils/mix/complex.mjs","../node_modules/motion-dom/dist/es/utils/mix/index.mjs","../node_modules/motion-dom/dist/es/animation/drivers/frame.mjs","../node_modules/motion-dom/dist/es/animation/waapi/utils/linear.mjs","../node_modules/motion-dom/dist/es/animation/generators/utils/calc-duration.mjs","../node_modules/motion-dom/dist/es/animation/generators/utils/velocity.mjs","../node_modules/motion-dom/dist/es/animation/generators/spring/defaults.mjs","../node_modules/motion-dom/dist/es/animation/generators/spring/find.mjs","../node_modules/motion-dom/dist/es/animation/generators/spring/index.mjs","../node_modules/motion-dom/dist/es/animation/generators/inertia.mjs","../node_modules/motion-dom/dist/es/animation/generators/utils/create-generator-easing.mjs","../node_modules/motion-utils/dist/es/easing/cubic-bezier.mjs","../node_modules/motion-utils/dist/es/easing/ease.mjs","../node_modules/motion-utils/dist/es/easing/modifiers/mirror.mjs","../node_modules/motion-utils/dist/es/easing/modifiers/reverse.mjs","../node_modules/motion-utils/dist/es/easing/back.mjs","../node_modules/motion-utils/dist/es/easing/anticipate.mjs","../node_modules/motion-utils/dist/es/easing/circ.mjs","../node_modules/motion-utils/dist/es/easing/utils/is-bezier-definition.mjs","../node_modules/motion-utils/dist/es/easing/utils/map.mjs","../node_modules/motion-utils/dist/es/progress.mjs","../node_modules/motion-dom/dist/es/utils/interpolate.mjs","../node_modules/motion-dom/dist/es/animation/keyframes/offsets/default.mjs","../node_modules/motion-dom/dist/es/animation/keyframes/offsets/fill.mjs","../node_modules/motion-dom/dist/es/animation/generators/keyframes.mjs","../node_modules/motion-utils/dist/es/easing/utils/is-easing-array.mjs","../node_modules/motion-dom/dist/es/animation/keyframes/offsets/time.mjs","../node_modules/motion-dom/dist/es/animation/keyframes/get-final.mjs","../node_modules/motion-dom/dist/es/animation/utils/replace-transition-type.mjs","../node_modules/motion-dom/dist/es/animation/utils/WithPromise.mjs","../node_modules/motion-dom/dist/es/animation/JSAnimation.mjs","../node_modules/motion-utils/dist/es/memo.mjs","../node_modules/motion-dom/dist/es/utils/supports/scroll-timeline.mjs","../node_modules/motion-dom/dist/es/utils/supports/flags.mjs","../node_modules/motion-dom/dist/es/utils/supports/memo.mjs","../node_modules/motion-dom/dist/es/utils/supports/linear-easing.mjs","../node_modules/motion-dom/dist/es/animation/waapi/easing/cubic-bezier.mjs","../node_modules/motion-dom/dist/es/animation/waapi/easing/supported.mjs","../node_modules/motion-dom/dist/es/animation/waapi/easing/map-easing.mjs","../node_modules/motion-dom/dist/es/animation/waapi/start-waapi-animation.mjs","../node_modules/motion-dom/dist/es/animation/generators/utils/is-generator.mjs","../node_modules/motion-dom/dist/es/animation/NativeAnimation.mjs","../node_modules/motion-dom/dist/es/animation/waapi/utils/apply-generator.mjs","../node_modules/motion-dom/dist/es/render/dom/style-set.mjs","../node_modules/motion-dom/dist/es/render/dom/is-css-var.mjs","../node_modules/motion-dom/dist/es/animation/waapi/utils/unsupported-easing.mjs","../node_modules/motion-dom/dist/es/animation/NativeAnimationExtended.mjs","../node_modules/motion-dom/dist/es/animation/utils/is-animatable.mjs","../node_modules/motion-dom/dist/es/animation/waapi/supports/waapi.mjs","../node_modules/motion-dom/dist/es/animation/AsyncMotionValueAnimation.mjs","../node_modules/motion-dom/dist/es/animation/utils/can-animate.mjs","../node_modules/framer-motion/dist/es/animation/animators/waapi/utils/get-final-keyframe.mjs","../node_modules/framer-motion/dist/es/animation/utils/default-transitions.mjs","../node_modules/framer-motion/dist/es/animation/interfaces/motion-value.mjs","../node_modules/framer-motion/dist/es/animation/utils/is-transition-defined.mjs","../node_modules/framer-motion/dist/es/animation/interfaces/visual-element-target.mjs","../node_modules/framer-motion/dist/es/animation/interfaces/visual-element-variant.mjs","../node_modules/framer-motion/dist/es/utils/shallow-compare.mjs","../node_modules/framer-motion/dist/es/render/utils/get-variant-context.mjs","../node_modules/framer-motion/dist/es/render/utils/animation-state.mjs","../node_modules/framer-motion/dist/es/animation/interfaces/visual-element.mjs","../node_modules/framer-motion/dist/es/motion/features/Feature.mjs","../node_modules/framer-motion/dist/es/motion/features/animation/exit.mjs","../node_modules/framer-motion/dist/es/motion/features/animations.mjs","../node_modules/framer-motion/dist/es/motion/features/animation/index.mjs","../node_modules/motion-dom/dist/es/gestures/drag/state/is-active.mjs","../node_modules/framer-motion/dist/es/events/add-dom-event.mjs","../node_modules/motion-dom/dist/es/gestures/utils/is-primary-pointer.mjs","../node_modules/framer-motion/dist/es/events/event-info.mjs","../node_modules/framer-motion/dist/es/events/add-pointer-event.mjs","../node_modules/framer-motion/dist/es/projection/geometry/delta-calc.mjs","../node_modules/framer-motion/dist/es/projection/utils/each-axis.mjs","../node_modules/framer-motion/dist/es/utils/get-context-window.mjs","../node_modules/framer-motion/dist/es/utils/distance.mjs","../node_modules/framer-motion/dist/es/gestures/pan/PanSession.mjs","../node_modules/framer-motion/dist/es/gestures/drag/utils/constraints.mjs","../node_modules/framer-motion/dist/es/gestures/drag/VisualElementDragControls.mjs","../node_modules/motion-dom/dist/es/gestures/drag/state/set-active.mjs","../node_modules/framer-motion/dist/es/gestures/pan/index.mjs","../node_modules/framer-motion/dist/es/projection/node/state.mjs","../node_modules/framer-motion/dist/es/projection/styles/scale-border-radius.mjs","../node_modules/framer-motion/dist/es/projection/styles/scale-box-shadow.mjs","../node_modules/framer-motion/dist/es/motion/features/layout/MeasureLayout.mjs","../node_modules/motion-dom/dist/es/utils/is-svg-element.mjs","../node_modules/framer-motion/dist/es/render/utils/compare-by-depth.mjs","../node_modules/framer-motion/dist/es/render/utils/flat-tree.mjs","../node_modules/framer-motion/dist/es/utils/delay.mjs","../node_modules/framer-motion/dist/es/projection/animation/mix-values.mjs","../node_modules/framer-motion/dist/es/projection/geometry/copy.mjs","../node_modules/framer-motion/dist/es/projection/geometry/delta-remove.mjs","../node_modules/framer-motion/dist/es/projection/geometry/utils.mjs","../node_modules/framer-motion/dist/es/projection/shared/stack.mjs","../node_modules/framer-motion/dist/es/projection/node/create-projection-node.mjs","../node_modules/motion-dom/dist/es/utils/is-svg-svg-element.mjs","../node_modules/framer-motion/dist/es/animation/animate/single-value.mjs","../node_modules/framer-motion/dist/es/projection/styles/transform.mjs","../node_modules/framer-motion/dist/es/projection/node/DocumentProjectionNode.mjs","../node_modules/framer-motion/dist/es/projection/node/HTMLProjectionNode.mjs","../node_modules/framer-motion/dist/es/motion/features/drag.mjs","../node_modules/framer-motion/dist/es/gestures/drag/index.mjs","../node_modules/motion-dom/dist/es/gestures/utils/setup.mjs","../node_modules/motion-dom/dist/es/utils/resolve-elements.mjs","../node_modules/motion-dom/dist/es/gestures/hover.mjs","../node_modules/framer-motion/dist/es/gestures/hover.mjs","../node_modules/motion-dom/dist/es/gestures/utils/is-node-or-child.mjs","../node_modules/motion-dom/dist/es/gestures/press/utils/is-keyboard-accessible.mjs","../node_modules/motion-dom/dist/es/gestures/press/utils/state.mjs","../node_modules/motion-dom/dist/es/gestures/press/utils/keyboard.mjs","../node_modules/motion-dom/dist/es/gestures/press/index.mjs","../node_modules/framer-motion/dist/es/gestures/press.mjs","../node_modules/framer-motion/dist/es/motion/features/viewport/observers.mjs","../node_modules/framer-motion/dist/es/motion/features/viewport/index.mjs","../node_modules/framer-motion/dist/es/motion/features/gestures.mjs","../node_modules/framer-motion/dist/es/render/components/motion/proxy.mjs","../node_modules/framer-motion/dist/es/render/components/motion/feature-bundle.mjs","../node_modules/framer-motion/dist/es/gestures/focus.mjs","../node_modules/framer-motion/dist/es/motion/features/layout.mjs","../node_modules/@heroicons/react/24/outline/esm/EllipsisHorizontalIcon.js","../node_modules/@heroicons/react/24/outline/esm/HashtagIcon.js","../node_modules/@heroicons/react/24/outline/esm/BookmarkIcon.js","../node_modules/@heroicons/react/24/outline/esm/MagnifyingGlassIcon.js","../node_modules/@heroicons/react/24/outline/esm/CalendarIcon.js","../node_modules/@heroicons/react/24/outline/esm/FunnelIcon.js","../node_modules/motion-utils/dist/es/is-object.mjs","../node_modules/@heroicons/react/24/outline/esm/ListBulletIcon.js","../node_modules/@heroicons/react/24/outline/esm/PlusIcon.js","../node_modules/motion-dom/dist/es/utils/is-html-element.mjs","../node_modules/framer-motion/dist/es/components/AnimatePresence/use-presence.mjs","../node_modules/@heroicons/react/24/outline/esm/TrashIcon.js","../node_modules/@heroicons/react/24/outline/esm/CheckIcon.js","../node_modules/framer-motion/dist/es/context/PresenceContext.mjs","../node_modules/framer-motion/dist/es/context/LayoutGroupContext.mjs","../node_modules/@heroicons/react/24/outline/esm/FolderOpenIcon.js"],"sourcesContent":["import { useLayoutEffect, useEffect } from 'react';\nimport { isBrowser } from './is-browser.mjs';\n\nconst useIsomorphicLayoutEffect = isBrowser ? useLayoutEffect : useEffect;\n\nexport { useIsomorphicLayoutEffect };\n","import * as React from \"react\";\nfunction TagIcon({\n  title,\n  titleId,\n  ...props\n}, svgRef) {\n  return /*#__PURE__*/React.createElement(\"svg\", Object.assign({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    fill: \"none\",\n    viewBox: \"0 0 24 24\",\n    strokeWidth: 1.5,\n    stroke: \"currentColor\",\n    \"aria-hidden\": \"true\",\n    \"data-slot\": \"icon\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, /*#__PURE__*/React.createElement(\"path\", {\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    d: \"M9.568 3H5.25A2.25 2.25 0 0 0 3 5.25v4.318c0 .597.237 1.17.659 1.591l9.581 9.581c.699.699 1.78.872 2.607.33a18.095 18.095 0 0 0 5.223-5.223c.542-.827.369-1.908-.33-2.607L11.16 3.66A2.25 2.25 0 0 0 9.568 3Z\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    d: \"M6 6h.008v.008H6V6Z\"\n  }));\n}\nconst ForwardRef = /*#__PURE__*/ React.forwardRef(TagIcon);\nexport default ForwardRef;","\"use client\";\nimport { createContext } from 'react';\n\n/**\n * @public\n */\nconst MotionConfigContext = createContext({\n    transformPagePoint: (p) => p,\n    isStatic: false,\n    reducedMotion: \"never\",\n});\n\nexport { MotionConfigContext };\n","import * as React from \"react\";\nfunction DocumentTextIcon({\n  title,\n  titleId,\n  ...props\n}, svgRef) {\n  return /*#__PURE__*/React.createElement(\"svg\", Object.assign({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    fill: \"none\",\n    viewBox: \"0 0 24 24\",\n    strokeWidth: 1.5,\n    stroke: \"currentColor\",\n    \"aria-hidden\": \"true\",\n    \"data-slot\": \"icon\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, /*#__PURE__*/React.createElement(\"path\", {\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    d: \"M19.5 14.25v-2.625a3.375 3.375 0 0 0-3.375-3.375h-1.5A1.125 1.125 0 0 1 13.5 7.125v-1.5a3.375 3.375 0 0 0-3.375-3.375H8.25m0 12.75h7.5m-7.5 3H12M10.5 2.25H5.625c-.621 0-1.125.504-1.125 1.125v17.25c0 .621.504 1.125 1.125 1.125h12.75c.621 0 1.125-.504 1.125-1.125V11.25a9 9 0 0 0-9-9Z\"\n  }));\n}\nconst ForwardRef = /*#__PURE__*/ React.forwardRef(DocumentTextIcon);\nexport default ForwardRef;","import * as React from \"react\";\nfunction PencilIcon({\n  title,\n  titleId,\n  ...props\n}, svgRef) {\n  return /*#__PURE__*/React.createElement(\"svg\", Object.assign({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    fill: \"none\",\n    viewBox: \"0 0 24 24\",\n    strokeWidth: 1.5,\n    stroke: \"currentColor\",\n    \"aria-hidden\": \"true\",\n    \"data-slot\": \"icon\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, /*#__PURE__*/React.createElement(\"path\", {\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    d: \"m16.862 4.487 1.687-1.688a1.875 1.875 0 1 1 2.652 2.652L6.832 19.82a4.5 4.5 0 0 1-1.897 1.13l-2.685.8.8-2.685a4.5 4.5 0 0 1 1.13-1.897L16.863 4.487Zm0 0L19.5 7.125\"\n  }));\n}\nconst ForwardRef = /*#__PURE__*/ React.forwardRef(PencilIcon);\nexport default ForwardRef;","\"use client\";\nimport { jsx } from 'react/jsx-runtime';\nimport { isHTMLElement } from 'motion-dom';\nimport * as React from 'react';\nimport { useId, useRef, useContext, useInsertionEffect } from 'react';\nimport { MotionConfigContext } from '../../context/MotionConfigContext.mjs';\n\n/**\n * Measurement functionality has to be within a separate component\n * to leverage snapshot lifecycle.\n */\nclass PopChildMeasure extends React.Component {\n    getSnapshotBeforeUpdate(prevProps) {\n        const element = this.props.childRef.current;\n        if (element && prevProps.isPresent && !this.props.isPresent) {\n            const parent = element.offsetParent;\n            const parentWidth = isHTMLElement(parent)\n                ? parent.offsetWidth || 0\n                : 0;\n            const size = this.props.sizeRef.current;\n            size.height = element.offsetHeight || 0;\n            size.width = element.offsetWidth || 0;\n            size.top = element.offsetTop;\n            size.left = element.offsetLeft;\n            size.right = parentWidth - size.width - size.left;\n        }\n        return null;\n    }\n    /**\n     * Required with getSnapshotBeforeUpdate to stop React complaining.\n     */\n    componentDidUpdate() { }\n    render() {\n        return this.props.children;\n    }\n}\nfunction PopChild({ children, isPresent, anchorX, root }) {\n    const id = useId();\n    const ref = useRef(null);\n    const size = useRef({\n        width: 0,\n        height: 0,\n        top: 0,\n        left: 0,\n        right: 0,\n    });\n    const { nonce } = useContext(MotionConfigContext);\n    /**\n     * We create and inject a style block so we can apply this explicit\n     * sizing in a non-destructive manner by just deleting the style block.\n     *\n     * We can't apply size via render as the measurement happens\n     * in getSnapshotBeforeUpdate (post-render), likewise if we apply the\n     * styles directly on the DOM node, we might be overwriting\n     * styles set via the style prop.\n     */\n    useInsertionEffect(() => {\n        const { width, height, top, left, right } = size.current;\n        if (isPresent || !ref.current || !width || !height)\n            return;\n        const x = anchorX === \"left\" ? `left: ${left}` : `right: ${right}`;\n        ref.current.dataset.motionPopId = id;\n        const style = document.createElement(\"style\");\n        if (nonce)\n            style.nonce = nonce;\n        const parent = root ?? document.head;\n        parent.appendChild(style);\n        if (style.sheet) {\n            style.sheet.insertRule(`\n          [data-motion-pop-id=\"${id}\"] {\n            position: absolute !important;\n            width: ${width}px !important;\n            height: ${height}px !important;\n            ${x}px !important;\n            top: ${top}px !important;\n          }\n        `);\n        }\n        return () => {\n            parent.removeChild(style);\n            if (parent.contains(style)) {\n                parent.removeChild(style);\n            }\n        };\n    }, [isPresent]);\n    return (jsx(PopChildMeasure, { isPresent: isPresent, childRef: ref, sizeRef: size, children: React.cloneElement(children, { ref }) }));\n}\n\nexport { PopChild };\n","\"use client\";\nimport { jsx } from 'react/jsx-runtime';\nimport * as React from 'react';\nimport { useId, useMemo } from 'react';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { useConstant } from '../../utils/use-constant.mjs';\nimport { PopChild } from './PopChild.mjs';\n\nconst PresenceChild = ({ children, initial, isPresent, onExitComplete, custom, presenceAffectsLayout, mode, anchorX, root }) => {\n    const presenceChildren = useConstant(newChildrenMap);\n    const id = useId();\n    let isReusedContext = true;\n    let context = useMemo(() => {\n        isReusedContext = false;\n        return {\n            id,\n            initial,\n            isPresent,\n            custom,\n            onExitComplete: (childId) => {\n                presenceChildren.set(childId, true);\n                for (const isComplete of presenceChildren.values()) {\n                    if (!isComplete)\n                        return; // can stop searching when any is incomplete\n                }\n                onExitComplete && onExitComplete();\n            },\n            register: (childId) => {\n                presenceChildren.set(childId, false);\n                return () => presenceChildren.delete(childId);\n            },\n        };\n    }, [isPresent, presenceChildren, onExitComplete]);\n    /**\n     * If the presence of a child affects the layout of the components around it,\n     * we want to make a new context value to ensure they get re-rendered\n     * so they can detect that layout change.\n     */\n    if (presenceAffectsLayout && isReusedContext) {\n        context = { ...context };\n    }\n    useMemo(() => {\n        presenceChildren.forEach((_, key) => presenceChildren.set(key, false));\n    }, [isPresent]);\n    /**\n     * If there's no `motion` components to fire exit animations, we want to remove this\n     * component immediately.\n     */\n    React.useEffect(() => {\n        !isPresent &&\n            !presenceChildren.size &&\n            onExitComplete &&\n            onExitComplete();\n    }, [isPresent]);\n    if (mode === \"popLayout\") {\n        children = (jsx(PopChild, { isPresent: isPresent, anchorX: anchorX, root: root, children: children }));\n    }\n    return (jsx(PresenceContext.Provider, { value: context, children: children }));\n};\nfunction newChildrenMap() {\n    return new Map();\n}\n\nexport { PresenceChild };\n","import { Children, isValidElement } from 'react';\n\nconst getChildKey = (child) => child.key || \"\";\nfunction onlyElements(children) {\n    const filtered = [];\n    // We use forEach here instead of map as map mutates the component key by preprending `.$`\n    Children.forEach(children, (child) => {\n        if (isValidElement(child))\n            filtered.push(child);\n    });\n    return filtered;\n}\n\nexport { getChildKey, onlyElements };\n","\"use client\";\nimport { jsx, Fragment } from 'react/jsx-runtime';\nimport { useMemo, useRef, useState, useContext } from 'react';\nimport { LayoutGroupContext } from '../../context/LayoutGroupContext.mjs';\nimport { useConstant } from '../../utils/use-constant.mjs';\nimport { useIsomorphicLayoutEffect } from '../../utils/use-isomorphic-effect.mjs';\nimport { PresenceChild } from './PresenceChild.mjs';\nimport { usePresence } from './use-presence.mjs';\nimport { onlyElements, getChildKey } from './utils.mjs';\n\n/**\n * `AnimatePresence` enables the animation of components that have been removed from the tree.\n *\n * When adding/removing more than a single child, every child **must** be given a unique `key` prop.\n *\n * Any `motion` components that have an `exit` property defined will animate out when removed from\n * the tree.\n *\n * ```jsx\n * import { motion, AnimatePresence } from 'framer-motion'\n *\n * export const Items = ({ items }) => (\n *   <AnimatePresence>\n *     {items.map(item => (\n *       <motion.div\n *         key={item.id}\n *         initial={{ opacity: 0 }}\n *         animate={{ opacity: 1 }}\n *         exit={{ opacity: 0 }}\n *       />\n *     ))}\n *   </AnimatePresence>\n * )\n * ```\n *\n * You can sequence exit animations throughout a tree using variants.\n *\n * If a child contains multiple `motion` components with `exit` props, it will only unmount the child\n * once all `motion` components have finished animating out. Likewise, any components using\n * `usePresence` all need to call `safeToRemove`.\n *\n * @public\n */\nconst AnimatePresence = ({ children, custom, initial = true, onExitComplete, presenceAffectsLayout = true, mode = \"sync\", propagate = false, anchorX = \"left\", root }) => {\n    const [isParentPresent, safeToRemove] = usePresence(propagate);\n    /**\n     * Filter any children that aren't ReactElements. We can only track components\n     * between renders with a props.key.\n     */\n    const presentChildren = useMemo(() => onlyElements(children), [children]);\n    /**\n     * Track the keys of the currently rendered children. This is used to\n     * determine which children are exiting.\n     */\n    const presentKeys = propagate && !isParentPresent ? [] : presentChildren.map(getChildKey);\n    /**\n     * If `initial={false}` we only want to pass this to components in the first render.\n     */\n    const isInitialRender = useRef(true);\n    /**\n     * A ref containing the currently present children. When all exit animations\n     * are complete, we use this to re-render the component with the latest children\n     * *committed* rather than the latest children *rendered*.\n     */\n    const pendingPresentChildren = useRef(presentChildren);\n    /**\n     * Track which exiting children have finished animating out.\n     */\n    const exitComplete = useConstant(() => new Map());\n    /**\n     * Save children to render as React state. To ensure this component is concurrent-safe,\n     * we check for exiting children via an effect.\n     */\n    const [diffedChildren, setDiffedChildren] = useState(presentChildren);\n    const [renderedChildren, setRenderedChildren] = useState(presentChildren);\n    useIsomorphicLayoutEffect(() => {\n        isInitialRender.current = false;\n        pendingPresentChildren.current = presentChildren;\n        /**\n         * Update complete status of exiting children.\n         */\n        for (let i = 0; i < renderedChildren.length; i++) {\n            const key = getChildKey(renderedChildren[i]);\n            if (!presentKeys.includes(key)) {\n                if (exitComplete.get(key) !== true) {\n                    exitComplete.set(key, false);\n                }\n            }\n            else {\n                exitComplete.delete(key);\n            }\n        }\n    }, [renderedChildren, presentKeys.length, presentKeys.join(\"-\")]);\n    const exitingChildren = [];\n    if (presentChildren !== diffedChildren) {\n        let nextChildren = [...presentChildren];\n        /**\n         * Loop through all the currently rendered components and decide which\n         * are exiting.\n         */\n        for (let i = 0; i < renderedChildren.length; i++) {\n            const child = renderedChildren[i];\n            const key = getChildKey(child);\n            if (!presentKeys.includes(key)) {\n                nextChildren.splice(i, 0, child);\n                exitingChildren.push(child);\n            }\n        }\n        /**\n         * If we're in \"wait\" mode, and we have exiting children, we want to\n         * only render these until they've all exited.\n         */\n        if (mode === \"wait\" && exitingChildren.length) {\n            nextChildren = exitingChildren;\n        }\n        setRenderedChildren(onlyElements(nextChildren));\n        setDiffedChildren(presentChildren);\n        /**\n         * Early return to ensure once we've set state with the latest diffed\n         * children, we can immediately re-render.\n         */\n        return null;\n    }\n    if (process.env.NODE_ENV !== \"production\" &&\n        mode === \"wait\" &&\n        renderedChildren.length > 1) {\n        console.warn(`You're attempting to animate multiple children within AnimatePresence, but its mode is set to \"wait\". This will lead to odd visual behaviour.`);\n    }\n    /**\n     * If we've been provided a forceRender function by the LayoutGroupContext,\n     * we can use it to force a re-render amongst all surrounding components once\n     * all components have finished animating out.\n     */\n    const { forceRender } = useContext(LayoutGroupContext);\n    return (jsx(Fragment, { children: renderedChildren.map((child) => {\n            const key = getChildKey(child);\n            const isPresent = propagate && !isParentPresent\n                ? false\n                : presentChildren === renderedChildren ||\n                    presentKeys.includes(key);\n            const onExit = () => {\n                if (exitComplete.has(key)) {\n                    exitComplete.set(key, true);\n                }\n                else {\n                    return;\n                }\n                let isEveryExitComplete = true;\n                exitComplete.forEach((isExitComplete) => {\n                    if (!isExitComplete)\n                        isEveryExitComplete = false;\n                });\n                if (isEveryExitComplete) {\n                    forceRender?.();\n                    setRenderedChildren(pendingPresentChildren.current);\n                    propagate && safeToRemove?.();\n                    onExitComplete && onExitComplete();\n                }\n            };\n            return (jsx(PresenceChild, { isPresent: isPresent, initial: !isInitialRender.current || initial\n                    ? undefined\n                    : false, custom: custom, presenceAffectsLayout: presenceAffectsLayout, mode: mode, root: root, onExitComplete: isPresent ? undefined : onExit, anchorX: anchorX, children: child }, key));\n        }) }));\n};\n\nexport { AnimatePresence };\n","const isBrowser = typeof window !== \"undefined\";\n\nexport { isBrowser };\n","import * as React from \"react\";\nfunction Squares2X2Icon({\n  title,\n  titleId,\n  ...props\n}, svgRef) {\n  return /*#__PURE__*/React.createElement(\"svg\", Object.assign({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    fill: \"none\",\n    viewBox: \"0 0 24 24\",\n    strokeWidth: 1.5,\n    stroke: \"currentColor\",\n    \"aria-hidden\": \"true\",\n    \"data-slot\": \"icon\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, /*#__PURE__*/React.createElement(\"path\", {\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    d: \"M3.75 6A2.25 2.25 0 0 1 6 3.75h2.25A2.25 2.25 0 0 1 10.5 6v2.25a2.25 2.25 0 0 1-2.25 2.25H6a2.25 2.25 0 0 1-2.25-2.25V6ZM3.75 15.75A2.25 2.25 0 0 1 6 13.5h2.25a2.25 2.25 0 0 1 2.25 2.25V18a2.25 2.25 0 0 1-2.25 2.25H6A2.25 2.25 0 0 1 3.75 18v-2.25ZM13.5 6a2.25 2.25 0 0 1 2.25-2.25H18A2.25 2.25 0 0 1 20.25 6v2.25A2.25 2.25 0 0 1 18 10.5h-2.25a2.25 2.25 0 0 1-2.25-2.25V6ZM13.5 15.75a2.25 2.25 0 0 1 2.25-2.25H18a2.25 2.25 0 0 1 2.25 2.25V18A2.25 2.25 0 0 1 18 20.25h-2.25A2.25 2.25 0 0 1 13.5 18v-2.25Z\"\n  }));\n}\nconst ForwardRef = /*#__PURE__*/ React.forwardRef(Squares2X2Icon);\nexport default ForwardRef;","import { useRef } from 'react';\n\n/**\n * Creates a constant value over the lifecycle of a component.\n *\n * Even if `useMemo` is provided an empty array as its final argument, it doesn't offer\n * a guarantee that it won't re-run for performance reasons later on. By using `useConstant`\n * you can ensure that initialisers don't execute twice or more.\n */\nfunction useConstant(init) {\n    const ref = useRef(null);\n    if (ref.current === null) {\n        ref.current = init();\n    }\n    return ref.current;\n}\n\nexport { useConstant };\n","/**\n * Generate a list of every possible transform key.\n */\nconst transformPropOrder = [\n    \"transformPerspective\",\n    \"x\",\n    \"y\",\n    \"z\",\n    \"translateX\",\n    \"translateY\",\n    \"translateZ\",\n    \"scale\",\n    \"scaleX\",\n    \"scaleY\",\n    \"rotate\",\n    \"rotateX\",\n    \"rotateY\",\n    \"rotateZ\",\n    \"skew\",\n    \"skewX\",\n    \"skewY\",\n];\n/**\n * A quick lookup for transform props.\n */\nconst transformProps = /*@__PURE__*/ (() => new Set(transformPropOrder))();\n\nexport { transformPropOrder, transformProps };\n","const radToDeg = (rad) => (rad * 180) / Math.PI;\nconst rotate = (v) => {\n    const angle = radToDeg(Math.atan2(v[1], v[0]));\n    return rebaseAngle(angle);\n};\nconst matrix2dParsers = {\n    x: 4,\n    y: 5,\n    translateX: 4,\n    translateY: 5,\n    scaleX: 0,\n    scaleY: 3,\n    scale: (v) => (Math.abs(v[0]) + Math.abs(v[3])) / 2,\n    rotate,\n    rotateZ: rotate,\n    skewX: (v) => radToDeg(Math.atan(v[1])),\n    skewY: (v) => radToDeg(Math.atan(v[2])),\n    skew: (v) => (Math.abs(v[1]) + Math.abs(v[2])) / 2,\n};\nconst rebaseAngle = (angle) => {\n    angle = angle % 360;\n    if (angle < 0)\n        angle += 360;\n    return angle;\n};\nconst rotateZ = rotate;\nconst scaleX = (v) => Math.sqrt(v[0] * v[0] + v[1] * v[1]);\nconst scaleY = (v) => Math.sqrt(v[4] * v[4] + v[5] * v[5]);\nconst matrix3dParsers = {\n    x: 12,\n    y: 13,\n    z: 14,\n    translateX: 12,\n    translateY: 13,\n    translateZ: 14,\n    scaleX,\n    scaleY,\n    scale: (v) => (scaleX(v) + scaleY(v)) / 2,\n    rotateX: (v) => rebaseAngle(radToDeg(Math.atan2(v[6], v[5]))),\n    rotateY: (v) => rebaseAngle(radToDeg(Math.atan2(-v[2], v[0]))),\n    rotateZ,\n    rotate: rotateZ,\n    skewX: (v) => radToDeg(Math.atan(v[4])),\n    skewY: (v) => radToDeg(Math.atan(v[1])),\n    skew: (v) => (Math.abs(v[1]) + Math.abs(v[4])) / 2,\n};\nfunction defaultTransformValue(name) {\n    return name.includes(\"scale\") ? 1 : 0;\n}\nfunction parseValueFromTransform(transform, name) {\n    if (!transform || transform === \"none\") {\n        return defaultTransformValue(name);\n    }\n    const matrix3dMatch = transform.match(/^matrix3d\\(([-\\d.e\\s,]+)\\)$/u);\n    let parsers;\n    let match;\n    if (matrix3dMatch) {\n        parsers = matrix3dParsers;\n        match = matrix3dMatch;\n    }\n    else {\n        const matrix2dMatch = transform.match(/^matrix\\(([-\\d.e\\s,]+)\\)$/u);\n        parsers = matrix2dParsers;\n        match = matrix2dMatch;\n    }\n    if (!match) {\n        return defaultTransformValue(name);\n    }\n    const valueParser = parsers[name];\n    const values = match[1].split(\",\").map(convertTransformToNumber);\n    return typeof valueParser === \"function\"\n        ? valueParser(values)\n        : values[valueParser];\n}\nconst readTransformValue = (instance, name) => {\n    const { transform = \"none\" } = getComputedStyle(instance);\n    return parseValueFromTransform(transform, name);\n};\nfunction convertTransformToNumber(value) {\n    return parseFloat(value.trim());\n}\n\nexport { defaultTransformValue, parseValueFromTransform, readTransformValue };\n","const checkStringStartsWith = (token) => (key) => typeof key === \"string\" && key.startsWith(token);\nconst isCSSVariableName = \n/*@__PURE__*/ checkStringStartsWith(\"--\");\nconst startsAsVariableToken = \n/*@__PURE__*/ checkStringStartsWith(\"var(--\");\nconst isCSSVariableToken = (value) => {\n    const startsWithToken = startsAsVariableToken(value);\n    if (!startsWithToken)\n        return false;\n    // Ensure any comments are stripped from the value as this can harm performance of the regex.\n    return singleCssVariableRegex.test(value.split(\"/*\")[0].trim());\n};\nconst singleCssVariableRegex = /var\\(--(?:[\\w-]+\\s*|[\\w-]+\\s*,(?:\\s*[^)(\\s]|\\s*\\((?:[^)(]|\\([^)(]*\\))*\\))+\\s*)\\)$/iu;\n\nexport { isCSSVariableName, isCSSVariableToken };\n","/**\n * Bounding boxes tend to be defined as top, left, right, bottom. For various operations\n * it's easier to consider each axis individually. This function returns a bounding box\n * as a map of single-axis min/max values.\n */\nfunction convertBoundingBoxToBox({ top, left, right, bottom, }) {\n    return {\n        x: { min: left, max: right },\n        y: { min: top, max: bottom },\n    };\n}\nfunction convertBoxToBoundingBox({ x, y }) {\n    return { top: y.min, right: x.max, bottom: y.max, left: x.min };\n}\n/**\n * Applies a TransformPoint function to a bounding box. TransformPoint is usually a function\n * provided by Framer to allow measured points to be corrected for device scaling. This is used\n * when measuring DOM elements and DOM event points.\n */\nfunction transformBoxPoints(point, transformPoint) {\n    if (!transformPoint)\n        return point;\n    const topLeft = transformPoint({ x: point.left, y: point.top });\n    const bottomRight = transformPoint({ x: point.right, y: point.bottom });\n    return {\n        top: topLeft.y,\n        left: topLeft.x,\n        bottom: bottomRight.y,\n        right: bottomRight.x,\n    };\n}\n\nexport { convertBoundingBoxToBox, convertBoxToBoundingBox, transformBoxPoints };\n","/*\n  Value in range from progress\n\n  Given a lower limit and an upper limit, we return the value within\n  that range as expressed by progress (usually a number from 0 to 1)\n\n  So progress = 0.5 would change\n\n  from -------- to\n\n  to\n\n  from ---- to\n\n  E.g. from = 10, to = 20, progress = 0.5 => 15\n\n  @param [number]: Lower limit of range\n  @param [number]: Upper limit of range\n  @param [number]: The progress between lower and upper limits expressed 0-1\n  @return [number]: Value as calculated from progress within range (not limited within range)\n*/\nconst mixNumber = (from, to, progress) => {\n    return from + (to - from) * progress;\n};\n\nexport { mixNumber };\n","function isIdentityScale(scale) {\n    return scale === undefined || scale === 1;\n}\nfunction hasScale({ scale, scaleX, scaleY }) {\n    return (!isIdentityScale(scale) ||\n        !isIdentityScale(scaleX) ||\n        !isIdentityScale(scaleY));\n}\nfunction hasTransform(values) {\n    return (hasScale(values) ||\n        has2DTranslate(values) ||\n        values.z ||\n        values.rotate ||\n        values.rotateX ||\n        values.rotateY ||\n        values.skewX ||\n        values.skewY);\n}\nfunction has2DTranslate(values) {\n    return is2DTranslate(values.x) || is2DTranslate(values.y);\n}\nfunction is2DTranslate(value) {\n    return value && value !== \"0%\";\n}\n\nexport { has2DTranslate, hasScale, hasTransform };\n","import { mixNumber } from 'motion-dom';\nimport { hasTransform } from '../utils/has-transform.mjs';\n\n/**\n * Scales a point based on a factor and an originPoint\n */\nfunction scalePoint(point, scale, originPoint) {\n    const distanceFromOrigin = point - originPoint;\n    const scaled = scale * distanceFromOrigin;\n    return originPoint + scaled;\n}\n/**\n * Applies a translate/scale delta to a point\n */\nfunction applyPointDelta(point, translate, scale, originPoint, boxScale) {\n    if (boxScale !== undefined) {\n        point = scalePoint(point, boxScale, originPoint);\n    }\n    return scalePoint(point, scale, originPoint) + translate;\n}\n/**\n * Applies a translate/scale delta to an axis\n */\nfunction applyAxisDelta(axis, translate = 0, scale = 1, originPoint, boxScale) {\n    axis.min = applyPointDelta(axis.min, translate, scale, originPoint, boxScale);\n    axis.max = applyPointDelta(axis.max, translate, scale, originPoint, boxScale);\n}\n/**\n * Applies a translate/scale delta to a box\n */\nfunction applyBoxDelta(box, { x, y }) {\n    applyAxisDelta(box.x, x.translate, x.scale, x.originPoint);\n    applyAxisDelta(box.y, y.translate, y.scale, y.originPoint);\n}\nconst TREE_SCALE_SNAP_MIN = 0.999999999999;\nconst TREE_SCALE_SNAP_MAX = 1.0000000000001;\n/**\n * Apply a tree of deltas to a box. We do this to calculate the effect of all the transforms\n * in a tree upon our box before then calculating how to project it into our desired viewport-relative box\n *\n * This is the final nested loop within updateLayoutDelta for future refactoring\n */\nfunction applyTreeDeltas(box, treeScale, treePath, isSharedTransition = false) {\n    const treeLength = treePath.length;\n    if (!treeLength)\n        return;\n    // Reset the treeScale\n    treeScale.x = treeScale.y = 1;\n    let node;\n    let delta;\n    for (let i = 0; i < treeLength; i++) {\n        node = treePath[i];\n        delta = node.projectionDelta;\n        /**\n         * TODO: Prefer to remove this, but currently we have motion components with\n         * display: contents in Framer.\n         */\n        const { visualElement } = node.options;\n        if (visualElement &&\n            visualElement.props.style &&\n            visualElement.props.style.display === \"contents\") {\n            continue;\n        }\n        if (isSharedTransition &&\n            node.options.layoutScroll &&\n            node.scroll &&\n            node !== node.root) {\n            transformBox(box, {\n                x: -node.scroll.offset.x,\n                y: -node.scroll.offset.y,\n            });\n        }\n        if (delta) {\n            // Incoporate each ancestor's scale into a culmulative treeScale for this component\n            treeScale.x *= delta.x.scale;\n            treeScale.y *= delta.y.scale;\n            // Apply each ancestor's calculated delta into this component's recorded layout box\n            applyBoxDelta(box, delta);\n        }\n        if (isSharedTransition && hasTransform(node.latestValues)) {\n            transformBox(box, node.latestValues);\n        }\n    }\n    /**\n     * Snap tree scale back to 1 if it's within a non-perceivable threshold.\n     * This will help reduce useless scales getting rendered.\n     */\n    if (treeScale.x < TREE_SCALE_SNAP_MAX &&\n        treeScale.x > TREE_SCALE_SNAP_MIN) {\n        treeScale.x = 1.0;\n    }\n    if (treeScale.y < TREE_SCALE_SNAP_MAX &&\n        treeScale.y > TREE_SCALE_SNAP_MIN) {\n        treeScale.y = 1.0;\n    }\n}\nfunction translateAxis(axis, distance) {\n    axis.min = axis.min + distance;\n    axis.max = axis.max + distance;\n}\n/**\n * Apply a transform to an axis from the latest resolved motion values.\n * This function basically acts as a bridge between a flat motion value map\n * and applyAxisDelta\n */\nfunction transformAxis(axis, axisTranslate, axisScale, boxScale, axisOrigin = 0.5) {\n    const originPoint = mixNumber(axis.min, axis.max, axisOrigin);\n    // Apply the axis delta to the final axis\n    applyAxisDelta(axis, axisTranslate, axisScale, originPoint, boxScale);\n}\n/**\n * Apply a transform to a box from the latest resolved motion values.\n */\nfunction transformBox(box, transform) {\n    transformAxis(box.x, transform.x, transform.scaleX, transform.scale, transform.originX);\n    transformAxis(box.y, transform.y, transform.scaleY, transform.scale, transform.originY);\n}\n\nexport { applyAxisDelta, applyBoxDelta, applyPointDelta, applyTreeDeltas, scalePoint, transformAxis, transformBox, translateAxis };\n","import { convertBoundingBoxToBox, transformBoxPoints } from '../geometry/conversion.mjs';\nimport { translateAxis } from '../geometry/delta-apply.mjs';\n\nfunction measureViewportBox(instance, transformPoint) {\n    return convertBoundingBoxToBox(transformBoxPoints(instance.getBoundingClientRect(), transformPoint));\n}\nfunction measurePageBox(element, rootProjectionNode, transformPagePoint) {\n    const viewportBox = measureViewportBox(element, transformPagePoint);\n    const { scroll } = rootProjectionNode;\n    if (scroll) {\n        translateAxis(viewportBox.x, scroll.offset.x);\n        translateAxis(viewportBox.y, scroll.offset.y);\n    }\n    return viewportBox;\n}\n\nexport { measurePageBox, measureViewportBox };\n","import { transformPropOrder } from './keys-transform.mjs';\n\nconst positionalKeys = new Set([\n    \"width\",\n    \"height\",\n    \"top\",\n    \"left\",\n    \"right\",\n    \"bottom\",\n    ...transformPropOrder,\n]);\n\nexport { positionalKeys };\n","const clamp = (min, max, v) => {\n    if (v > max)\n        return max;\n    if (v < min)\n        return min;\n    return v;\n};\n\nexport { clamp };\n","import { clamp } from 'motion-utils';\n\nconst number = {\n    test: (v) => typeof v === \"number\",\n    parse: parseFloat,\n    transform: (v) => v,\n};\nconst alpha = {\n    ...number,\n    transform: (v) => clamp(0, 1, v),\n};\nconst scale = {\n    ...number,\n    default: 1,\n};\n\nexport { alpha, number, scale };\n","/*#__NO_SIDE_EFFECTS__*/\nconst createUnitType = (unit) => ({\n    test: (v) => typeof v === \"string\" && v.endsWith(unit) && v.split(\" \").length === 1,\n    parse: parseFloat,\n    transform: (v) => `${v}${unit}`,\n});\nconst degrees = /*@__PURE__*/ createUnitType(\"deg\");\nconst percent = /*@__PURE__*/ createUnitType(\"%\");\nconst px = /*@__PURE__*/ createUnitType(\"px\");\nconst vh = /*@__PURE__*/ createUnitType(\"vh\");\nconst vw = /*@__PURE__*/ createUnitType(\"vw\");\nconst progressPercentage = /*@__PURE__*/ (() => ({\n    ...percent,\n    parse: (v) => percent.parse(v) / 100,\n    transform: (v) => percent.transform(v * 100),\n}))();\n\nexport { degrees, percent, progressPercentage, px, vh, vw };\n","/**\n * Tests a provided value against a ValueType\n */\nconst testValueType = (v) => (type) => type.test(v);\n\nexport { testValueType };\n","import { auto } from './auto.mjs';\nimport { number } from './numbers/index.mjs';\nimport { px, percent, degrees, vw, vh } from './numbers/units.mjs';\nimport { testValueType } from './test.mjs';\n\n/**\n * A list of value types commonly used for dimensions\n */\nconst dimensionValueTypes = [number, px, percent, degrees, vw, vh, auto];\n/**\n * Tests a dimensional value against the list of dimension ValueTypes\n */\nconst findDimensionValueType = (v) => dimensionValueTypes.find(testValueType(v));\n\nexport { dimensionValueTypes, findDimensionValueType };\n","/**\n * ValueType for \"auto\"\n */\nconst auto = {\n    test: (v) => v === \"auto\",\n    parse: (v) => v,\n};\n\nexport { auto };\n","/**\n * Check if value is a numerical string, ie a string that is purely a number eg \"100\" or \"-100.1\"\n */\nconst isNumericalString = (v) => /^-?(?:\\d+(?:\\.\\d+)?|\\.\\d+)$/u.test(v);\n\nexport { isNumericalString };\n","import { invariant, isNumericalString } from 'motion-utils';\nimport { isCSSVariableToken } from './is-css-variable.mjs';\n\n/**\n * Parse Framer's special CSS variable format into a CSS token and a fallback.\n *\n * ```\n * `var(--foo, #fff)` => [`--foo`, '#fff']\n * ```\n *\n * @param current\n */\nconst splitCSSVariableRegex = \n// eslint-disable-next-line redos-detector/no-unsafe-regex -- false positive, as it can match a lot of words\n/^var\\(--(?:([\\w-]+)|([\\w-]+), ?([a-zA-Z\\d ()%#.,-]+))\\)/u;\nfunction parseCSSVariable(current) {\n    const match = splitCSSVariableRegex.exec(current);\n    if (!match)\n        return [,];\n    const [, token1, token2, fallback] = match;\n    return [`--${token1 ?? token2}`, fallback];\n}\nconst maxDepth = 4;\nfunction getVariableValue(current, element, depth = 1) {\n    invariant(depth <= maxDepth, `Max CSS variable fallback depth detected in property \"${current}\". This may indicate a circular fallback dependency.`, \"max-css-var-depth\");\n    const [token, fallback] = parseCSSVariable(current);\n    // No CSS variable detected\n    if (!token)\n        return;\n    // Attempt to read this CSS variable off the element\n    const resolved = window.getComputedStyle(element).getPropertyValue(token);\n    if (resolved) {\n        const trimmed = resolved.trim();\n        return isNumericalString(trimmed) ? parseFloat(trimmed) : trimmed;\n    }\n    return isCSSVariableToken(fallback)\n        ? getVariableValue(fallback, element, depth + 1)\n        : fallback;\n}\n\nexport { getVariableValue, parseCSSVariable };\n","import { parseValueFromTransform } from '../../../render/dom/parse-transform.mjs';\nimport { transformPropOrder } from '../../../render/utils/keys-transform.mjs';\nimport { number } from '../../../value/types/numbers/index.mjs';\nimport { px } from '../../../value/types/numbers/units.mjs';\n\nconst isNumOrPxType = (v) => v === number || v === px;\nconst transformKeys = new Set([\"x\", \"y\", \"z\"]);\nconst nonTranslationalTransformKeys = transformPropOrder.filter((key) => !transformKeys.has(key));\nfunction removeNonTranslationalTransform(visualElement) {\n    const removedTransforms = [];\n    nonTranslationalTransformKeys.forEach((key) => {\n        const value = visualElement.getValue(key);\n        if (value !== undefined) {\n            removedTransforms.push([key, value.get()]);\n            value.set(key.startsWith(\"scale\") ? 1 : 0);\n        }\n    });\n    return removedTransforms;\n}\nconst positionalValues = {\n    // Dimensions\n    width: ({ x }, { paddingLeft = \"0\", paddingRight = \"0\" }) => x.max - x.min - parseFloat(paddingLeft) - parseFloat(paddingRight),\n    height: ({ y }, { paddingTop = \"0\", paddingBottom = \"0\" }) => y.max - y.min - parseFloat(paddingTop) - parseFloat(paddingBottom),\n    top: (_bbox, { top }) => parseFloat(top),\n    left: (_bbox, { left }) => parseFloat(left),\n    bottom: ({ y }, { top }) => parseFloat(top) + (y.max - y.min),\n    right: ({ x }, { left }) => parseFloat(left) + (x.max - x.min),\n    // Transform\n    x: (_bbox, { transform }) => parseValueFromTransform(transform, \"x\"),\n    y: (_bbox, { transform }) => parseValueFromTransform(transform, \"y\"),\n};\n// Alias translate longform names\npositionalValues.translateX = positionalValues.x;\npositionalValues.translateY = positionalValues.y;\n\nexport { isNumOrPxType, positionalValues, removeNonTranslationalTransform };\n","/*#__NO_SIDE_EFFECTS__*/\nconst noop = (any) => any;\n\nexport { noop };\n","const MotionGlobalConfig = {};\n\nexport { MotionGlobalConfig };\n","const stepsOrder = [\n    \"setup\", // Compute\n    \"read\", // Read\n    \"resolveKeyframes\", // Write/Read/Write/Read\n    \"preUpdate\", // Compute\n    \"update\", // Compute\n    \"preRender\", // Compute\n    \"render\", // Write\n    \"postRender\", // Compute\n];\n\nexport { stepsOrder };\n","const statsBuffer = {\n    value: null,\n    addProjectionMetrics: null,\n};\n\nexport { statsBuffer };\n","import { MotionGlobalConfig } from 'motion-utils';\nimport { stepsOrder } from './order.mjs';\nimport { createRenderStep } from './render-step.mjs';\n\nconst maxElapsed = 40;\nfunction createRenderBatcher(scheduleNextBatch, allowKeepAlive) {\n    let runNextFrame = false;\n    let useDefaultElapsed = true;\n    const state = {\n        delta: 0.0,\n        timestamp: 0.0,\n        isProcessing: false,\n    };\n    const flagRunNextFrame = () => (runNextFrame = true);\n    const steps = stepsOrder.reduce((acc, key) => {\n        acc[key] = createRenderStep(flagRunNextFrame, allowKeepAlive ? key : undefined);\n        return acc;\n    }, {});\n    const { setup, read, resolveKeyframes, preUpdate, update, preRender, render, postRender, } = steps;\n    const processBatch = () => {\n        const timestamp = MotionGlobalConfig.useManualTiming\n            ? state.timestamp\n            : performance.now();\n        runNextFrame = false;\n        if (!MotionGlobalConfig.useManualTiming) {\n            state.delta = useDefaultElapsed\n                ? 1000 / 60\n                : Math.max(Math.min(timestamp - state.timestamp, maxElapsed), 1);\n        }\n        state.timestamp = timestamp;\n        state.isProcessing = true;\n        // Unrolled render loop for better per-frame performance\n        setup.process(state);\n        read.process(state);\n        resolveKeyframes.process(state);\n        preUpdate.process(state);\n        update.process(state);\n        preRender.process(state);\n        render.process(state);\n        postRender.process(state);\n        state.isProcessing = false;\n        if (runNextFrame && allowKeepAlive) {\n            useDefaultElapsed = false;\n            scheduleNextBatch(processBatch);\n        }\n    };\n    const wake = () => {\n        runNextFrame = true;\n        useDefaultElapsed = true;\n        if (!state.isProcessing) {\n            scheduleNextBatch(processBatch);\n        }\n    };\n    const schedule = stepsOrder.reduce((acc, key) => {\n        const step = steps[key];\n        acc[key] = (process, keepAlive = false, immediate = false) => {\n            if (!runNextFrame)\n                wake();\n            return step.schedule(process, keepAlive, immediate);\n        };\n        return acc;\n    }, {});\n    const cancel = (process) => {\n        for (let i = 0; i < stepsOrder.length; i++) {\n            steps[stepsOrder[i]].cancel(process);\n        }\n    };\n    return { schedule, cancel, state, steps };\n}\n\nexport { createRenderBatcher };\n","import { statsBuffer } from '../stats/buffer.mjs';\n\nfunction createRenderStep(runNextFrame, stepName) {\n    /**\n     * We create and reuse two queues, one to queue jobs for the current frame\n     * and one for the next. We reuse to avoid triggering GC after x frames.\n     */\n    let thisFrame = new Set();\n    let nextFrame = new Set();\n    /**\n     * Track whether we're currently processing jobs in this step. This way\n     * we can decide whether to schedule new jobs for this frame or next.\n     */\n    let isProcessing = false;\n    let flushNextFrame = false;\n    /**\n     * A set of processes which were marked keepAlive when scheduled.\n     */\n    const toKeepAlive = new WeakSet();\n    let latestFrameData = {\n        delta: 0.0,\n        timestamp: 0.0,\n        isProcessing: false,\n    };\n    let numCalls = 0;\n    function triggerCallback(callback) {\n        if (toKeepAlive.has(callback)) {\n            step.schedule(callback);\n            runNextFrame();\n        }\n        numCalls++;\n        callback(latestFrameData);\n    }\n    const step = {\n        /**\n         * Schedule a process to run on the next frame.\n         */\n        schedule: (callback, keepAlive = false, immediate = false) => {\n            const addToCurrentFrame = immediate && isProcessing;\n            const queue = addToCurrentFrame ? thisFrame : nextFrame;\n            if (keepAlive)\n                toKeepAlive.add(callback);\n            if (!queue.has(callback))\n                queue.add(callback);\n            return callback;\n        },\n        /**\n         * Cancel the provided callback from running on the next frame.\n         */\n        cancel: (callback) => {\n            nextFrame.delete(callback);\n            toKeepAlive.delete(callback);\n        },\n        /**\n         * Execute all schedule callbacks.\n         */\n        process: (frameData) => {\n            latestFrameData = frameData;\n            /**\n             * If we're already processing we've probably been triggered by a flushSync\n             * inside an existing process. Instead of executing, mark flushNextFrame\n             * as true and ensure we flush the following frame at the end of this one.\n             */\n            if (isProcessing) {\n                flushNextFrame = true;\n                return;\n            }\n            isProcessing = true;\n            [thisFrame, nextFrame] = [nextFrame, thisFrame];\n            // Execute this frame\n            thisFrame.forEach(triggerCallback);\n            /**\n             * If we're recording stats then\n             */\n            if (stepName && statsBuffer.value) {\n                statsBuffer.value.frameloop[stepName].push(numCalls);\n            }\n            numCalls = 0;\n            // Clear the frame so no callbacks remain. This is to avoid\n            // memory leaks should this render step not run for a while.\n            thisFrame.clear();\n            isProcessing = false;\n            if (flushNextFrame) {\n                flushNextFrame = false;\n                step.process(frameData);\n            }\n        },\n    };\n    return step;\n}\n\nexport { createRenderStep };\n","import { noop } from 'motion-utils';\nimport { createRenderBatcher } from './batcher.mjs';\n\nconst { schedule: frame, cancel: cancelFrame, state: frameData, steps: frameSteps, } = /* @__PURE__ */ createRenderBatcher(typeof requestAnimationFrame !== \"undefined\" ? requestAnimationFrame : noop, true);\n\nexport { cancelFrame, frame, frameData, frameSteps };\n","import { fillWildcards } from './utils/fill-wildcards.mjs';\nimport { removeNonTranslationalTransform } from './utils/unit-conversion.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\n\nconst toResolve = new Set();\nlet isScheduled = false;\nlet anyNeedsMeasurement = false;\nlet isForced = false;\nfunction measureAllKeyframes() {\n    if (anyNeedsMeasurement) {\n        const resolversToMeasure = Array.from(toResolve).filter((resolver) => resolver.needsMeasurement);\n        const elementsToMeasure = new Set(resolversToMeasure.map((resolver) => resolver.element));\n        const transformsToRestore = new Map();\n        /**\n         * Write pass\n         * If we're measuring elements we want to remove bounding box-changing transforms.\n         */\n        elementsToMeasure.forEach((element) => {\n            const removedTransforms = removeNonTranslationalTransform(element);\n            if (!removedTransforms.length)\n                return;\n            transformsToRestore.set(element, removedTransforms);\n            element.render();\n        });\n        // Read\n        resolversToMeasure.forEach((resolver) => resolver.measureInitialState());\n        // Write\n        elementsToMeasure.forEach((element) => {\n            element.render();\n            const restore = transformsToRestore.get(element);\n            if (restore) {\n                restore.forEach(([key, value]) => {\n                    element.getValue(key)?.set(value);\n                });\n            }\n        });\n        // Read\n        resolversToMeasure.forEach((resolver) => resolver.measureEndState());\n        // Write\n        resolversToMeasure.forEach((resolver) => {\n            if (resolver.suspendedScrollY !== undefined) {\n                window.scrollTo(0, resolver.suspendedScrollY);\n            }\n        });\n    }\n    anyNeedsMeasurement = false;\n    isScheduled = false;\n    toResolve.forEach((resolver) => resolver.complete(isForced));\n    toResolve.clear();\n}\nfunction readAllKeyframes() {\n    toResolve.forEach((resolver) => {\n        resolver.readKeyframes();\n        if (resolver.needsMeasurement) {\n            anyNeedsMeasurement = true;\n        }\n    });\n}\nfunction flushKeyframeResolvers() {\n    isForced = true;\n    readAllKeyframes();\n    measureAllKeyframes();\n    isForced = false;\n}\nclass KeyframeResolver {\n    constructor(unresolvedKeyframes, onComplete, name, motionValue, element, isAsync = false) {\n        this.state = \"pending\";\n        /**\n         * Track whether this resolver is async. If it is, it'll be added to the\n         * resolver queue and flushed in the next frame. Resolvers that aren't going\n         * to trigger read/write thrashing don't need to be async.\n         */\n        this.isAsync = false;\n        /**\n         * Track whether this resolver needs to perform a measurement\n         * to resolve its keyframes.\n         */\n        this.needsMeasurement = false;\n        this.unresolvedKeyframes = [...unresolvedKeyframes];\n        this.onComplete = onComplete;\n        this.name = name;\n        this.motionValue = motionValue;\n        this.element = element;\n        this.isAsync = isAsync;\n    }\n    scheduleResolve() {\n        this.state = \"scheduled\";\n        if (this.isAsync) {\n            toResolve.add(this);\n            if (!isScheduled) {\n                isScheduled = true;\n                frame.read(readAllKeyframes);\n                frame.resolveKeyframes(measureAllKeyframes);\n            }\n        }\n        else {\n            this.readKeyframes();\n            this.complete();\n        }\n    }\n    readKeyframes() {\n        const { unresolvedKeyframes, name, element, motionValue } = this;\n        // If initial keyframe is null we need to read it from the DOM\n        if (unresolvedKeyframes[0] === null) {\n            const currentValue = motionValue?.get();\n            // TODO: This doesn't work if the final keyframe is a wildcard\n            const finalKeyframe = unresolvedKeyframes[unresolvedKeyframes.length - 1];\n            if (currentValue !== undefined) {\n                unresolvedKeyframes[0] = currentValue;\n            }\n            else if (element && name) {\n                const valueAsRead = element.readValue(name, finalKeyframe);\n                if (valueAsRead !== undefined && valueAsRead !== null) {\n                    unresolvedKeyframes[0] = valueAsRead;\n                }\n            }\n            if (unresolvedKeyframes[0] === undefined) {\n                unresolvedKeyframes[0] = finalKeyframe;\n            }\n            if (motionValue && currentValue === undefined) {\n                motionValue.set(unresolvedKeyframes[0]);\n            }\n        }\n        fillWildcards(unresolvedKeyframes);\n    }\n    setFinalKeyframe() { }\n    measureInitialState() { }\n    renderEndStyles() { }\n    measureEndState() { }\n    complete(isForcedComplete = false) {\n        this.state = \"complete\";\n        this.onComplete(this.unresolvedKeyframes, this.finalKeyframe, isForcedComplete);\n        toResolve.delete(this);\n    }\n    cancel() {\n        if (this.state === \"scheduled\") {\n            toResolve.delete(this);\n            this.state = \"pending\";\n        }\n    }\n    resume() {\n        if (this.state === \"pending\")\n            this.scheduleResolve();\n    }\n}\n\nexport { KeyframeResolver, flushKeyframeResolvers };\n","function fillWildcards(keyframes) {\n    for (let i = 1; i < keyframes.length; i++) {\n        keyframes[i] ?? (keyframes[i] = keyframes[i - 1]);\n    }\n}\n\nexport { fillWildcards };\n","/**\n * Check if the value is a zero value string like \"0px\" or \"0%\"\n */\nconst isZeroValueString = (v) => /^0[^.\\s]+$/u.test(v);\n\nexport { isZeroValueString };\n","import { isZeroValueString } from 'motion-utils';\n\nfunction isNone(value) {\n    if (typeof value === \"number\") {\n        return value === 0;\n    }\n    else if (value !== null) {\n        return value === \"none\" || value === \"0\" || isZeroValueString(value);\n    }\n    else {\n        return true;\n    }\n}\n\nexport { isNone };\n","// If this number is a decimal, make it just five decimal places\n// to avoid exponents\nconst sanitize = (v) => Math.round(v * 100000) / 100000;\n\nexport { sanitize };\n","const floatRegex = /-?(?:\\d+(?:\\.\\d+)?|\\.\\d+)/gu;\n\nexport { floatRegex };\n","const singleColorRegex = /^(?:#[\\da-f]{3,8}|(?:rgb|hsl)a?\\((?:-?[\\d.]+%?[,\\s]+){2}-?[\\d.]+%?\\s*(?:[,/]\\s*)?(?:\\b\\d+(?:\\.\\d+)?|\\.\\d+)?%?\\))$/iu;\n\nexport { singleColorRegex };\n","import { floatRegex } from '../utils/float-regex.mjs';\nimport { isNullish } from '../utils/is-nullish.mjs';\nimport { singleColorRegex } from '../utils/single-color-regex.mjs';\n\n/**\n * Returns true if the provided string is a color, ie rgba(0,0,0,0) or #000,\n * but false if a number or multiple colors\n */\nconst isColorString = (type, testProp) => (v) => {\n    return Boolean((typeof v === \"string\" &&\n        singleColorRegex.test(v) &&\n        v.startsWith(type)) ||\n        (testProp &&\n            !isNullish(v) &&\n            Object.prototype.hasOwnProperty.call(v, testProp)));\n};\nconst splitColor = (aName, bName, cName) => (v) => {\n    if (typeof v !== \"string\")\n        return v;\n    const [a, b, c, alpha] = v.match(floatRegex);\n    return {\n        [aName]: parseFloat(a),\n        [bName]: parseFloat(b),\n        [cName]: parseFloat(c),\n        alpha: alpha !== undefined ? parseFloat(alpha) : 1,\n    };\n};\n\nexport { isColorString, splitColor };\n","function isNullish(v) {\n    return v == null;\n}\n\nexport { isNullish };\n","import { clamp } from 'motion-utils';\nimport { number, alpha } from '../numbers/index.mjs';\nimport { sanitize } from '../utils/sanitize.mjs';\nimport { isColorString, splitColor } from './utils.mjs';\n\nconst clampRgbUnit = (v) => clamp(0, 255, v);\nconst rgbUnit = {\n    ...number,\n    transform: (v) => Math.round(clampRgbUnit(v)),\n};\nconst rgba = {\n    test: /*@__PURE__*/ isColorString(\"rgb\", \"red\"),\n    parse: /*@__PURE__*/ splitColor(\"red\", \"green\", \"blue\"),\n    transform: ({ red, green, blue, alpha: alpha$1 = 1 }) => \"rgba(\" +\n        rgbUnit.transform(red) +\n        \", \" +\n        rgbUnit.transform(green) +\n        \", \" +\n        rgbUnit.transform(blue) +\n        \", \" +\n        sanitize(alpha.transform(alpha$1)) +\n        \")\",\n};\n\nexport { rgbUnit, rgba };\n","import { rgba } from './rgba.mjs';\nimport { isColorString } from './utils.mjs';\n\nfunction parseHex(v) {\n    let r = \"\";\n    let g = \"\";\n    let b = \"\";\n    let a = \"\";\n    // If we have 6 characters, ie #FF0000\n    if (v.length > 5) {\n        r = v.substring(1, 3);\n        g = v.substring(3, 5);\n        b = v.substring(5, 7);\n        a = v.substring(7, 9);\n        // Or we have 3 characters, ie #F00\n    }\n    else {\n        r = v.substring(1, 2);\n        g = v.substring(2, 3);\n        b = v.substring(3, 4);\n        a = v.substring(4, 5);\n        r += r;\n        g += g;\n        b += b;\n        a += a;\n    }\n    return {\n        red: parseInt(r, 16),\n        green: parseInt(g, 16),\n        blue: parseInt(b, 16),\n        alpha: a ? parseInt(a, 16) / 255 : 1,\n    };\n}\nconst hex = {\n    test: /*@__PURE__*/ isColorString(\"#\"),\n    parse: parseHex,\n    transform: rgba.transform,\n};\n\nexport { hex };\n","import { alpha } from '../numbers/index.mjs';\nimport { percent } from '../numbers/units.mjs';\nimport { sanitize } from '../utils/sanitize.mjs';\nimport { isColorString, splitColor } from './utils.mjs';\n\nconst hsla = {\n    test: /*@__PURE__*/ isColorString(\"hsl\", \"hue\"),\n    parse: /*@__PURE__*/ splitColor(\"hue\", \"saturation\", \"lightness\"),\n    transform: ({ hue, saturation, lightness, alpha: alpha$1 = 1 }) => {\n        return (\"hsla(\" +\n            Math.round(hue) +\n            \", \" +\n            percent.transform(sanitize(saturation)) +\n            \", \" +\n            percent.transform(sanitize(lightness)) +\n            \", \" +\n            sanitize(alpha.transform(alpha$1)) +\n            \")\");\n    },\n};\n\nexport { hsla };\n","import { hex } from './hex.mjs';\nimport { hsla } from './hsla.mjs';\nimport { rgba } from './rgba.mjs';\n\nconst color = {\n    test: (v) => rgba.test(v) || hex.test(v) || hsla.test(v),\n    parse: (v) => {\n        if (rgba.test(v)) {\n            return rgba.parse(v);\n        }\n        else if (hsla.test(v)) {\n            return hsla.parse(v);\n        }\n        else {\n            return hex.parse(v);\n        }\n    },\n    transform: (v) => {\n        return typeof v === \"string\"\n            ? v\n            : v.hasOwnProperty(\"red\")\n                ? rgba.transform(v)\n                : hsla.transform(v);\n    },\n    getAnimatableNone: (v) => {\n        const parsed = color.parse(v);\n        parsed.alpha = 0;\n        return color.transform(parsed);\n    },\n};\n\nexport { color };\n","const colorRegex = /(?:#[\\da-f]{3,8}|(?:rgb|hsl)a?\\((?:-?[\\d.]+%?[,\\s]+){2}-?[\\d.]+%?\\s*(?:[,/]\\s*)?(?:\\b\\d+(?:\\.\\d+)?|\\.\\d+)?%?\\))/giu;\n\nexport { colorRegex };\n","import { color } from '../color/index.mjs';\nimport { colorRegex } from '../utils/color-regex.mjs';\nimport { floatRegex } from '../utils/float-regex.mjs';\nimport { sanitize } from '../utils/sanitize.mjs';\n\nfunction test(v) {\n    return (isNaN(v) &&\n        typeof v === \"string\" &&\n        (v.match(floatRegex)?.length || 0) +\n            (v.match(colorRegex)?.length || 0) >\n            0);\n}\nconst NUMBER_TOKEN = \"number\";\nconst COLOR_TOKEN = \"color\";\nconst VAR_TOKEN = \"var\";\nconst VAR_FUNCTION_TOKEN = \"var(\";\nconst SPLIT_TOKEN = \"${}\";\n// this regex consists of the `singleCssVariableRegex|rgbHSLValueRegex|digitRegex`\nconst complexRegex = /var\\s*\\(\\s*--(?:[\\w-]+\\s*|[\\w-]+\\s*,(?:\\s*[^)(\\s]|\\s*\\((?:[^)(]|\\([^)(]*\\))*\\))+\\s*)\\)|#[\\da-f]{3,8}|(?:rgb|hsl)a?\\((?:-?[\\d.]+%?[,\\s]+){2}-?[\\d.]+%?\\s*(?:[,/]\\s*)?(?:\\b\\d+(?:\\.\\d+)?|\\.\\d+)?%?\\)|-?(?:\\d+(?:\\.\\d+)?|\\.\\d+)/giu;\nfunction analyseComplexValue(value) {\n    const originalValue = value.toString();\n    const values = [];\n    const indexes = {\n        color: [],\n        number: [],\n        var: [],\n    };\n    const types = [];\n    let i = 0;\n    const tokenised = originalValue.replace(complexRegex, (parsedValue) => {\n        if (color.test(parsedValue)) {\n            indexes.color.push(i);\n            types.push(COLOR_TOKEN);\n            values.push(color.parse(parsedValue));\n        }\n        else if (parsedValue.startsWith(VAR_FUNCTION_TOKEN)) {\n            indexes.var.push(i);\n            types.push(VAR_TOKEN);\n            values.push(parsedValue);\n        }\n        else {\n            indexes.number.push(i);\n            types.push(NUMBER_TOKEN);\n            values.push(parseFloat(parsedValue));\n        }\n        ++i;\n        return SPLIT_TOKEN;\n    });\n    const split = tokenised.split(SPLIT_TOKEN);\n    return { values, split, indexes, types };\n}\nfunction parseComplexValue(v) {\n    return analyseComplexValue(v).values;\n}\nfunction createTransformer(source) {\n    const { split, types } = analyseComplexValue(source);\n    const numSections = split.length;\n    return (v) => {\n        let output = \"\";\n        for (let i = 0; i < numSections; i++) {\n            output += split[i];\n            if (v[i] !== undefined) {\n                const type = types[i];\n                if (type === NUMBER_TOKEN) {\n                    output += sanitize(v[i]);\n                }\n                else if (type === COLOR_TOKEN) {\n                    output += color.transform(v[i]);\n                }\n                else {\n                    output += v[i];\n                }\n            }\n        }\n        return output;\n    };\n}\nconst convertNumbersToZero = (v) => typeof v === \"number\" ? 0 : color.test(v) ? color.getAnimatableNone(v) : v;\nfunction getAnimatableNone(v) {\n    const parsed = parseComplexValue(v);\n    const transformer = createTransformer(v);\n    return transformer(parsed.map(convertNumbersToZero));\n}\nconst complex = {\n    test,\n    parse: parseComplexValue,\n    createTransformer,\n    getAnimatableNone,\n};\n\nexport { analyseComplexValue, complex };\n","import { complex } from './index.mjs';\nimport { floatRegex } from '../utils/float-regex.mjs';\n\n/**\n * Properties that should default to 1 or 100%\n */\nconst maxDefaults = new Set([\"brightness\", \"contrast\", \"saturate\", \"opacity\"]);\nfunction applyDefaultFilter(v) {\n    const [name, value] = v.slice(0, -1).split(\"(\");\n    if (name === \"drop-shadow\")\n        return v;\n    const [number] = value.match(floatRegex) || [];\n    if (!number)\n        return v;\n    const unit = value.replace(number, \"\");\n    let defaultValue = maxDefaults.has(name) ? 1 : 0;\n    if (number !== value)\n        defaultValue *= 100;\n    return name + \"(\" + defaultValue + unit + \")\";\n}\nconst functionRegex = /\\b([a-z-]*)\\(.*?\\)/gu;\nconst filter = {\n    ...complex,\n    getAnimatableNone: (v) => {\n        const functions = v.match(functionRegex);\n        return functions ? functions.map(applyDefaultFilter).join(\" \") : v;\n    },\n};\n\nexport { filter };\n","import { number } from './numbers/index.mjs';\n\nconst int = {\n    ...number,\n    transform: Math.round,\n};\n\nexport { int };\n","import { int } from '../int.mjs';\nimport { alpha } from '../numbers/index.mjs';\nimport { px } from '../numbers/units.mjs';\nimport { transformValueTypes } from './transform.mjs';\n\nconst numberValueTypes = {\n    // Border props\n    borderWidth: px,\n    borderTopWidth: px,\n    borderRightWidth: px,\n    borderBottomWidth: px,\n    borderLeftWidth: px,\n    borderRadius: px,\n    radius: px,\n    borderTopLeftRadius: px,\n    borderTopRightRadius: px,\n    borderBottomRightRadius: px,\n    borderBottomLeftRadius: px,\n    // Positioning props\n    width: px,\n    maxWidth: px,\n    height: px,\n    maxHeight: px,\n    top: px,\n    right: px,\n    bottom: px,\n    left: px,\n    // Spacing props\n    padding: px,\n    paddingTop: px,\n    paddingRight: px,\n    paddingBottom: px,\n    paddingLeft: px,\n    margin: px,\n    marginTop: px,\n    marginRight: px,\n    marginBottom: px,\n    marginLeft: px,\n    // Misc\n    backgroundPositionX: px,\n    backgroundPositionY: px,\n    ...transformValueTypes,\n    zIndex: int,\n    // SVG\n    fillOpacity: alpha,\n    strokeOpacity: alpha,\n    numOctaves: int,\n};\n\nexport { numberValueTypes };\n","import { scale, alpha } from '../numbers/index.mjs';\nimport { degrees, px, progressPercentage } from '../numbers/units.mjs';\n\nconst transformValueTypes = {\n    rotate: degrees,\n    rotateX: degrees,\n    rotateY: degrees,\n    rotateZ: degrees,\n    scale,\n    scaleX: scale,\n    scaleY: scale,\n    scaleZ: scale,\n    skew: degrees,\n    skewX: degrees,\n    skewY: degrees,\n    distance: px,\n    translateX: px,\n    translateY: px,\n    translateZ: px,\n    x: px,\n    y: px,\n    z: px,\n    perspective: px,\n    transformPerspective: px,\n    opacity: alpha,\n    originX: progressPercentage,\n    originY: progressPercentage,\n    originZ: px,\n};\n\nexport { transformValueTypes };\n","import { color } from '../color/index.mjs';\nimport { filter } from '../complex/filter.mjs';\nimport { numberValueTypes } from './number.mjs';\n\n/**\n * A map of default value types for common values\n */\nconst defaultValueTypes = {\n    ...numberValueTypes,\n    // Color props\n    color,\n    backgroundColor: color,\n    outlineColor: color,\n    fill: color,\n    stroke: color,\n    // Border props\n    borderColor: color,\n    borderTopColor: color,\n    borderRightColor: color,\n    borderBottomColor: color,\n    borderLeftColor: color,\n    filter,\n    WebkitFilter: filter,\n};\n/**\n * Gets the default ValueType for the provided value key\n */\nconst getDefaultValueType = (key) => defaultValueTypes[key];\n\nexport { defaultValueTypes, getDefaultValueType };\n","import { complex } from '../complex/index.mjs';\nimport { filter } from '../complex/filter.mjs';\nimport { getDefaultValueType } from '../maps/defaults.mjs';\n\nfunction getAnimatableNone(key, value) {\n    let defaultValueType = getDefaultValueType(key);\n    if (defaultValueType !== filter)\n        defaultValueType = complex;\n    // If value is not recognised as animatable, ie \"none\", create an animatable version origin based on the target\n    return defaultValueType.getAnimatableNone\n        ? defaultValueType.getAnimatableNone(value)\n        : undefined;\n}\n\nexport { getAnimatableNone };\n","import { analyseComplexValue } from '../../../value/types/complex/index.mjs';\nimport { getAnimatableNone } from '../../../value/types/utils/animatable-none.mjs';\n\n/**\n * If we encounter keyframes like \"none\" or \"0\" and we also have keyframes like\n * \"#fff\" or \"200px 200px\" we want to find a keyframe to serve as a template for\n * the \"none\" keyframes. In this case \"#fff\" or \"200px 200px\" - then these get turned into\n * zero equivalents, i.e. \"#fff0\" or \"0px 0px\".\n */\nconst invalidTemplates = new Set([\"auto\", \"none\", \"0\"]);\nfunction makeNoneKeyframesAnimatable(unresolvedKeyframes, noneKeyframeIndexes, name) {\n    let i = 0;\n    let animatableTemplate = undefined;\n    while (i < unresolvedKeyframes.length && !animatableTemplate) {\n        const keyframe = unresolvedKeyframes[i];\n        if (typeof keyframe === \"string\" &&\n            !invalidTemplates.has(keyframe) &&\n            analyseComplexValue(keyframe).values.length) {\n            animatableTemplate = unresolvedKeyframes[i];\n        }\n        i++;\n    }\n    if (animatableTemplate && name) {\n        for (const noneIndex of noneKeyframeIndexes) {\n            unresolvedKeyframes[noneIndex] = getAnimatableNone(name, animatableTemplate);\n        }\n    }\n}\n\nexport { makeNoneKeyframesAnimatable };\n","import { positionalKeys } from '../../render/utils/keys-position.mjs';\nimport { findDimensionValueType } from '../../value/types/dimensions.mjs';\nimport { getVariableValue } from '../utils/css-variables-conversion.mjs';\nimport { isCSSVariableToken } from '../utils/is-css-variable.mjs';\nimport { KeyframeResolver } from './KeyframesResolver.mjs';\nimport { isNone } from './utils/is-none.mjs';\nimport { makeNoneKeyframesAnimatable } from './utils/make-none-animatable.mjs';\nimport { isNumOrPxType, positionalValues } from './utils/unit-conversion.mjs';\n\nclass DOMKeyframesResolver extends KeyframeResolver {\n    constructor(unresolvedKeyframes, onComplete, name, motionValue, element) {\n        super(unresolvedKeyframes, onComplete, name, motionValue, element, true);\n    }\n    readKeyframes() {\n        const { unresolvedKeyframes, element, name } = this;\n        if (!element || !element.current)\n            return;\n        super.readKeyframes();\n        /**\n         * If any keyframe is a CSS variable, we need to find its value by sampling the element\n         */\n        for (let i = 0; i < unresolvedKeyframes.length; i++) {\n            let keyframe = unresolvedKeyframes[i];\n            if (typeof keyframe === \"string\") {\n                keyframe = keyframe.trim();\n                if (isCSSVariableToken(keyframe)) {\n                    const resolved = getVariableValue(keyframe, element.current);\n                    if (resolved !== undefined) {\n                        unresolvedKeyframes[i] = resolved;\n                    }\n                    if (i === unresolvedKeyframes.length - 1) {\n                        this.finalKeyframe = keyframe;\n                    }\n                }\n            }\n        }\n        /**\n         * Resolve \"none\" values. We do this potentially twice - once before and once after measuring keyframes.\n         * This could be seen as inefficient but it's a trade-off to avoid measurements in more situations, which\n         * have a far bigger performance impact.\n         */\n        this.resolveNoneKeyframes();\n        /**\n         * Check to see if unit type has changed. If so schedule jobs that will\n         * temporarily set styles to the destination keyframes.\n         * Skip if we have more than two keyframes or this isn't a positional value.\n         * TODO: We can throw if there are multiple keyframes and the value type changes.\n         */\n        if (!positionalKeys.has(name) || unresolvedKeyframes.length !== 2) {\n            return;\n        }\n        const [origin, target] = unresolvedKeyframes;\n        const originType = findDimensionValueType(origin);\n        const targetType = findDimensionValueType(target);\n        /**\n         * Either we don't recognise these value types or we can animate between them.\n         */\n        if (originType === targetType)\n            return;\n        /**\n         * If both values are numbers or pixels, we can animate between them by\n         * converting them to numbers.\n         */\n        if (isNumOrPxType(originType) && isNumOrPxType(targetType)) {\n            for (let i = 0; i < unresolvedKeyframes.length; i++) {\n                const value = unresolvedKeyframes[i];\n                if (typeof value === \"string\") {\n                    unresolvedKeyframes[i] = parseFloat(value);\n                }\n            }\n        }\n        else if (positionalValues[name]) {\n            /**\n             * Else, the only way to resolve this is by measuring the element.\n             */\n            this.needsMeasurement = true;\n        }\n    }\n    resolveNoneKeyframes() {\n        const { unresolvedKeyframes, name } = this;\n        const noneKeyframeIndexes = [];\n        for (let i = 0; i < unresolvedKeyframes.length; i++) {\n            if (unresolvedKeyframes[i] === null ||\n                isNone(unresolvedKeyframes[i])) {\n                noneKeyframeIndexes.push(i);\n            }\n        }\n        if (noneKeyframeIndexes.length) {\n            makeNoneKeyframesAnimatable(unresolvedKeyframes, noneKeyframeIndexes, name);\n        }\n    }\n    measureInitialState() {\n        const { element, unresolvedKeyframes, name } = this;\n        if (!element || !element.current)\n            return;\n        if (name === \"height\") {\n            this.suspendedScrollY = window.pageYOffset;\n        }\n        this.measuredOrigin = positionalValues[name](element.measureViewportBox(), window.getComputedStyle(element.current));\n        unresolvedKeyframes[0] = this.measuredOrigin;\n        // Set final key frame to measure after next render\n        const measureKeyframe = unresolvedKeyframes[unresolvedKeyframes.length - 1];\n        if (measureKeyframe !== undefined) {\n            element.getValue(name, measureKeyframe).jump(measureKeyframe, false);\n        }\n    }\n    measureEndState() {\n        const { element, name, unresolvedKeyframes } = this;\n        if (!element || !element.current)\n            return;\n        const value = element.getValue(name);\n        value && value.jump(this.measuredOrigin, false);\n        const finalKeyframeIndex = unresolvedKeyframes.length - 1;\n        const finalKeyframe = unresolvedKeyframes[finalKeyframeIndex];\n        unresolvedKeyframes[finalKeyframeIndex] = positionalValues[name](element.measureViewportBox(), window.getComputedStyle(element.current));\n        if (finalKeyframe !== null && this.finalKeyframe === undefined) {\n            this.finalKeyframe = finalKeyframe;\n        }\n        // If we removed transform values, reapply them before the next render\n        if (this.removedTransforms?.length) {\n            this.removedTransforms.forEach(([unsetTransformName, unsetTransformValue]) => {\n                element\n                    .getValue(unsetTransformName)\n                    .set(unsetTransformValue);\n            });\n        }\n        this.resolveNoneKeyframes();\n    }\n}\n\nexport { DOMKeyframesResolver };\n","const isMotionValue = (value) => Boolean(value && value.getVelocity);\n\nexport { isMotionValue };\n","import { MotionGlobalConfig } from 'motion-utils';\nimport { frameData } from './frame.mjs';\n\nlet now;\nfunction clearTime() {\n    now = undefined;\n}\n/**\n * An eventloop-synchronous alternative to performance.now().\n *\n * Ensures that time measurements remain consistent within a synchronous context.\n * Usually calling performance.now() twice within the same synchronous context\n * will return different values which isn't useful for animations when we're usually\n * trying to sync animations to the same frame.\n */\nconst time = {\n    now: () => {\n        if (now === undefined) {\n            time.set(frameData.isProcessing || MotionGlobalConfig.useManualTiming\n                ? frameData.timestamp\n                : performance.now());\n        }\n        return now;\n    },\n    set: (newTime) => {\n        now = newTime;\n        queueMicrotask(clearTime);\n    },\n};\n\nexport { time };\n","function addUniqueItem(arr, item) {\n    if (arr.indexOf(item) === -1)\n        arr.push(item);\n}\nfunction removeItem(arr, item) {\n    const index = arr.indexOf(item);\n    if (index > -1)\n        arr.splice(index, 1);\n}\n// Adapted from array-move\nfunction moveItem([...arr], fromIndex, toIndex) {\n    const startIndex = fromIndex < 0 ? arr.length + fromIndex : fromIndex;\n    if (startIndex >= 0 && startIndex < arr.length) {\n        const endIndex = toIndex < 0 ? arr.length + toIndex : toIndex;\n        const [item] = arr.splice(fromIndex, 1);\n        arr.splice(endIndex, 0, item);\n    }\n    return arr;\n}\n\nexport { addUniqueItem, moveItem, removeItem };\n","import { addUniqueItem, removeItem } from './array.mjs';\n\nclass SubscriptionManager {\n    constructor() {\n        this.subscriptions = [];\n    }\n    add(handler) {\n        addUniqueItem(this.subscriptions, handler);\n        return () => removeItem(this.subscriptions, handler);\n    }\n    notify(a, b, c) {\n        const numSubscriptions = this.subscriptions.length;\n        if (!numSubscriptions)\n            return;\n        if (numSubscriptions === 1) {\n            /**\n             * If there's only a single handler we can just call it without invoking a loop.\n             */\n            this.subscriptions[0](a, b, c);\n        }\n        else {\n            for (let i = 0; i < numSubscriptions; i++) {\n                /**\n                 * Check whether the handler exists before firing as it's possible\n                 * the subscriptions were modified during this loop running.\n                 */\n                const handler = this.subscriptions[i];\n                handler && handler(a, b, c);\n            }\n        }\n    }\n    getSize() {\n        return this.subscriptions.length;\n    }\n    clear() {\n        this.subscriptions.length = 0;\n    }\n}\n\nexport { SubscriptionManager };\n","/*\n  Convert velocity into velocity per second\n\n  @param [number]: Unit per frame\n  @param [number]: Frame duration in ms\n*/\nfunction velocityPerSecond(velocity, frameDuration) {\n    return frameDuration ? velocity * (1000 / frameDuration) : 0;\n}\n\nexport { velocityPerSecond };\n","import { warnOnce, SubscriptionManager, velocityPerSecond } from 'motion-utils';\nimport { time } from '../frameloop/sync-time.mjs';\nimport { frame } from '../frameloop/frame.mjs';\n\n/**\n * Maximum time between the value of two frames, beyond which we\n * assume the velocity has since been 0.\n */\nconst MAX_VELOCITY_DELTA = 30;\nconst isFloat = (value) => {\n    return !isNaN(parseFloat(value));\n};\nconst collectMotionValues = {\n    current: undefined,\n};\n/**\n * `MotionValue` is used to track the state and velocity of motion values.\n *\n * @public\n */\nclass MotionValue {\n    /**\n     * @param init - The initiating value\n     * @param config - Optional configuration options\n     *\n     * -  `transformer`: A function to transform incoming values with.\n     */\n    constructor(init, options = {}) {\n        /**\n         * Tracks whether this value can output a velocity. Currently this is only true\n         * if the value is numerical, but we might be able to widen the scope here and support\n         * other value types.\n         *\n         * @internal\n         */\n        this.canTrackVelocity = null;\n        /**\n         * An object containing a SubscriptionManager for each active event.\n         */\n        this.events = {};\n        this.updateAndNotify = (v, render = true) => {\n            const currentTime = time.now();\n            /**\n             * If we're updating the value during another frame or eventloop\n             * than the previous frame, then the we set the previous frame value\n             * to current.\n             */\n            if (this.updatedAt !== currentTime) {\n                this.setPrevFrameValue();\n            }\n            this.prev = this.current;\n            this.setCurrent(v);\n            // Update update subscribers\n            if (this.current !== this.prev) {\n                this.events.change?.notify(this.current);\n                if (this.dependents) {\n                    for (const dependent of this.dependents) {\n                        dependent.dirty();\n                    }\n                }\n            }\n            // Update render subscribers\n            if (render) {\n                this.events.renderRequest?.notify(this.current);\n            }\n        };\n        this.hasAnimated = false;\n        this.setCurrent(init);\n        this.owner = options.owner;\n    }\n    setCurrent(current) {\n        this.current = current;\n        this.updatedAt = time.now();\n        if (this.canTrackVelocity === null && current !== undefined) {\n            this.canTrackVelocity = isFloat(this.current);\n        }\n    }\n    setPrevFrameValue(prevFrameValue = this.current) {\n        this.prevFrameValue = prevFrameValue;\n        this.prevUpdatedAt = this.updatedAt;\n    }\n    /**\n     * Adds a function that will be notified when the `MotionValue` is updated.\n     *\n     * It returns a function that, when called, will cancel the subscription.\n     *\n     * When calling `onChange` inside a React component, it should be wrapped with the\n     * `useEffect` hook. As it returns an unsubscribe function, this should be returned\n     * from the `useEffect` function to ensure you don't add duplicate subscribers..\n     *\n     * ```jsx\n     * export const MyComponent = () => {\n     *   const x = useMotionValue(0)\n     *   const y = useMotionValue(0)\n     *   const opacity = useMotionValue(1)\n     *\n     *   useEffect(() => {\n     *     function updateOpacity() {\n     *       const maxXY = Math.max(x.get(), y.get())\n     *       const newOpacity = transform(maxXY, [0, 100], [1, 0])\n     *       opacity.set(newOpacity)\n     *     }\n     *\n     *     const unsubscribeX = x.on(\"change\", updateOpacity)\n     *     const unsubscribeY = y.on(\"change\", updateOpacity)\n     *\n     *     return () => {\n     *       unsubscribeX()\n     *       unsubscribeY()\n     *     }\n     *   }, [])\n     *\n     *   return <motion.div style={{ x }} />\n     * }\n     * ```\n     *\n     * @param subscriber - A function that receives the latest value.\n     * @returns A function that, when called, will cancel this subscription.\n     *\n     * @deprecated\n     */\n    onChange(subscription) {\n        if (process.env.NODE_ENV !== \"production\") {\n            warnOnce(false, `value.onChange(callback) is deprecated. Switch to value.on(\"change\", callback).`);\n        }\n        return this.on(\"change\", subscription);\n    }\n    on(eventName, callback) {\n        if (!this.events[eventName]) {\n            this.events[eventName] = new SubscriptionManager();\n        }\n        const unsubscribe = this.events[eventName].add(callback);\n        if (eventName === \"change\") {\n            return () => {\n                unsubscribe();\n                /**\n                 * If we have no more change listeners by the start\n                 * of the next frame, stop active animations.\n                 */\n                frame.read(() => {\n                    if (!this.events.change.getSize()) {\n                        this.stop();\n                    }\n                });\n            };\n        }\n        return unsubscribe;\n    }\n    clearListeners() {\n        for (const eventManagers in this.events) {\n            this.events[eventManagers].clear();\n        }\n    }\n    /**\n     * Attaches a passive effect to the `MotionValue`.\n     */\n    attach(passiveEffect, stopPassiveEffect) {\n        this.passiveEffect = passiveEffect;\n        this.stopPassiveEffect = stopPassiveEffect;\n    }\n    /**\n     * Sets the state of the `MotionValue`.\n     *\n     * @remarks\n     *\n     * ```jsx\n     * const x = useMotionValue(0)\n     * x.set(10)\n     * ```\n     *\n     * @param latest - Latest value to set.\n     * @param render - Whether to notify render subscribers. Defaults to `true`\n     *\n     * @public\n     */\n    set(v, render = true) {\n        if (!render || !this.passiveEffect) {\n            this.updateAndNotify(v, render);\n        }\n        else {\n            this.passiveEffect(v, this.updateAndNotify);\n        }\n    }\n    setWithVelocity(prev, current, delta) {\n        this.set(current);\n        this.prev = undefined;\n        this.prevFrameValue = prev;\n        this.prevUpdatedAt = this.updatedAt - delta;\n    }\n    /**\n     * Set the state of the `MotionValue`, stopping any active animations,\n     * effects, and resets velocity to `0`.\n     */\n    jump(v, endAnimation = true) {\n        this.updateAndNotify(v);\n        this.prev = v;\n        this.prevUpdatedAt = this.prevFrameValue = undefined;\n        endAnimation && this.stop();\n        if (this.stopPassiveEffect)\n            this.stopPassiveEffect();\n    }\n    dirty() {\n        this.events.change?.notify(this.current);\n    }\n    addDependent(dependent) {\n        if (!this.dependents) {\n            this.dependents = new Set();\n        }\n        this.dependents.add(dependent);\n    }\n    removeDependent(dependent) {\n        if (this.dependents) {\n            this.dependents.delete(dependent);\n        }\n    }\n    /**\n     * Returns the latest state of `MotionValue`\n     *\n     * @returns - The latest state of `MotionValue`\n     *\n     * @public\n     */\n    get() {\n        if (collectMotionValues.current) {\n            collectMotionValues.current.push(this);\n        }\n        return this.current;\n    }\n    /**\n     * @public\n     */\n    getPrevious() {\n        return this.prev;\n    }\n    /**\n     * Returns the latest velocity of `MotionValue`\n     *\n     * @returns - The latest velocity of `MotionValue`. Returns `0` if the state is non-numerical.\n     *\n     * @public\n     */\n    getVelocity() {\n        const currentTime = time.now();\n        if (!this.canTrackVelocity ||\n            this.prevFrameValue === undefined ||\n            currentTime - this.updatedAt > MAX_VELOCITY_DELTA) {\n            return 0;\n        }\n        const delta = Math.min(this.updatedAt - this.prevUpdatedAt, MAX_VELOCITY_DELTA);\n        // Casts because of parseFloat's poor typing\n        return velocityPerSecond(parseFloat(this.current) -\n            parseFloat(this.prevFrameValue), delta);\n    }\n    /**\n     * Registers a new animation to control this `MotionValue`. Only one\n     * animation can drive a `MotionValue` at one time.\n     *\n     * ```jsx\n     * value.start()\n     * ```\n     *\n     * @param animation - A function that starts the provided animation\n     */\n    start(startAnimation) {\n        this.stop();\n        return new Promise((resolve) => {\n            this.hasAnimated = true;\n            this.animation = startAnimation(resolve);\n            if (this.events.animationStart) {\n                this.events.animationStart.notify();\n            }\n        }).then(() => {\n            if (this.events.animationComplete) {\n                this.events.animationComplete.notify();\n            }\n            this.clearAnimation();\n        });\n    }\n    /**\n     * Stop the currently active animation.\n     *\n     * @public\n     */\n    stop() {\n        if (this.animation) {\n            this.animation.stop();\n            if (this.events.animationCancel) {\n                this.events.animationCancel.notify();\n            }\n        }\n        this.clearAnimation();\n    }\n    /**\n     * Returns `true` if this value is currently animating.\n     *\n     * @public\n     */\n    isAnimating() {\n        return !!this.animation;\n    }\n    clearAnimation() {\n        delete this.animation;\n    }\n    /**\n     * Destroy and clean up subscribers to this `MotionValue`.\n     *\n     * The `MotionValue` hooks like `useMotionValue` and `useTransform` automatically\n     * handle the lifecycle of the returned `MotionValue`, so this method is only necessary if you've manually\n     * created a `MotionValue` via the `motionValue` function.\n     *\n     * @public\n     */\n    destroy() {\n        this.dependents?.clear();\n        this.events.destroy?.notify();\n        this.clearListeners();\n        this.stop();\n        if (this.stopPassiveEffect) {\n            this.stopPassiveEffect();\n        }\n    }\n}\nfunction motionValue(init, options) {\n    return new MotionValue(init, options);\n}\n\nexport { MotionValue, collectMotionValues, motionValue };\n","import { color } from '../color/index.mjs';\nimport { complex } from '../complex/index.mjs';\nimport { dimensionValueTypes } from '../dimensions.mjs';\nimport { testValueType } from '../test.mjs';\n\n/**\n * A list of all ValueTypes\n */\nconst valueTypes = [...dimensionValueTypes, color, complex];\n/**\n * Tests a value against the list of ValueTypes\n */\nconst findValueType = (v) => valueTypes.find(testValueType(v));\n\nexport { findValueType };\n","import { createRenderBatcher } from './batcher.mjs';\n\nconst { schedule: microtask, cancel: cancelMicrotask } = \n/* @__PURE__ */ createRenderBatcher(queueMicrotask, false);\n\nexport { cancelMicrotask, microtask };\n","const featureProps = {\n    animation: [\n        \"animate\",\n        \"variants\",\n        \"whileHover\",\n        \"whileTap\",\n        \"exit\",\n        \"whileInView\",\n        \"whileFocus\",\n        \"whileDrag\",\n    ],\n    exit: [\"exit\"],\n    drag: [\"drag\", \"dragControls\"],\n    focus: [\"whileFocus\"],\n    hover: [\"whileHover\", \"onHoverStart\", \"onHoverEnd\"],\n    tap: [\"whileTap\", \"onTap\", \"onTapStart\", \"onTapCancel\"],\n    pan: [\"onPan\", \"onPanStart\", \"onPanSessionStart\", \"onPanEnd\"],\n    inView: [\"whileInView\", \"onViewportEnter\", \"onViewportLeave\"],\n    layout: [\"layout\", \"layoutId\"],\n};\nconst featureDefinitions = {};\nfor (const key in featureProps) {\n    featureDefinitions[key] = {\n        isEnabled: (props) => featureProps[key].some((name) => !!props[name]),\n    };\n}\n\nexport { featureDefinitions };\n","const createAxisDelta = () => ({\n    translate: 0,\n    scale: 1,\n    origin: 0,\n    originPoint: 0,\n});\nconst createDelta = () => ({\n    x: createAxisDelta(),\n    y: createAxisDelta(),\n});\nconst createAxis = () => ({ min: 0, max: 0 });\nconst createBox = () => ({\n    x: createAxis(),\n    y: createAxis(),\n});\n\nexport { createAxis, createAxisDelta, createBox, createDelta };\n","// Does this device prefer reduced motion? Returns `null` server-side.\nconst prefersReducedMotion = { current: null };\nconst hasReducedMotionListener = { current: false };\n\nexport { hasReducedMotionListener, prefersReducedMotion };\n","const visualElementStore = new WeakMap();\n\nexport { visualElementStore };\n","function isAnimationControls(v) {\n    return (v !== null &&\n        typeof v === \"object\" &&\n        typeof v.start === \"function\");\n}\n\nexport { isAnimationControls };\n","/**\n * Decides if the supplied variable is variant label\n */\nfunction isVariantLabel(v) {\n    return typeof v === \"string\" || Array.isArray(v);\n}\n\nexport { isVariantLabel };\n","const variantPriorityOrder = [\n    \"animate\",\n    \"whileInView\",\n    \"whileFocus\",\n    \"whileHover\",\n    \"whileTap\",\n    \"whileDrag\",\n    \"exit\",\n];\nconst variantProps = [\"initial\", ...variantPriorityOrder];\n\nexport { variantPriorityOrder, variantProps };\n","import { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { isVariantLabel } from './is-variant-label.mjs';\nimport { variantProps } from './variant-props.mjs';\n\nfunction isControllingVariants(props) {\n    return (isAnimationControls(props.animate) ||\n        variantProps.some((name) => isVariantLabel(props[name])));\n}\nfunction isVariantNode(props) {\n    return Boolean(isControllingVariants(props) || props.variants);\n}\n\nexport { isControllingVariants, isVariantNode };\n","function getValueState(visualElement) {\n    const state = [{}, {}];\n    visualElement?.values.forEach((value, key) => {\n        state[0][key] = value.get();\n        state[1][key] = value.getVelocity();\n    });\n    return state;\n}\nfunction resolveVariantFromProps(props, definition, custom, visualElement) {\n    /**\n     * If the variant definition is a function, resolve.\n     */\n    if (typeof definition === \"function\") {\n        const [current, velocity] = getValueState(visualElement);\n        definition = definition(custom !== undefined ? custom : props.custom, current, velocity);\n    }\n    /**\n     * If the variant definition is a variant label, or\n     * the function returned a variant label, resolve.\n     */\n    if (typeof definition === \"string\") {\n        definition = props.variants && props.variants[definition];\n    }\n    /**\n     * At this point we've resolved both functions and variant labels,\n     * but the resolved variant label might itself have been a function.\n     * If so, resolve. This can only have returned a valid target object.\n     */\n    if (typeof definition === \"function\") {\n        const [current, velocity] = getValueState(visualElement);\n        definition = definition(custom !== undefined ? custom : props.custom, current, velocity);\n    }\n    return definition;\n}\n\nexport { resolveVariantFromProps };\n","import { KeyframeResolver, time, frame, isMotionValue, cancelFrame, transformProps, motionValue, findValueType, complex, getAnimatableNone, microtask } from 'motion-dom';\nimport { warnOnce, isNumericalString, isZeroValueString, SubscriptionManager } from 'motion-utils';\nimport { featureDefinitions } from '../motion/features/definitions.mjs';\nimport { createBox } from '../projection/geometry/models.mjs';\nimport { initPrefersReducedMotion } from '../utils/reduced-motion/index.mjs';\nimport { hasReducedMotionListener, prefersReducedMotion } from '../utils/reduced-motion/state.mjs';\nimport { visualElementStore } from './store.mjs';\nimport { isControllingVariants, isVariantNode } from './utils/is-controlling-variants.mjs';\nimport { updateMotionValuesFromProps } from './utils/motion-values.mjs';\nimport { resolveVariantFromProps } from './utils/resolve-variants.mjs';\n\nconst propEventHandlers = [\n    \"AnimationStart\",\n    \"AnimationComplete\",\n    \"Update\",\n    \"BeforeLayoutMeasure\",\n    \"LayoutMeasure\",\n    \"LayoutAnimationStart\",\n    \"LayoutAnimationComplete\",\n];\n/**\n * A VisualElement is an imperative abstraction around UI elements such as\n * HTMLElement, SVGElement, Three.Object3D etc.\n */\nclass VisualElement {\n    /**\n     * This method takes React props and returns found MotionValues. For example, HTML\n     * MotionValues will be found within the style prop, whereas for Three.js within attribute arrays.\n     *\n     * This isn't an abstract method as it needs calling in the constructor, but it is\n     * intended to be one.\n     */\n    scrapeMotionValuesFromProps(_props, _prevProps, _visualElement) {\n        return {};\n    }\n    constructor({ parent, props, presenceContext, reducedMotionConfig, blockInitialAnimation, visualState, }, options = {}) {\n        /**\n         * A reference to the current underlying Instance, e.g. a HTMLElement\n         * or Three.Mesh etc.\n         */\n        this.current = null;\n        /**\n         * A set containing references to this VisualElement's children.\n         */\n        this.children = new Set();\n        /**\n         * Determine what role this visual element should take in the variant tree.\n         */\n        this.isVariantNode = false;\n        this.isControllingVariants = false;\n        /**\n         * Decides whether this VisualElement should animate in reduced motion\n         * mode.\n         *\n         * TODO: This is currently set on every individual VisualElement but feels\n         * like it could be set globally.\n         */\n        this.shouldReduceMotion = null;\n        /**\n         * A map of all motion values attached to this visual element. Motion\n         * values are source of truth for any given animated value. A motion\n         * value might be provided externally by the component via props.\n         */\n        this.values = new Map();\n        this.KeyframeResolver = KeyframeResolver;\n        /**\n         * Cleanup functions for active features (hover/tap/exit etc)\n         */\n        this.features = {};\n        /**\n         * A map of every subscription that binds the provided or generated\n         * motion values onChange listeners to this visual element.\n         */\n        this.valueSubscriptions = new Map();\n        /**\n         * A reference to the previously-provided motion values as returned\n         * from scrapeMotionValuesFromProps. We use the keys in here to determine\n         * if any motion values need to be removed after props are updated.\n         */\n        this.prevMotionValues = {};\n        /**\n         * An object containing a SubscriptionManager for each active event.\n         */\n        this.events = {};\n        /**\n         * An object containing an unsubscribe function for each prop event subscription.\n         * For example, every \"Update\" event can have multiple subscribers via\n         * VisualElement.on(), but only one of those can be defined via the onUpdate prop.\n         */\n        this.propEventSubscriptions = {};\n        this.notifyUpdate = () => this.notify(\"Update\", this.latestValues);\n        this.render = () => {\n            if (!this.current)\n                return;\n            this.triggerBuild();\n            this.renderInstance(this.current, this.renderState, this.props.style, this.projection);\n        };\n        this.renderScheduledAt = 0.0;\n        this.scheduleRender = () => {\n            const now = time.now();\n            if (this.renderScheduledAt < now) {\n                this.renderScheduledAt = now;\n                frame.render(this.render, false, true);\n            }\n        };\n        const { latestValues, renderState } = visualState;\n        this.latestValues = latestValues;\n        this.baseTarget = { ...latestValues };\n        this.initialValues = props.initial ? { ...latestValues } : {};\n        this.renderState = renderState;\n        this.parent = parent;\n        this.props = props;\n        this.presenceContext = presenceContext;\n        this.depth = parent ? parent.depth + 1 : 0;\n        this.reducedMotionConfig = reducedMotionConfig;\n        this.options = options;\n        this.blockInitialAnimation = Boolean(blockInitialAnimation);\n        this.isControllingVariants = isControllingVariants(props);\n        this.isVariantNode = isVariantNode(props);\n        if (this.isVariantNode) {\n            this.variantChildren = new Set();\n        }\n        this.manuallyAnimateOnMount = Boolean(parent && parent.current);\n        /**\n         * Any motion values that are provided to the element when created\n         * aren't yet bound to the element, as this would technically be impure.\n         * However, we iterate through the motion values and set them to the\n         * initial values for this component.\n         *\n         * TODO: This is impure and we should look at changing this to run on mount.\n         * Doing so will break some tests but this isn't necessarily a breaking change,\n         * more a reflection of the test.\n         */\n        const { willChange, ...initialMotionValues } = this.scrapeMotionValuesFromProps(props, {}, this);\n        for (const key in initialMotionValues) {\n            const value = initialMotionValues[key];\n            if (latestValues[key] !== undefined && isMotionValue(value)) {\n                value.set(latestValues[key], false);\n            }\n        }\n    }\n    mount(instance) {\n        this.current = instance;\n        visualElementStore.set(instance, this);\n        if (this.projection && !this.projection.instance) {\n            this.projection.mount(instance);\n        }\n        if (this.parent && this.isVariantNode && !this.isControllingVariants) {\n            this.removeFromVariantTree = this.parent.addVariantChild(this);\n        }\n        this.values.forEach((value, key) => this.bindToMotionValue(key, value));\n        if (!hasReducedMotionListener.current) {\n            initPrefersReducedMotion();\n        }\n        this.shouldReduceMotion =\n            this.reducedMotionConfig === \"never\"\n                ? false\n                : this.reducedMotionConfig === \"always\"\n                    ? true\n                    : prefersReducedMotion.current;\n        if (process.env.NODE_ENV !== \"production\") {\n            warnOnce(this.shouldReduceMotion !== true, \"You have Reduced Motion enabled on your device. Animations may not appear as expected.\", \"reduced-motion-disabled\");\n        }\n        if (this.parent)\n            this.parent.children.add(this);\n        this.update(this.props, this.presenceContext);\n    }\n    unmount() {\n        this.projection && this.projection.unmount();\n        cancelFrame(this.notifyUpdate);\n        cancelFrame(this.render);\n        this.valueSubscriptions.forEach((remove) => remove());\n        this.valueSubscriptions.clear();\n        this.removeFromVariantTree && this.removeFromVariantTree();\n        this.parent && this.parent.children.delete(this);\n        for (const key in this.events) {\n            this.events[key].clear();\n        }\n        for (const key in this.features) {\n            const feature = this.features[key];\n            if (feature) {\n                feature.unmount();\n                feature.isMounted = false;\n            }\n        }\n        this.current = null;\n    }\n    bindToMotionValue(key, value) {\n        if (this.valueSubscriptions.has(key)) {\n            this.valueSubscriptions.get(key)();\n        }\n        const valueIsTransform = transformProps.has(key);\n        if (valueIsTransform && this.onBindTransform) {\n            this.onBindTransform();\n        }\n        const removeOnChange = value.on(\"change\", (latestValue) => {\n            this.latestValues[key] = latestValue;\n            this.props.onUpdate && frame.preRender(this.notifyUpdate);\n            if (valueIsTransform && this.projection) {\n                this.projection.isTransformDirty = true;\n            }\n        });\n        const removeOnRenderRequest = value.on(\"renderRequest\", this.scheduleRender);\n        let removeSyncCheck;\n        if (window.MotionCheckAppearSync) {\n            removeSyncCheck = window.MotionCheckAppearSync(this, key, value);\n        }\n        this.valueSubscriptions.set(key, () => {\n            removeOnChange();\n            removeOnRenderRequest();\n            if (removeSyncCheck)\n                removeSyncCheck();\n            if (value.owner)\n                value.stop();\n        });\n    }\n    sortNodePosition(other) {\n        /**\n         * If these nodes aren't even of the same type we can't compare their depth.\n         */\n        if (!this.current ||\n            !this.sortInstanceNodePosition ||\n            this.type !== other.type) {\n            return 0;\n        }\n        return this.sortInstanceNodePosition(this.current, other.current);\n    }\n    updateFeatures() {\n        let key = \"animation\";\n        for (key in featureDefinitions) {\n            const featureDefinition = featureDefinitions[key];\n            if (!featureDefinition)\n                continue;\n            const { isEnabled, Feature: FeatureConstructor } = featureDefinition;\n            /**\n             * If this feature is enabled but not active, make a new instance.\n             */\n            if (!this.features[key] &&\n                FeatureConstructor &&\n                isEnabled(this.props)) {\n                this.features[key] = new FeatureConstructor(this);\n            }\n            /**\n             * If we have a feature, mount or update it.\n             */\n            if (this.features[key]) {\n                const feature = this.features[key];\n                if (feature.isMounted) {\n                    feature.update();\n                }\n                else {\n                    feature.mount();\n                    feature.isMounted = true;\n                }\n            }\n        }\n    }\n    triggerBuild() {\n        this.build(this.renderState, this.latestValues, this.props);\n    }\n    /**\n     * Measure the current viewport box with or without transforms.\n     * Only measures axis-aligned boxes, rotate and skew must be manually\n     * removed with a re-render to work.\n     */\n    measureViewportBox() {\n        return this.current\n            ? this.measureInstanceViewportBox(this.current, this.props)\n            : createBox();\n    }\n    getStaticValue(key) {\n        return this.latestValues[key];\n    }\n    setStaticValue(key, value) {\n        this.latestValues[key] = value;\n    }\n    /**\n     * Update the provided props. Ensure any newly-added motion values are\n     * added to our map, old ones removed, and listeners updated.\n     */\n    update(props, presenceContext) {\n        if (props.transformTemplate || this.props.transformTemplate) {\n            this.scheduleRender();\n        }\n        this.prevProps = this.props;\n        this.props = props;\n        this.prevPresenceContext = this.presenceContext;\n        this.presenceContext = presenceContext;\n        /**\n         * Update prop event handlers ie onAnimationStart, onAnimationComplete\n         */\n        for (let i = 0; i < propEventHandlers.length; i++) {\n            const key = propEventHandlers[i];\n            if (this.propEventSubscriptions[key]) {\n                this.propEventSubscriptions[key]();\n                delete this.propEventSubscriptions[key];\n            }\n            const listenerName = (\"on\" + key);\n            const listener = props[listenerName];\n            if (listener) {\n                this.propEventSubscriptions[key] = this.on(key, listener);\n            }\n        }\n        this.prevMotionValues = updateMotionValuesFromProps(this, this.scrapeMotionValuesFromProps(props, this.prevProps, this), this.prevMotionValues);\n        if (this.handleChildMotionValue) {\n            this.handleChildMotionValue();\n        }\n    }\n    getProps() {\n        return this.props;\n    }\n    /**\n     * Returns the variant definition with a given name.\n     */\n    getVariant(name) {\n        return this.props.variants ? this.props.variants[name] : undefined;\n    }\n    /**\n     * Returns the defined default transition on this component.\n     */\n    getDefaultTransition() {\n        return this.props.transition;\n    }\n    getTransformPagePoint() {\n        return this.props.transformPagePoint;\n    }\n    getClosestVariantNode() {\n        return this.isVariantNode\n            ? this\n            : this.parent\n                ? this.parent.getClosestVariantNode()\n                : undefined;\n    }\n    /**\n     * Add a child visual element to our set of children.\n     */\n    addVariantChild(child) {\n        const closestVariantNode = this.getClosestVariantNode();\n        if (closestVariantNode) {\n            closestVariantNode.variantChildren &&\n                closestVariantNode.variantChildren.add(child);\n            return () => closestVariantNode.variantChildren.delete(child);\n        }\n    }\n    /**\n     * Add a motion value and bind it to this visual element.\n     */\n    addValue(key, value) {\n        // Remove existing value if it exists\n        const existingValue = this.values.get(key);\n        if (value !== existingValue) {\n            if (existingValue)\n                this.removeValue(key);\n            this.bindToMotionValue(key, value);\n            this.values.set(key, value);\n            this.latestValues[key] = value.get();\n        }\n    }\n    /**\n     * Remove a motion value and unbind any active subscriptions.\n     */\n    removeValue(key) {\n        this.values.delete(key);\n        const unsubscribe = this.valueSubscriptions.get(key);\n        if (unsubscribe) {\n            unsubscribe();\n            this.valueSubscriptions.delete(key);\n        }\n        delete this.latestValues[key];\n        this.removeValueFromRenderState(key, this.renderState);\n    }\n    /**\n     * Check whether we have a motion value for this key\n     */\n    hasValue(key) {\n        return this.values.has(key);\n    }\n    getValue(key, defaultValue) {\n        if (this.props.values && this.props.values[key]) {\n            return this.props.values[key];\n        }\n        let value = this.values.get(key);\n        if (value === undefined && defaultValue !== undefined) {\n            value = motionValue(defaultValue === null ? undefined : defaultValue, { owner: this });\n            this.addValue(key, value);\n        }\n        return value;\n    }\n    /**\n     * If we're trying to animate to a previously unencountered value,\n     * we need to check for it in our state and as a last resort read it\n     * directly from the instance (which might have performance implications).\n     */\n    readValue(key, target) {\n        let value = this.latestValues[key] !== undefined || !this.current\n            ? this.latestValues[key]\n            : this.getBaseTargetFromProps(this.props, key) ??\n                this.readValueFromInstance(this.current, key, this.options);\n        if (value !== undefined && value !== null) {\n            if (typeof value === \"string\" &&\n                (isNumericalString(value) || isZeroValueString(value))) {\n                // If this is a number read as a string, ie \"0\" or \"200\", convert it to a number\n                value = parseFloat(value);\n            }\n            else if (!findValueType(value) && complex.test(target)) {\n                value = getAnimatableNone(key, target);\n            }\n            this.setBaseTarget(key, isMotionValue(value) ? value.get() : value);\n        }\n        return isMotionValue(value) ? value.get() : value;\n    }\n    /**\n     * Set the base target to later animate back to. This is currently\n     * only hydrated on creation and when we first read a value.\n     */\n    setBaseTarget(key, value) {\n        this.baseTarget[key] = value;\n    }\n    /**\n     * Find the base target for a value thats been removed from all animation\n     * props.\n     */\n    getBaseTarget(key) {\n        const { initial } = this.props;\n        let valueFromInitial;\n        if (typeof initial === \"string\" || typeof initial === \"object\") {\n            const variant = resolveVariantFromProps(this.props, initial, this.presenceContext?.custom);\n            if (variant) {\n                valueFromInitial = variant[key];\n            }\n        }\n        /**\n         * If this value still exists in the current initial variant, read that.\n         */\n        if (initial && valueFromInitial !== undefined) {\n            return valueFromInitial;\n        }\n        /**\n         * Alternatively, if this VisualElement config has defined a getBaseTarget\n         * so we can read the value from an alternative source, try that.\n         */\n        const target = this.getBaseTargetFromProps(this.props, key);\n        if (target !== undefined && !isMotionValue(target))\n            return target;\n        /**\n         * If the value was initially defined on initial, but it doesn't any more,\n         * return undefined. Otherwise return the value as initially read from the DOM.\n         */\n        return this.initialValues[key] !== undefined &&\n            valueFromInitial === undefined\n            ? undefined\n            : this.baseTarget[key];\n    }\n    on(eventName, callback) {\n        if (!this.events[eventName]) {\n            this.events[eventName] = new SubscriptionManager();\n        }\n        return this.events[eventName].add(callback);\n    }\n    notify(eventName, ...args) {\n        if (this.events[eventName]) {\n            this.events[eventName].notify(...args);\n        }\n    }\n    scheduleRenderMicrotask() {\n        microtask.render(this.render);\n    }\n}\n\nexport { VisualElement };\n","import { isBrowser } from '../is-browser.mjs';\nimport { hasReducedMotionListener, prefersReducedMotion } from './state.mjs';\n\nfunction initPrefersReducedMotion() {\n    hasReducedMotionListener.current = true;\n    if (!isBrowser)\n        return;\n    if (window.matchMedia) {\n        const motionMediaQuery = window.matchMedia(\"(prefers-reduced-motion)\");\n        const setReducedMotionPreferences = () => (prefersReducedMotion.current = motionMediaQuery.matches);\n        motionMediaQuery.addEventListener(\"change\", setReducedMotionPreferences);\n        setReducedMotionPreferences();\n    }\n    else {\n        prefersReducedMotion.current = false;\n    }\n}\n\nexport { initPrefersReducedMotion };\n","import { isMotionValue, motionValue } from 'motion-dom';\n\nfunction updateMotionValuesFromProps(element, next, prev) {\n    for (const key in next) {\n        const nextValue = next[key];\n        const prevValue = prev[key];\n        if (isMotionValue(nextValue)) {\n            /**\n             * If this is a motion value found in props or style, we want to add it\n             * to our visual element's motion value map.\n             */\n            element.addValue(key, nextValue);\n        }\n        else if (isMotionValue(prevValue)) {\n            /**\n             * If we're swapping from a motion value to a static value,\n             * create a new motion value from that\n             */\n            element.addValue(key, motionValue(nextValue, { owner: element }));\n        }\n        else if (prevValue !== nextValue) {\n            /**\n             * If this is a flat value that has changed, update the motion value\n             * or create one if it doesn't exist. We only want to do this if we're\n             * not handling the value with our animation state.\n             */\n            if (element.hasValue(key)) {\n                const existingValue = element.getValue(key);\n                if (existingValue.liveStyle === true) {\n                    existingValue.jump(nextValue);\n                }\n                else if (!existingValue.hasAnimated) {\n                    existingValue.set(nextValue);\n                }\n            }\n            else {\n                const latestValue = element.getStaticValue(key);\n                element.addValue(key, motionValue(latestValue !== undefined ? latestValue : nextValue, { owner: element }));\n            }\n        }\n    }\n    // Handle removed values\n    for (const key in prev) {\n        if (next[key] === undefined)\n            element.removeValue(key);\n    }\n    return next;\n}\n\nexport { updateMotionValuesFromProps };\n","import { DOMKeyframesResolver, isMotionValue } from 'motion-dom';\nimport { VisualElement } from '../VisualElement.mjs';\n\nclass DOMVisualElement extends VisualElement {\n    constructor() {\n        super(...arguments);\n        this.KeyframeResolver = DOMKeyframesResolver;\n    }\n    sortInstanceNodePosition(a, b) {\n        /**\n         * compareDocumentPosition returns a bitmask, by using the bitwise &\n         * we're returning true if 2 in that bitmask is set to true. 2 is set\n         * to true if b preceeds a.\n         */\n        return a.compareDocumentPosition(b) & 2 ? 1 : -1;\n    }\n    getBaseTargetFromProps(props, key) {\n        return props.style\n            ? props.style[key]\n            : undefined;\n    }\n    removeValueFromRenderState(key, { vars, style }) {\n        delete vars[key];\n        delete style[key];\n    }\n    handleChildMotionValue() {\n        if (this.childSubscription) {\n            this.childSubscription();\n            delete this.childSubscription;\n        }\n        const { children } = this.props;\n        if (isMotionValue(children)) {\n            this.childSubscription = children.on(\"change\", (latest) => {\n                if (this.current) {\n                    this.current.textContent = `${latest}`;\n                }\n            });\n        }\n    }\n}\n\nexport { DOMVisualElement };\n","/**\n * Provided a value and a ValueType, returns the value as that value type.\n */\nconst getValueAsType = (value, type) => {\n    return type && typeof value === \"number\"\n        ? type.transform(value)\n        : value;\n};\n\nexport { getValueAsType };\n","import { transformPropOrder, getValueAsType, numberValueTypes } from 'motion-dom';\n\nconst translateAlias = {\n    x: \"translateX\",\n    y: \"translateY\",\n    z: \"translateZ\",\n    transformPerspective: \"perspective\",\n};\nconst numTransforms = transformPropOrder.length;\n/**\n * Build a CSS transform style from individual x/y/scale etc properties.\n *\n * This outputs with a default order of transforms/scales/rotations, this can be customised by\n * providing a transformTemplate function.\n */\nfunction buildTransform(latestValues, transform, transformTemplate) {\n    // The transform string we're going to build into.\n    let transformString = \"\";\n    let transformIsDefault = true;\n    /**\n     * Loop over all possible transforms in order, adding the ones that\n     * are present to the transform string.\n     */\n    for (let i = 0; i < numTransforms; i++) {\n        const key = transformPropOrder[i];\n        const value = latestValues[key];\n        if (value === undefined)\n            continue;\n        let valueIsDefault = true;\n        if (typeof value === \"number\") {\n            valueIsDefault = value === (key.startsWith(\"scale\") ? 1 : 0);\n        }\n        else {\n            valueIsDefault = parseFloat(value) === 0;\n        }\n        if (!valueIsDefault || transformTemplate) {\n            const valueAsType = getValueAsType(value, numberValueTypes[key]);\n            if (!valueIsDefault) {\n                transformIsDefault = false;\n                const transformName = translateAlias[key] || key;\n                transformString += `${transformName}(${valueAsType}) `;\n            }\n            if (transformTemplate) {\n                transform[key] = valueAsType;\n            }\n        }\n    }\n    transformString = transformString.trim();\n    // If we have a custom `transform` template, pass our transform values and\n    // generated transformString to that before returning\n    if (transformTemplate) {\n        transformString = transformTemplate(transform, transformIsDefault ? \"\" : transformString);\n    }\n    else if (transformIsDefault) {\n        transformString = \"none\";\n    }\n    return transformString;\n}\n\nexport { buildTransform };\n","import { transformProps, isCSSVariableName, getValueAsType, numberValueTypes } from 'motion-dom';\nimport { buildTransform } from './build-transform.mjs';\n\nfunction buildHTMLStyles(state, latestValues, transformTemplate) {\n    const { style, vars, transformOrigin } = state;\n    // Track whether we encounter any transform or transformOrigin values.\n    let hasTransform = false;\n    let hasTransformOrigin = false;\n    /**\n     * Loop over all our latest animated values and decide whether to handle them\n     * as a style or CSS variable.\n     *\n     * Transforms and transform origins are kept separately for further processing.\n     */\n    for (const key in latestValues) {\n        const value = latestValues[key];\n        if (transformProps.has(key)) {\n            // If this is a transform, flag to enable further transform processing\n            hasTransform = true;\n            continue;\n        }\n        else if (isCSSVariableName(key)) {\n            vars[key] = value;\n            continue;\n        }\n        else {\n            // Convert the value to its default value type, ie 0 -> \"0px\"\n            const valueAsType = getValueAsType(value, numberValueTypes[key]);\n            if (key.startsWith(\"origin\")) {\n                // If this is a transform origin, flag and enable further transform-origin processing\n                hasTransformOrigin = true;\n                transformOrigin[key] =\n                    valueAsType;\n            }\n            else {\n                style[key] = valueAsType;\n            }\n        }\n    }\n    if (!latestValues.transform) {\n        if (hasTransform || transformTemplate) {\n            style.transform = buildTransform(latestValues, state.transform, transformTemplate);\n        }\n        else if (style.transform) {\n            /**\n             * If we have previously created a transform but currently don't have any,\n             * reset transform style to none.\n             */\n            style.transform = \"none\";\n        }\n    }\n    /**\n     * Build a transformOrigin style. Uses the same defaults as the browser for\n     * undefined origins.\n     */\n    if (hasTransformOrigin) {\n        const { originX = \"50%\", originY = \"50%\", originZ = 0, } = transformOrigin;\n        style.transformOrigin = `${originX} ${originY} ${originZ}`;\n    }\n}\n\nexport { buildHTMLStyles };\n","function renderHTML(element, { style, vars }, styleProp, projection) {\n    const elementStyle = element.style;\n    let key;\n    for (key in style) {\n        // CSSStyleDeclaration has [index: number]: string; in the types, so we use that as key type.\n        elementStyle[key] = style[key];\n    }\n    // Write projection styles directly to element style\n    projection?.applyProjectionStyles(elementStyle, styleProp);\n    for (key in vars) {\n        // Loop over any CSS variables and assign those.\n        // They can only be assigned using `setProperty`.\n        elementStyle.setProperty(key, vars[key]);\n    }\n}\n\nexport { renderHTML };\n","import { isCSSVariableName } from 'motion-dom';\n\nconst scaleCorrectors = {};\nfunction addScaleCorrector(correctors) {\n    for (const key in correctors) {\n        scaleCorrectors[key] = correctors[key];\n        if (isCSSVariableName(key)) {\n            scaleCorrectors[key].isCSSVariable = true;\n        }\n    }\n}\n\nexport { addScaleCorrector, scaleCorrectors };\n","import { transformProps } from 'motion-dom';\nimport { scaleCorrectors } from '../../projection/styles/scale-correction.mjs';\n\nfunction isForcedMotionValue(key, { layout, layoutId }) {\n    return (transformProps.has(key) ||\n        key.startsWith(\"origin\") ||\n        ((layout || layoutId !== undefined) &&\n            (!!scaleCorrectors[key] || key === \"opacity\")));\n}\n\nexport { isForcedMotionValue };\n","import { isMotionValue } from 'motion-dom';\nimport { isForcedMotionValue } from '../../../motion/utils/is-forced-motion-value.mjs';\n\nfunction scrapeMotionValuesFromProps(props, prevProps, visualElement) {\n    const { style } = props;\n    const newValues = {};\n    for (const key in style) {\n        if (isMotionValue(style[key]) ||\n            (prevProps.style &&\n                isMotionValue(prevProps.style[key])) ||\n            isForcedMotionValue(key, props) ||\n            visualElement?.getValue(key)?.liveStyle !== undefined) {\n            newValues[key] = style[key];\n        }\n    }\n    return newValues;\n}\n\nexport { scrapeMotionValuesFromProps };\n","import { transformProps, defaultTransformValue, readTransformValue, isCSSVariableName } from 'motion-dom';\nimport { measureViewportBox } from '../../projection/utils/measure.mjs';\nimport { DOMVisualElement } from '../dom/DOMVisualElement.mjs';\nimport { buildHTMLStyles } from './utils/build-styles.mjs';\nimport { renderHTML } from './utils/render.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\n\nfunction getComputedStyle(element) {\n    return window.getComputedStyle(element);\n}\nclass HTMLVisualElement extends DOMVisualElement {\n    constructor() {\n        super(...arguments);\n        this.type = \"html\";\n        this.renderInstance = renderHTML;\n    }\n    readValueFromInstance(instance, key) {\n        if (transformProps.has(key)) {\n            return this.projection?.isProjecting\n                ? defaultTransformValue(key)\n                : readTransformValue(instance, key);\n        }\n        else {\n            const computedStyle = getComputedStyle(instance);\n            const value = (isCSSVariableName(key)\n                ? computedStyle.getPropertyValue(key)\n                : computedStyle[key]) || 0;\n            return typeof value === \"string\" ? value.trim() : value;\n        }\n    }\n    measureInstanceViewportBox(instance, { transformPagePoint }) {\n        return measureViewportBox(instance, transformPagePoint);\n    }\n    build(renderState, latestValues, props) {\n        buildHTMLStyles(renderState, latestValues, props.transformTemplate);\n    }\n    scrapeMotionValuesFromProps(props, prevProps, visualElement) {\n        return scrapeMotionValuesFromProps(props, prevProps, visualElement);\n    }\n}\n\nexport { HTMLVisualElement, getComputedStyle };\n","/**\n * Convert camelCase to dash-case properties.\n */\nconst camelToDash = (str) => str.replace(/([a-z])([A-Z])/gu, \"$1-$2\").toLowerCase();\n\nexport { camelToDash };\n","import { px } from 'motion-dom';\n\nconst dashKeys = {\n    offset: \"stroke-dashoffset\",\n    array: \"stroke-dasharray\",\n};\nconst camelKeys = {\n    offset: \"strokeDashoffset\",\n    array: \"strokeDasharray\",\n};\n/**\n * Build SVG path properties. Uses the path's measured length to convert\n * our custom pathLength, pathSpacing and pathOffset into stroke-dashoffset\n * and stroke-dasharray attributes.\n *\n * This function is mutative to reduce per-frame GC.\n */\nfunction buildSVGPath(attrs, length, spacing = 1, offset = 0, useDashCase = true) {\n    // Normalise path length by setting SVG attribute pathLength to 1\n    attrs.pathLength = 1;\n    // We use dash case when setting attributes directly to the DOM node and camel case\n    // when defining props on a React component.\n    const keys = useDashCase ? dashKeys : camelKeys;\n    // Build the dash offset\n    attrs[keys.offset] = px.transform(-offset);\n    // Build the dash array\n    const pathLength = px.transform(length);\n    const pathSpacing = px.transform(spacing);\n    attrs[keys.array] = `${pathLength} ${pathSpacing}`;\n}\n\nexport { buildSVGPath };\n","import { buildHTMLStyles } from '../../html/utils/build-styles.mjs';\nimport { buildSVGPath } from './path.mjs';\n\n/**\n * Build SVG visual attributes, like cx and style.transform\n */\nfunction buildSVGAttrs(state, { attrX, attrY, attrScale, pathLength, pathSpacing = 1, pathOffset = 0, \n// This is object creation, which we try to avoid per-frame.\n...latest }, isSVGTag, transformTemplate, styleProp) {\n    buildHTMLStyles(state, latest, transformTemplate);\n    /**\n     * For svg tags we just want to make sure viewBox is animatable and treat all the styles\n     * as normal HTML tags.\n     */\n    if (isSVGTag) {\n        if (state.style.viewBox) {\n            state.attrs.viewBox = state.style.viewBox;\n        }\n        return;\n    }\n    state.attrs = state.style;\n    state.style = {};\n    const { attrs, style } = state;\n    /**\n     * However, we apply transforms as CSS transforms.\n     * So if we detect a transform, transformOrigin we take it from attrs and copy it into style.\n     */\n    if (attrs.transform) {\n        style.transform = attrs.transform;\n        delete attrs.transform;\n    }\n    if (style.transform || attrs.transformOrigin) {\n        style.transformOrigin = attrs.transformOrigin ?? \"50% 50%\";\n        delete attrs.transformOrigin;\n    }\n    if (style.transform) {\n        /**\n         * SVG's element transform-origin uses its own median as a reference.\n         * Therefore, transformBox becomes a fill-box\n         */\n        style.transformBox = styleProp?.transformBox ?? \"fill-box\";\n        delete attrs.transformBox;\n    }\n    // Render attrX/attrY/attrScale as attributes\n    if (attrX !== undefined)\n        attrs.x = attrX;\n    if (attrY !== undefined)\n        attrs.y = attrY;\n    if (attrScale !== undefined)\n        attrs.scale = attrScale;\n    // Build SVG path if one has been defined\n    if (pathLength !== undefined) {\n        buildSVGPath(attrs, pathLength, pathSpacing, pathOffset, false);\n    }\n}\n\nexport { buildSVGAttrs };\n","/**\n * A set of attribute names that are always read/written as camel case.\n */\nconst camelCaseAttributes = new Set([\n    \"baseFrequency\",\n    \"diffuseConstant\",\n    \"kernelMatrix\",\n    \"kernelUnitLength\",\n    \"keySplines\",\n    \"keyTimes\",\n    \"limitingConeAngle\",\n    \"markerHeight\",\n    \"markerWidth\",\n    \"numOctaves\",\n    \"targetX\",\n    \"targetY\",\n    \"surfaceScale\",\n    \"specularConstant\",\n    \"specularExponent\",\n    \"stdDeviation\",\n    \"tableValues\",\n    \"viewBox\",\n    \"gradientTransform\",\n    \"pathLength\",\n    \"startOffset\",\n    \"textLength\",\n    \"lengthAdjust\",\n]);\n\nexport { camelCaseAttributes };\n","const isSVGTag = (tag) => typeof tag === \"string\" && tag.toLowerCase() === \"svg\";\n\nexport { isSVGTag };\n","import { isMotionValue, transformPropOrder } from 'motion-dom';\nimport { scrapeMotionValuesFromProps as scrapeMotionValuesFromProps$1 } from '../../html/utils/scrape-motion-values.mjs';\n\nfunction scrapeMotionValuesFromProps(props, prevProps, visualElement) {\n    const newValues = scrapeMotionValuesFromProps$1(props, prevProps, visualElement);\n    for (const key in props) {\n        if (isMotionValue(props[key]) ||\n            isMotionValue(prevProps[key])) {\n            const targetKey = transformPropOrder.indexOf(key) !== -1\n                ? \"attr\" + key.charAt(0).toUpperCase() + key.substring(1)\n                : key;\n            newValues[targetKey] = props[key];\n        }\n    }\n    return newValues;\n}\n\nexport { scrapeMotionValuesFromProps };\n","import { transformProps, getDefaultValueType } from 'motion-dom';\nimport { createBox } from '../../projection/geometry/models.mjs';\nimport { DOMVisualElement } from '../dom/DOMVisualElement.mjs';\nimport { camelToDash } from '../dom/utils/camel-to-dash.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { camelCaseAttributes } from './utils/camel-case-attrs.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\nimport { renderSVG } from './utils/render.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\n\nclass SVGVisualElement extends DOMVisualElement {\n    constructor() {\n        super(...arguments);\n        this.type = \"svg\";\n        this.isSVGTag = false;\n        this.measureInstanceViewportBox = createBox;\n    }\n    getBaseTargetFromProps(props, key) {\n        return props[key];\n    }\n    readValueFromInstance(instance, key) {\n        if (transformProps.has(key)) {\n            const defaultType = getDefaultValueType(key);\n            return defaultType ? defaultType.default || 0 : 0;\n        }\n        key = !camelCaseAttributes.has(key) ? camelToDash(key) : key;\n        return instance.getAttribute(key);\n    }\n    scrapeMotionValuesFromProps(props, prevProps, visualElement) {\n        return scrapeMotionValuesFromProps(props, prevProps, visualElement);\n    }\n    build(renderState, latestValues, props) {\n        buildSVGAttrs(renderState, latestValues, this.isSVGTag, props.transformTemplate, props.style);\n    }\n    renderInstance(instance, renderState, styleProp, projection) {\n        renderSVG(instance, renderState, styleProp, projection);\n    }\n    mount(instance) {\n        this.isSVGTag = isSVGTag(instance.tagName);\n        super.mount(instance);\n    }\n}\n\nexport { SVGVisualElement };\n","import { camelToDash } from '../../dom/utils/camel-to-dash.mjs';\nimport { renderHTML } from '../../html/utils/render.mjs';\nimport { camelCaseAttributes } from './camel-case-attrs.mjs';\n\nfunction renderSVG(element, renderState, _styleProp, projection) {\n    renderHTML(element, renderState, undefined, projection);\n    for (const key in renderState.attrs) {\n        element.setAttribute(!camelCaseAttributes.has(key) ? camelToDash(key) : key, renderState.attrs[key]);\n    }\n}\n\nexport { renderSVG };\n","/**\n * We keep these listed separately as we use the lowercase tag names as part\n * of the runtime bundle to detect SVG components\n */\nconst lowercaseSVGElements = [\n    \"animate\",\n    \"circle\",\n    \"defs\",\n    \"desc\",\n    \"ellipse\",\n    \"g\",\n    \"image\",\n    \"line\",\n    \"filter\",\n    \"marker\",\n    \"mask\",\n    \"metadata\",\n    \"path\",\n    \"pattern\",\n    \"polygon\",\n    \"polyline\",\n    \"rect\",\n    \"stop\",\n    \"switch\",\n    \"symbol\",\n    \"svg\",\n    \"text\",\n    \"tspan\",\n    \"use\",\n    \"view\",\n];\n\nexport { lowercaseSVGElements };\n","import { lowercaseSVGElements } from '../../svg/lowercase-elements.mjs';\n\nfunction isSVGComponent(Component) {\n    if (\n    /**\n     * If it's not a string, it's a custom React component. Currently we only support\n     * HTML custom React components.\n     */\n    typeof Component !== \"string\" ||\n        /**\n         * If it contains a dash, the element is a custom HTML webcomponent.\n         */\n        Component.includes(\"-\")) {\n        return false;\n    }\n    else if (\n    /**\n     * If it's in our list of lowercase SVG tags, it's an SVG component\n     */\n    lowercaseSVGElements.indexOf(Component) > -1 ||\n        /**\n         * If it contains a capital letter, it's an SVG component\n         */\n        /[A-Z]/u.test(Component)) {\n        return true;\n    }\n    return false;\n}\n\nexport { isSVGComponent };\n","import { Fragment } from 'react';\nimport { HTMLVisualElement } from '../html/HTMLVisualElement.mjs';\nimport { SVGVisualElement } from '../svg/SVGVisualElement.mjs';\nimport { isSVGComponent } from './utils/is-svg-component.mjs';\n\nconst createDomVisualElement = (Component, options) => {\n    return isSVGComponent(Component)\n        ? new SVGVisualElement(options)\n        : new HTMLVisualElement(options, {\n            allowProjection: Component !== Fragment,\n        });\n};\n\nexport { createDomVisualElement };\n","\"use client\";\nimport { createContext } from 'react';\n\nconst LazyContext = createContext({ strict: false });\n\nexport { LazyContext };\n","\"use client\";\nimport { createContext } from 'react';\n\nconst MotionContext = /* @__PURE__ */ createContext({});\n\nexport { MotionContext };\n","import { useContext, useMemo } from 'react';\nimport { MotionContext } from './index.mjs';\nimport { getCurrentTreeVariants } from './utils.mjs';\n\nfunction useCreateMotionContext(props) {\n    const { initial, animate } = getCurrentTreeVariants(props, useContext(MotionContext));\n    return useMemo(() => ({ initial, animate }), [variantLabelsAsDependency(initial), variantLabelsAsDependency(animate)]);\n}\nfunction variantLabelsAsDependency(prop) {\n    return Array.isArray(prop) ? prop.join(\" \") : prop;\n}\n\nexport { useCreateMotionContext };\n","import { isControllingVariants } from '../../render/utils/is-controlling-variants.mjs';\nimport { isVariantLabel } from '../../render/utils/is-variant-label.mjs';\n\nfunction getCurrentTreeVariants(props, context) {\n    if (isControllingVariants(props)) {\n        const { initial, animate } = props;\n        return {\n            initial: initial === false || isVariantLabel(initial)\n                ? initial\n                : undefined,\n            animate: isVariantLabel(animate) ? animate : undefined,\n        };\n    }\n    return props.inherit !== false ? context : {};\n}\n\nexport { getCurrentTreeVariants };\n","const createHtmlRenderState = () => ({\n    style: {},\n    transform: {},\n    transformOrigin: {},\n    vars: {},\n});\n\nexport { createHtmlRenderState };\n","import { isMotionValue } from 'motion-dom';\nimport { useMemo } from 'react';\nimport { isForcedMotionValue } from '../../motion/utils/is-forced-motion-value.mjs';\nimport { buildHTMLStyles } from './utils/build-styles.mjs';\nimport { createHtmlRenderState } from './utils/create-render-state.mjs';\n\nfunction copyRawValuesOnly(target, source, props) {\n    for (const key in source) {\n        if (!isMotionValue(source[key]) && !isForcedMotionValue(key, props)) {\n            target[key] = source[key];\n        }\n    }\n}\nfunction useInitialMotionValues({ transformTemplate }, visualState) {\n    return useMemo(() => {\n        const state = createHtmlRenderState();\n        buildHTMLStyles(state, visualState, transformTemplate);\n        return Object.assign({}, state.vars, state.style);\n    }, [visualState]);\n}\nfunction useStyle(props, visualState) {\n    const styleProp = props.style || {};\n    const style = {};\n    /**\n     * Copy non-Motion Values straight into style\n     */\n    copyRawValuesOnly(style, styleProp, props);\n    Object.assign(style, useInitialMotionValues(props, visualState));\n    return style;\n}\nfunction useHTMLProps(props, visualState) {\n    // The `any` isn't ideal but it is the type of createElement props argument\n    const htmlProps = {};\n    const style = useStyle(props, visualState);\n    if (props.drag && props.dragListener !== false) {\n        // Disable the ghost element when a user drags\n        htmlProps.draggable = false;\n        // Disable text selection\n        style.userSelect =\n            style.WebkitUserSelect =\n                style.WebkitTouchCallout =\n                    \"none\";\n        // Disable scrolling on the draggable direction\n        style.touchAction =\n            props.drag === true\n                ? \"none\"\n                : `pan-${props.drag === \"x\" ? \"y\" : \"x\"}`;\n    }\n    if (props.tabIndex === undefined &&\n        (props.onTap || props.onTapStart || props.whileTap)) {\n        htmlProps.tabIndex = 0;\n    }\n    htmlProps.style = style;\n    return htmlProps;\n}\n\nexport { copyRawValuesOnly, useHTMLProps };\n","import { createHtmlRenderState } from '../../html/utils/create-render-state.mjs';\n\nconst createSvgRenderState = () => ({\n    ...createHtmlRenderState(),\n    attrs: {},\n});\n\nexport { createSvgRenderState };\n","import { useMemo } from 'react';\nimport { copyRawValuesOnly } from '../html/use-props.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { createSvgRenderState } from './utils/create-render-state.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\n\nfunction useSVGProps(props, visualState, _isStatic, Component) {\n    const visualProps = useMemo(() => {\n        const state = createSvgRenderState();\n        buildSVGAttrs(state, visualState, isSVGTag(Component), props.transformTemplate, props.style);\n        return {\n            ...state.attrs,\n            style: { ...state.style },\n        };\n    }, [visualState]);\n    if (props.style) {\n        const rawStyles = {};\n        copyRawValuesOnly(rawStyles, props.style, props);\n        visualProps.style = { ...rawStyles, ...visualProps.style };\n    }\n    return visualProps;\n}\n\nexport { useSVGProps };\n","/**\n * A list of all valid MotionProps.\n *\n * @privateRemarks\n * This doesn't throw if a `MotionProp` name is missing - it should.\n */\nconst validMotionProps = new Set([\n    \"animate\",\n    \"exit\",\n    \"variants\",\n    \"initial\",\n    \"style\",\n    \"values\",\n    \"variants\",\n    \"transition\",\n    \"transformTemplate\",\n    \"custom\",\n    \"inherit\",\n    \"onBeforeLayoutMeasure\",\n    \"onAnimationStart\",\n    \"onAnimationComplete\",\n    \"onUpdate\",\n    \"onDragStart\",\n    \"onDrag\",\n    \"onDragEnd\",\n    \"onMeasureDragConstraints\",\n    \"onDirectionLock\",\n    \"onDragTransitionEnd\",\n    \"_dragX\",\n    \"_dragY\",\n    \"onHoverStart\",\n    \"onHoverEnd\",\n    \"onViewportEnter\",\n    \"onViewportLeave\",\n    \"globalTapTarget\",\n    \"ignoreStrict\",\n    \"viewport\",\n]);\n/**\n * Check whether a prop name is a valid `MotionProp` key.\n *\n * @param key - Name of the property to check\n * @returns `true` is key is a valid `MotionProp`.\n *\n * @public\n */\nfunction isValidMotionProp(key) {\n    return (key.startsWith(\"while\") ||\n        (key.startsWith(\"drag\") && key !== \"draggable\") ||\n        key.startsWith(\"layout\") ||\n        key.startsWith(\"onTap\") ||\n        key.startsWith(\"onPan\") ||\n        key.startsWith(\"onLayout\") ||\n        validMotionProps.has(key));\n}\n\nexport { isValidMotionProp };\n","import { isValidMotionProp } from '../../../motion/utils/valid-prop.mjs';\n\nlet shouldForward = (key) => !isValidMotionProp(key);\nfunction loadExternalIsValidProp(isValidProp) {\n    if (typeof isValidProp !== \"function\")\n        return;\n    // Explicitly filter our events\n    shouldForward = (key) => key.startsWith(\"on\") ? !isValidMotionProp(key) : isValidProp(key);\n}\n/**\n * Emotion and Styled Components both allow users to pass through arbitrary props to their components\n * to dynamically generate CSS. They both use the `@emotion/is-prop-valid` package to determine which\n * of these should be passed to the underlying DOM node.\n *\n * However, when styling a Motion component `styled(motion.div)`, both packages pass through *all* props\n * as it's seen as an arbitrary component rather than a DOM node. Motion only allows arbitrary props\n * passed through the `custom` prop so it doesn't *need* the payload or computational overhead of\n * `@emotion/is-prop-valid`, however to fix this problem we need to use it.\n *\n * By making it an optionalDependency we can offer this functionality only in the situations where it's\n * actually required.\n */\ntry {\n    /**\n     * We attempt to import this package but require won't be defined in esm environments, in that case\n     * isPropValid will have to be provided via `MotionContext`. In a 6.0.0 this should probably be removed\n     * in favour of explicit injection.\n     */\n    loadExternalIsValidProp(require(\"@emotion/is-prop-valid\").default);\n}\ncatch {\n    // We don't need to actually do anything here - the fallback is the existing `isPropValid`.\n}\nfunction filterProps(props, isDom, forwardMotionProps) {\n    const filteredProps = {};\n    for (const key in props) {\n        /**\n         * values is considered a valid prop by Emotion, so if it's present\n         * this will be rendered out to the DOM unless explicitly filtered.\n         *\n         * We check the type as it could be used with the `feColorMatrix`\n         * element, which we support.\n         */\n        if (key === \"values\" && typeof props.values === \"object\")\n            continue;\n        if (shouldForward(key) ||\n            (forwardMotionProps === true && isValidMotionProp(key)) ||\n            (!isDom && !isValidMotionProp(key)) ||\n            // If trying to use native HTML drag events, forward drag listeners\n            (props[\"draggable\"] &&\n                key.startsWith(\"onDrag\"))) {\n            filteredProps[key] =\n                props[key];\n        }\n    }\n    return filteredProps;\n}\n\nexport { filterProps, loadExternalIsValidProp };\n","import { isMotionValue } from 'motion-dom';\nimport { Fragment, useMemo, createElement } from 'react';\nimport { useHTMLProps } from '../html/use-props.mjs';\nimport { useSVGProps } from '../svg/use-props.mjs';\nimport { filterProps } from './utils/filter-props.mjs';\nimport { isSVGComponent } from './utils/is-svg-component.mjs';\n\nfunction useRender(Component, props, ref, { latestValues, }, isStatic, forwardMotionProps = false) {\n    const useVisualProps = isSVGComponent(Component)\n        ? useSVGProps\n        : useHTMLProps;\n    const visualProps = useVisualProps(props, latestValues, isStatic, Component);\n    const filteredProps = filterProps(props, typeof Component === \"string\", forwardMotionProps);\n    const elementProps = Component !== Fragment ? { ...filteredProps, ...visualProps, ref } : {};\n    /**\n     * If component has been handed a motion value as its child,\n     * memoise its initial value and render that. Subsequent updates\n     * will be handled by the onChange handler\n     */\n    const { children } = props;\n    const renderedChildren = useMemo(() => (isMotionValue(children) ? children.get() : children), [children]);\n    return createElement(Component, {\n        ...elementProps,\n        children: renderedChildren,\n    });\n}\n\nexport { useRender };\n","import { isMotionValue } from 'motion-dom';\n\n/**\n * If the provided value is a MotionValue, this returns the actual value, otherwise just the value itself\n *\n * TODO: Remove and move to library\n */\nfunction resolveMotionValue(value) {\n    return isMotionValue(value) ? value.get() : value;\n}\n\nexport { resolveMotionValue };\n","import { useContext } from 'react';\nimport { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { MotionContext } from '../../context/MotionContext/index.mjs';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { isControllingVariants, isVariantNode } from '../../render/utils/is-controlling-variants.mjs';\nimport { resolveVariantFromProps } from '../../render/utils/resolve-variants.mjs';\nimport { useConstant } from '../../utils/use-constant.mjs';\nimport { resolveMotionValue } from '../../value/utils/resolve-motion-value.mjs';\n\nfunction makeState({ scrapeMotionValuesFromProps, createRenderState, }, props, context, presenceContext) {\n    const state = {\n        latestValues: makeLatestValues(props, context, presenceContext, scrapeMotionValuesFromProps),\n        renderState: createRenderState(),\n    };\n    return state;\n}\nfunction makeLatestValues(props, context, presenceContext, scrapeMotionValues) {\n    const values = {};\n    const motionValues = scrapeMotionValues(props, {});\n    for (const key in motionValues) {\n        values[key] = resolveMotionValue(motionValues[key]);\n    }\n    let { initial, animate } = props;\n    const isControllingVariants$1 = isControllingVariants(props);\n    const isVariantNode$1 = isVariantNode(props);\n    if (context &&\n        isVariantNode$1 &&\n        !isControllingVariants$1 &&\n        props.inherit !== false) {\n        if (initial === undefined)\n            initial = context.initial;\n        if (animate === undefined)\n            animate = context.animate;\n    }\n    let isInitialAnimationBlocked = presenceContext\n        ? presenceContext.initial === false\n        : false;\n    isInitialAnimationBlocked = isInitialAnimationBlocked || initial === false;\n    const variantToSet = isInitialAnimationBlocked ? animate : initial;\n    if (variantToSet &&\n        typeof variantToSet !== \"boolean\" &&\n        !isAnimationControls(variantToSet)) {\n        const list = Array.isArray(variantToSet) ? variantToSet : [variantToSet];\n        for (let i = 0; i < list.length; i++) {\n            const resolved = resolveVariantFromProps(props, list[i]);\n            if (resolved) {\n                const { transitionEnd, transition, ...target } = resolved;\n                for (const key in target) {\n                    let valueTarget = target[key];\n                    if (Array.isArray(valueTarget)) {\n                        /**\n                         * Take final keyframe if the initial animation is blocked because\n                         * we want to initialise at the end of that blocked animation.\n                         */\n                        const index = isInitialAnimationBlocked\n                            ? valueTarget.length - 1\n                            : 0;\n                        valueTarget = valueTarget[index];\n                    }\n                    if (valueTarget !== null) {\n                        values[key] = valueTarget;\n                    }\n                }\n                for (const key in transitionEnd) {\n                    values[key] = transitionEnd[key];\n                }\n            }\n        }\n    }\n    return values;\n}\nconst makeUseVisualState = (config) => (props, isStatic) => {\n    const context = useContext(MotionContext);\n    const presenceContext = useContext(PresenceContext);\n    const make = () => makeState(config, props, context, presenceContext);\n    return isStatic ? make() : useConstant(make);\n};\n\nexport { makeUseVisualState };\n","import { makeUseVisualState } from '../../motion/utils/use-visual-state.mjs';\nimport { createHtmlRenderState } from './utils/create-render-state.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\n\nconst useHTMLVisualState = /*@__PURE__*/ makeUseVisualState({\n    scrapeMotionValuesFromProps,\n    createRenderState: createHtmlRenderState,\n});\n\nexport { useHTMLVisualState };\n","import { makeUseVisualState } from '../../motion/utils/use-visual-state.mjs';\nimport { createSvgRenderState } from './utils/create-render-state.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\n\nconst useSVGVisualState = /*@__PURE__*/ makeUseVisualState({\n    scrapeMotionValuesFromProps: scrapeMotionValuesFromProps,\n    createRenderState: createSvgRenderState,\n});\n\nexport { useSVGVisualState };\n","const motionComponentSymbol = Symbol.for(\"motionComponentSymbol\");\n\nexport { motionComponentSymbol };\n","function isRefObject(ref) {\n    return (ref &&\n        typeof ref === \"object\" &&\n        Object.prototype.hasOwnProperty.call(ref, \"current\"));\n}\n\nexport { isRefObject };\n","import { useCallback } from 'react';\nimport { isRefObject } from '../../utils/is-ref-object.mjs';\n\n/**\n * Creates a ref function that, when called, hydrates the provided\n * external ref and VisualElement.\n */\nfunction useMotionRef(visualState, visualElement, externalRef) {\n    return useCallback((instance) => {\n        if (instance) {\n            visualState.onMount && visualState.onMount(instance);\n        }\n        if (visualElement) {\n            if (instance) {\n                visualElement.mount(instance);\n            }\n            else {\n                visualElement.unmount();\n            }\n        }\n        if (externalRef) {\n            if (typeof externalRef === \"function\") {\n                externalRef(instance);\n            }\n            else if (isRefObject(externalRef)) {\n                externalRef.current = instance;\n            }\n        }\n    }, \n    /**\n     * Only pass a new ref callback to React if we've received a visual element\n     * factory. Otherwise we'll be mounting/remounting every time externalRef\n     * or other dependencies change.\n     */\n    [visualElement]);\n}\n\nexport { useMotionRef };\n","import { camelToDash } from '../../render/dom/utils/camel-to-dash.mjs';\n\nconst optimizedAppearDataId = \"framerAppearId\";\nconst optimizedAppearDataAttribute = \"data-\" + camelToDash(optimizedAppearDataId);\n\nexport { optimizedAppearDataAttribute, optimizedAppearDataId };\n","\"use client\";\nimport { createContext } from 'react';\n\n/**\n * Internal, exported only for usage in Framer\n */\nconst SwitchLayoutGroupContext = createContext({});\n\nexport { SwitchLayoutGroupContext };\n","import { useContext, useRef, useInsertionEffect, useEffect } from 'react';\nimport { optimizedAppearDataAttribute } from '../../animation/optimized-appear/data-id.mjs';\nimport { LazyContext } from '../../context/LazyContext.mjs';\nimport { MotionConfigContext } from '../../context/MotionConfigContext.mjs';\nimport { MotionContext } from '../../context/MotionContext/index.mjs';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { SwitchLayoutGroupContext } from '../../context/SwitchLayoutGroupContext.mjs';\nimport { isRefObject } from '../../utils/is-ref-object.mjs';\nimport { useIsomorphicLayoutEffect } from '../../utils/use-isomorphic-effect.mjs';\n\nfunction useVisualElement(Component, visualState, props, createVisualElement, ProjectionNodeConstructor) {\n    const { visualElement: parent } = useContext(MotionContext);\n    const lazyContext = useContext(LazyContext);\n    const presenceContext = useContext(PresenceContext);\n    const reducedMotionConfig = useContext(MotionConfigContext).reducedMotion;\n    const visualElementRef = useRef(null);\n    /**\n     * If we haven't preloaded a renderer, check to see if we have one lazy-loaded\n     */\n    createVisualElement =\n        createVisualElement ||\n            lazyContext.renderer;\n    if (!visualElementRef.current && createVisualElement) {\n        visualElementRef.current = createVisualElement(Component, {\n            visualState,\n            parent,\n            props,\n            presenceContext,\n            blockInitialAnimation: presenceContext\n                ? presenceContext.initial === false\n                : false,\n            reducedMotionConfig,\n        });\n    }\n    const visualElement = visualElementRef.current;\n    /**\n     * Load Motion gesture and animation features. These are rendered as renderless\n     * components so each feature can optionally make use of React lifecycle methods.\n     */\n    const initialLayoutGroupConfig = useContext(SwitchLayoutGroupContext);\n    if (visualElement &&\n        !visualElement.projection &&\n        ProjectionNodeConstructor &&\n        (visualElement.type === \"html\" || visualElement.type === \"svg\")) {\n        createProjectionNode(visualElementRef.current, props, ProjectionNodeConstructor, initialLayoutGroupConfig);\n    }\n    const isMounted = useRef(false);\n    useInsertionEffect(() => {\n        /**\n         * Check the component has already mounted before calling\n         * `update` unnecessarily. This ensures we skip the initial update.\n         */\n        if (visualElement && isMounted.current) {\n            visualElement.update(props, presenceContext);\n        }\n    });\n    /**\n     * Cache this value as we want to know whether HandoffAppearAnimations\n     * was present on initial render - it will be deleted after this.\n     */\n    const optimisedAppearId = props[optimizedAppearDataAttribute];\n    const wantsHandoff = useRef(Boolean(optimisedAppearId) &&\n        !window.MotionHandoffIsComplete?.(optimisedAppearId) &&\n        window.MotionHasOptimisedAnimation?.(optimisedAppearId));\n    useIsomorphicLayoutEffect(() => {\n        if (!visualElement)\n            return;\n        isMounted.current = true;\n        window.MotionIsMounted = true;\n        visualElement.updateFeatures();\n        visualElement.scheduleRenderMicrotask();\n        /**\n         * Ideally this function would always run in a useEffect.\n         *\n         * However, if we have optimised appear animations to handoff from,\n         * it needs to happen synchronously to ensure there's no flash of\n         * incorrect styles in the event of a hydration error.\n         *\n         * So if we detect a situtation where optimised appear animations\n         * are running, we use useLayoutEffect to trigger animations.\n         */\n        if (wantsHandoff.current && visualElement.animationState) {\n            visualElement.animationState.animateChanges();\n        }\n    });\n    useEffect(() => {\n        if (!visualElement)\n            return;\n        if (!wantsHandoff.current && visualElement.animationState) {\n            visualElement.animationState.animateChanges();\n        }\n        if (wantsHandoff.current) {\n            // This ensures all future calls to animateChanges() in this component will run in useEffect\n            queueMicrotask(() => {\n                window.MotionHandoffMarkAsComplete?.(optimisedAppearId);\n            });\n            wantsHandoff.current = false;\n        }\n    });\n    return visualElement;\n}\nfunction createProjectionNode(visualElement, props, ProjectionNodeConstructor, initialPromotionConfig) {\n    const { layoutId, layout, drag, dragConstraints, layoutScroll, layoutRoot, layoutCrossfade, } = props;\n    visualElement.projection = new ProjectionNodeConstructor(visualElement.latestValues, props[\"data-framer-portal-id\"]\n        ? undefined\n        : getClosestProjectingNode(visualElement.parent));\n    visualElement.projection.setOptions({\n        layoutId,\n        layout,\n        alwaysMeasureLayout: Boolean(drag) || (dragConstraints && isRefObject(dragConstraints)),\n        visualElement,\n        /**\n         * TODO: Update options in an effect. This could be tricky as it'll be too late\n         * to update by the time layout animations run.\n         * We also need to fix this safeToRemove by linking it up to the one returned by usePresence,\n         * ensuring it gets called if there's no potential layout animations.\n         *\n         */\n        animationType: typeof layout === \"string\" ? layout : \"both\",\n        initialPromotionConfig,\n        crossfade: layoutCrossfade,\n        layoutScroll,\n        layoutRoot,\n    });\n}\nfunction getClosestProjectingNode(visualElement) {\n    if (!visualElement)\n        return undefined;\n    return visualElement.options.allowProjection !== false\n        ? visualElement.projection\n        : getClosestProjectingNode(visualElement.parent);\n}\n\nexport { useVisualElement };\n","\"use client\";\nimport { jsxs, jsx } from 'react/jsx-runtime';\nimport { warning, invariant } from 'motion-utils';\nimport { forwardRef, useContext } from 'react';\nimport { LayoutGroupContext } from '../context/LayoutGroupContext.mjs';\nimport { LazyContext } from '../context/LazyContext.mjs';\nimport { MotionConfigContext } from '../context/MotionConfigContext.mjs';\nimport { MotionContext } from '../context/MotionContext/index.mjs';\nimport { useCreateMotionContext } from '../context/MotionContext/create.mjs';\nimport { useRender } from '../render/dom/use-render.mjs';\nimport { isSVGComponent } from '../render/dom/utils/is-svg-component.mjs';\nimport { useHTMLVisualState } from '../render/html/use-html-visual-state.mjs';\nimport { useSVGVisualState } from '../render/svg/use-svg-visual-state.mjs';\nimport { isBrowser } from '../utils/is-browser.mjs';\nimport { featureDefinitions } from './features/definitions.mjs';\nimport { loadFeatures } from './features/load-features.mjs';\nimport { motionComponentSymbol } from './utils/symbol.mjs';\nimport { useMotionRef } from './utils/use-motion-ref.mjs';\nimport { useVisualElement } from './utils/use-visual-element.mjs';\n\n/**\n * Create a `motion` component.\n *\n * This function accepts a Component argument, which can be either a string (ie \"div\"\n * for `motion.div`), or an actual React component.\n *\n * Alongside this is a config option which provides a way of rendering the provided\n * component \"offline\", or outside the React render cycle.\n */\nfunction createMotionComponent(Component, { forwardMotionProps = false } = {}, preloadedFeatures, createVisualElement) {\n    preloadedFeatures && loadFeatures(preloadedFeatures);\n    const useVisualState = isSVGComponent(Component)\n        ? useSVGVisualState\n        : useHTMLVisualState;\n    function MotionDOMComponent(props, externalRef) {\n        /**\n         * If we need to measure the element we load this functionality in a\n         * separate class component in order to gain access to getSnapshotBeforeUpdate.\n         */\n        let MeasureLayout;\n        const configAndProps = {\n            ...useContext(MotionConfigContext),\n            ...props,\n            layoutId: useLayoutId(props),\n        };\n        const { isStatic } = configAndProps;\n        const context = useCreateMotionContext(props);\n        const visualState = useVisualState(props, isStatic);\n        if (!isStatic && isBrowser) {\n            useStrictMode(configAndProps, preloadedFeatures);\n            const layoutProjection = getProjectionFunctionality(configAndProps);\n            MeasureLayout = layoutProjection.MeasureLayout;\n            /**\n             * Create a VisualElement for this component. A VisualElement provides a common\n             * interface to renderer-specific APIs (ie DOM/Three.js etc) as well as\n             * providing a way of rendering to these APIs outside of the React render loop\n             * for more performant animations and interactions\n             */\n            context.visualElement = useVisualElement(Component, visualState, configAndProps, createVisualElement, layoutProjection.ProjectionNode);\n        }\n        /**\n         * The mount order and hierarchy is specific to ensure our element ref\n         * is hydrated by the time features fire their effects.\n         */\n        return (jsxs(MotionContext.Provider, { value: context, children: [MeasureLayout && context.visualElement ? (jsx(MeasureLayout, { visualElement: context.visualElement, ...configAndProps })) : null, useRender(Component, props, useMotionRef(visualState, context.visualElement, externalRef), visualState, isStatic, forwardMotionProps)] }));\n    }\n    MotionDOMComponent.displayName = `motion.${typeof Component === \"string\"\n        ? Component\n        : `create(${Component.displayName ?? Component.name ?? \"\"})`}`;\n    const ForwardRefMotionComponent = forwardRef(MotionDOMComponent);\n    ForwardRefMotionComponent[motionComponentSymbol] = Component;\n    return ForwardRefMotionComponent;\n}\nfunction useLayoutId({ layoutId }) {\n    const layoutGroupId = useContext(LayoutGroupContext).id;\n    return layoutGroupId && layoutId !== undefined\n        ? layoutGroupId + \"-\" + layoutId\n        : layoutId;\n}\nfunction useStrictMode(configAndProps, preloadedFeatures) {\n    const isStrict = useContext(LazyContext).strict;\n    /**\n     * If we're in development mode, check to make sure we're not rendering a motion component\n     * as a child of LazyMotion, as this will break the file-size benefits of using it.\n     */\n    if (process.env.NODE_ENV !== \"production\" &&\n        preloadedFeatures &&\n        isStrict) {\n        const strictMessage = \"You have rendered a `motion` component within a `LazyMotion` component. This will break tree shaking. Import and render a `m` component instead.\";\n        configAndProps.ignoreStrict\n            ? warning(false, strictMessage, \"lazy-strict-mode\")\n            : invariant(false, strictMessage, \"lazy-strict-mode\");\n    }\n}\nfunction getProjectionFunctionality(props) {\n    const { drag, layout } = featureDefinitions;\n    if (!drag && !layout)\n        return {};\n    const combined = { ...drag, ...layout };\n    return {\n        MeasureLayout: drag?.isEnabled(props) || layout?.isEnabled(props)\n            ? combined.MeasureLayout\n            : undefined,\n        ProjectionNode: combined.ProjectionNode,\n    };\n}\n\nexport { createMotionComponent };\n","import { featureDefinitions } from './definitions.mjs';\n\nfunction loadFeatures(features) {\n    for (const key in features) {\n        featureDefinitions[key] = {\n            ...featureDefinitions[key],\n            ...features[key],\n        };\n    }\n}\n\nexport { loadFeatures };\n","import { warnOnce } from 'motion-utils';\nimport { createMotionComponent } from '../../motion/index.mjs';\n\nfunction createMotionProxy(preloadedFeatures, createVisualElement) {\n    if (typeof Proxy === \"undefined\") {\n        return createMotionComponent;\n    }\n    /**\n     * A cache of generated `motion` components, e.g `motion.div`, `motion.input` etc.\n     * Rather than generating them anew every render.\n     */\n    const componentCache = new Map();\n    const factory = (Component, options) => {\n        return createMotionComponent(Component, options, preloadedFeatures, createVisualElement);\n    };\n    /**\n     * Support for deprecated`motion(Component)` pattern\n     */\n    const deprecatedFactoryFunction = (Component, options) => {\n        if (process.env.NODE_ENV !== \"production\") {\n            warnOnce(false, \"motion() is deprecated. Use motion.create() instead.\");\n        }\n        return factory(Component, options);\n    };\n    return new Proxy(deprecatedFactoryFunction, {\n        /**\n         * Called when `motion` is referenced with a prop: `motion.div`, `motion.input` etc.\n         * The prop name is passed through as `key` and we can use that to generate a `motion`\n         * DOM component with that name.\n         */\n        get: (_target, key) => {\n            if (key === \"create\")\n                return factory;\n            /**\n             * If this element doesn't exist in the component cache, create it and cache.\n             */\n            if (!componentCache.has(key)) {\n                componentCache.set(key, createMotionComponent(key, undefined, preloadedFeatures, createVisualElement));\n            }\n            return componentCache.get(key);\n        },\n    });\n}\n\nexport { createMotionProxy };\n","import { resolveVariantFromProps } from './resolve-variants.mjs';\n\nfunction resolveVariant(visualElement, definition, custom) {\n    const props = visualElement.getProps();\n    return resolveVariantFromProps(props, definition, custom !== undefined ? custom : props.custom, visualElement);\n}\n\nexport { resolveVariant };\n","function getValueTransition(transition, key) {\n    return (transition?.[key] ??\n        transition?.[\"default\"] ??\n        transition);\n}\n\nexport { getValueTransition };\n","const isKeyframesTarget = (v) => {\n    return Array.isArray(v);\n};\n\nexport { isKeyframesTarget };\n","import { motionValue } from 'motion-dom';\nimport { isKeyframesTarget } from '../../animation/utils/is-keyframes-target.mjs';\nimport { resolveVariant } from './resolve-dynamic-variants.mjs';\n\n/**\n * Set VisualElement's MotionValue, creating a new MotionValue for it if\n * it doesn't exist.\n */\nfunction setMotionValue(visualElement, key, value) {\n    if (visualElement.hasValue(key)) {\n        visualElement.getValue(key).set(value);\n    }\n    else {\n        visualElement.addValue(key, motionValue(value));\n    }\n}\nfunction resolveFinalValueInKeyframes(v) {\n    // TODO maybe throw if v.length - 1 is placeholder token?\n    return isKeyframesTarget(v) ? v[v.length - 1] || 0 : v;\n}\nfunction setTarget(visualElement, definition) {\n    const resolved = resolveVariant(visualElement, definition);\n    let { transitionEnd = {}, transition = {}, ...target } = resolved || {};\n    target = { ...target, ...transitionEnd };\n    for (const key in target) {\n        const value = resolveFinalValueInKeyframes(target[key]);\n        setMotionValue(visualElement, key, value);\n    }\n}\n\nexport { setTarget };\n","import { MotionGlobalConfig } from 'motion-utils';\nimport { isWillChangeMotionValue } from './is.mjs';\n\nfunction addValueToWillChange(visualElement, key) {\n    const willChange = visualElement.getValue(\"willChange\");\n    /**\n     * It could be that a user has set willChange to a regular MotionValue,\n     * in which case we can't add the value to it.\n     */\n    if (isWillChangeMotionValue(willChange)) {\n        return willChange.add(key);\n    }\n    else if (!willChange && MotionGlobalConfig.WillChange) {\n        const newWillChange = new MotionGlobalConfig.WillChange(\"auto\");\n        visualElement.addValue(\"willChange\", newWillChange);\n        newWillChange.add(key);\n    }\n}\n\nexport { addValueToWillChange };\n","import { isMotionValue } from 'motion-dom';\n\nfunction isWillChangeMotionValue(value) {\n    return Boolean(isMotionValue(value) && value.add);\n}\n\nexport { isWillChangeMotionValue };\n","import { optimizedAppearDataAttribute } from './data-id.mjs';\n\nfunction getOptimisedAppearId(visualElement) {\n    return visualElement.props[optimizedAppearDataAttribute];\n}\n\nexport { getOptimisedAppearId };\n","/**\n * Pipe\n * Compose other transformers to run linearily\n * pipe(min(20), max(40))\n * @param  {...functions} transformers\n * @return {function}\n */\nconst combineFunctions = (a, b) => (v) => b(a(v));\nconst pipe = (...transformers) => transformers.reduce(combineFunctions);\n\nexport { pipe };\n","/**\n * Converts seconds to milliseconds\n *\n * @param seconds - Time in seconds.\n * @return milliseconds - Converted time in milliseconds.\n */\n/*#__NO_SIDE_EFFECTS__*/\nconst secondsToMilliseconds = (seconds) => seconds * 1000;\n/*#__NO_SIDE_EFFECTS__*/\nconst millisecondsToSeconds = (milliseconds) => milliseconds / 1000;\n\nexport { millisecondsToSeconds, secondsToMilliseconds };\n","const activeAnimations = {\n    layout: 0,\n    mainThread: 0,\n    waapi: 0,\n};\n\nexport { activeAnimations };\n","// Adapted from https://gist.github.com/mjackson/5311256\nfunction hueToRgb(p, q, t) {\n    if (t < 0)\n        t += 1;\n    if (t > 1)\n        t -= 1;\n    if (t < 1 / 6)\n        return p + (q - p) * 6 * t;\n    if (t < 1 / 2)\n        return q;\n    if (t < 2 / 3)\n        return p + (q - p) * (2 / 3 - t) * 6;\n    return p;\n}\nfunction hslaToRgba({ hue, saturation, lightness, alpha }) {\n    hue /= 360;\n    saturation /= 100;\n    lightness /= 100;\n    let red = 0;\n    let green = 0;\n    let blue = 0;\n    if (!saturation) {\n        red = green = blue = lightness;\n    }\n    else {\n        const q = lightness < 0.5\n            ? lightness * (1 + saturation)\n            : lightness + saturation - lightness * saturation;\n        const p = 2 * lightness - q;\n        red = hueToRgb(p, q, hue + 1 / 3);\n        green = hueToRgb(p, q, hue);\n        blue = hueToRgb(p, q, hue - 1 / 3);\n    }\n    return {\n        red: Math.round(red * 255),\n        green: Math.round(green * 255),\n        blue: Math.round(blue * 255),\n        alpha,\n    };\n}\n\nexport { hslaToRgba };\n","function mixImmediate(a, b) {\n    return (p) => (p > 0 ? b : a);\n}\n\nexport { mixImmediate };\n","import { warning } from 'motion-utils';\nimport { hex } from '../../value/types/color/hex.mjs';\nimport { hsla } from '../../value/types/color/hsla.mjs';\nimport { hslaToRgba } from '../../value/types/color/hsla-to-rgba.mjs';\nimport { rgba } from '../../value/types/color/rgba.mjs';\nimport { mixImmediate } from './immediate.mjs';\nimport { mixNumber } from './number.mjs';\n\n// Linear color space blending\n// Explained https://www.youtube.com/watch?v=LKnqECcg6Gw\n// Demonstrated http://codepen.io/osublake/pen/xGVVaN\nconst mixLinearColor = (from, to, v) => {\n    const fromExpo = from * from;\n    const expo = v * (to * to - fromExpo) + fromExpo;\n    return expo < 0 ? 0 : Math.sqrt(expo);\n};\nconst colorTypes = [hex, rgba, hsla];\nconst getColorType = (v) => colorTypes.find((type) => type.test(v));\nfunction asRGBA(color) {\n    const type = getColorType(color);\n    warning(Boolean(type), `'${color}' is not an animatable color. Use the equivalent color code instead.`, \"color-not-animatable\");\n    if (!Boolean(type))\n        return false;\n    let model = type.parse(color);\n    if (type === hsla) {\n        // TODO Remove this cast - needed since Motion's stricter typing\n        model = hslaToRgba(model);\n    }\n    return model;\n}\nconst mixColor = (from, to) => {\n    const fromRGBA = asRGBA(from);\n    const toRGBA = asRGBA(to);\n    if (!fromRGBA || !toRGBA) {\n        return mixImmediate(from, to);\n    }\n    const blended = { ...fromRGBA };\n    return (v) => {\n        blended.red = mixLinearColor(fromRGBA.red, toRGBA.red, v);\n        blended.green = mixLinearColor(fromRGBA.green, toRGBA.green, v);\n        blended.blue = mixLinearColor(fromRGBA.blue, toRGBA.blue, v);\n        blended.alpha = mixNumber(fromRGBA.alpha, toRGBA.alpha, v);\n        return rgba.transform(blended);\n    };\n};\n\nexport { mixColor, mixLinearColor };\n","const invisibleValues = new Set([\"none\", \"hidden\"]);\n/**\n * Returns a function that, when provided a progress value between 0 and 1,\n * will return the \"none\" or \"hidden\" string only when the progress is that of\n * the origin or target.\n */\nfunction mixVisibility(origin, target) {\n    if (invisibleValues.has(origin)) {\n        return (p) => (p <= 0 ? origin : target);\n    }\n    else {\n        return (p) => (p >= 1 ? target : origin);\n    }\n}\n\nexport { invisibleValues, mixVisibility };\n","import { pipe, warning } from 'motion-utils';\nimport { isCSSVariableToken } from '../../animation/utils/is-css-variable.mjs';\nimport { color } from '../../value/types/color/index.mjs';\nimport { complex, analyseComplexValue } from '../../value/types/complex/index.mjs';\nimport { mixColor } from './color.mjs';\nimport { mixImmediate } from './immediate.mjs';\nimport { mixNumber as mixNumber$1 } from './number.mjs';\nimport { invisibleValues, mixVisibility } from './visibility.mjs';\n\nfunction mixNumber(a, b) {\n    return (p) => mixNumber$1(a, b, p);\n}\nfunction getMixer(a) {\n    if (typeof a === \"number\") {\n        return mixNumber;\n    }\n    else if (typeof a === \"string\") {\n        return isCSSVariableToken(a)\n            ? mixImmediate\n            : color.test(a)\n                ? mixColor\n                : mixComplex;\n    }\n    else if (Array.isArray(a)) {\n        return mixArray;\n    }\n    else if (typeof a === \"object\") {\n        return color.test(a) ? mixColor : mixObject;\n    }\n    return mixImmediate;\n}\nfunction mixArray(a, b) {\n    const output = [...a];\n    const numValues = output.length;\n    const blendValue = a.map((v, i) => getMixer(v)(v, b[i]));\n    return (p) => {\n        for (let i = 0; i < numValues; i++) {\n            output[i] = blendValue[i](p);\n        }\n        return output;\n    };\n}\nfunction mixObject(a, b) {\n    const output = { ...a, ...b };\n    const blendValue = {};\n    for (const key in output) {\n        if (a[key] !== undefined && b[key] !== undefined) {\n            blendValue[key] = getMixer(a[key])(a[key], b[key]);\n        }\n    }\n    return (v) => {\n        for (const key in blendValue) {\n            output[key] = blendValue[key](v);\n        }\n        return output;\n    };\n}\nfunction matchOrder(origin, target) {\n    const orderedOrigin = [];\n    const pointers = { color: 0, var: 0, number: 0 };\n    for (let i = 0; i < target.values.length; i++) {\n        const type = target.types[i];\n        const originIndex = origin.indexes[type][pointers[type]];\n        const originValue = origin.values[originIndex] ?? 0;\n        orderedOrigin[i] = originValue;\n        pointers[type]++;\n    }\n    return orderedOrigin;\n}\nconst mixComplex = (origin, target) => {\n    const template = complex.createTransformer(target);\n    const originStats = analyseComplexValue(origin);\n    const targetStats = analyseComplexValue(target);\n    const canInterpolate = originStats.indexes.var.length === targetStats.indexes.var.length &&\n        originStats.indexes.color.length === targetStats.indexes.color.length &&\n        originStats.indexes.number.length >= targetStats.indexes.number.length;\n    if (canInterpolate) {\n        if ((invisibleValues.has(origin) &&\n            !targetStats.values.length) ||\n            (invisibleValues.has(target) &&\n                !originStats.values.length)) {\n            return mixVisibility(origin, target);\n        }\n        return pipe(mixArray(matchOrder(originStats, targetStats), targetStats.values), template);\n    }\n    else {\n        warning(true, `Complex values '${origin}' and '${target}' too different to mix. Ensure all colors are of the same type, and that each contains the same quantity of number and color values. Falling back to instant transition.`, \"complex-values-different\");\n        return mixImmediate(origin, target);\n    }\n};\n\nexport { getMixer, mixArray, mixComplex, mixObject };\n","import { getMixer } from './complex.mjs';\nimport { mixNumber } from './number.mjs';\n\nfunction mix(from, to, p) {\n    if (typeof from === \"number\" &&\n        typeof to === \"number\" &&\n        typeof p === \"number\") {\n        return mixNumber(from, to, p);\n    }\n    const mixer = getMixer(from);\n    return mixer(from, to);\n}\n\nexport { mix };\n","import { time } from '../../frameloop/sync-time.mjs';\nimport { frame, cancelFrame, frameData } from '../../frameloop/frame.mjs';\n\nconst frameloopDriver = (update) => {\n    const passTimestamp = ({ timestamp }) => update(timestamp);\n    return {\n        start: (keepAlive = true) => frame.update(passTimestamp, keepAlive),\n        stop: () => cancelFrame(passTimestamp),\n        /**\n         * If we're processing this frame we can use the\n         * framelocked timestamp to keep things in sync.\n         */\n        now: () => (frameData.isProcessing ? frameData.timestamp : time.now()),\n    };\n};\n\nexport { frameloopDriver };\n","const generateLinearEasing = (easing, duration, // as milliseconds\nresolution = 10 // as milliseconds\n) => {\n    let points = \"\";\n    const numPoints = Math.max(Math.round(duration / resolution), 2);\n    for (let i = 0; i < numPoints; i++) {\n        points += Math.round(easing(i / (numPoints - 1)) * 10000) / 10000 + \", \";\n    }\n    return `linear(${points.substring(0, points.length - 2)})`;\n};\n\nexport { generateLinearEasing };\n","/**\n * Implement a practical max duration for keyframe generation\n * to prevent infinite loops\n */\nconst maxGeneratorDuration = 20000;\nfunction calcGeneratorDuration(generator) {\n    let duration = 0;\n    const timeStep = 50;\n    let state = generator.next(duration);\n    while (!state.done && duration < maxGeneratorDuration) {\n        duration += timeStep;\n        state = generator.next(duration);\n    }\n    return duration >= maxGeneratorDuration ? Infinity : duration;\n}\n\nexport { calcGeneratorDuration, maxGeneratorDuration };\n","import { velocityPerSecond } from 'motion-utils';\n\nconst velocitySampleDuration = 5; // ms\nfunction calcGeneratorVelocity(resolveValue, t, current) {\n    const prevT = Math.max(t - velocitySampleDuration, 0);\n    return velocityPerSecond(current - resolveValue(prevT), t - prevT);\n}\n\nexport { calcGeneratorVelocity };\n","const springDefaults = {\n    // Default spring physics\n    stiffness: 100,\n    damping: 10,\n    mass: 1.0,\n    velocity: 0.0,\n    // Default duration/bounce-based options\n    duration: 800, // in ms\n    bounce: 0.3,\n    visualDuration: 0.3, // in seconds\n    // Rest thresholds\n    restSpeed: {\n        granular: 0.01,\n        default: 2,\n    },\n    restDelta: {\n        granular: 0.005,\n        default: 0.5,\n    },\n    // Limits\n    minDuration: 0.01, // in seconds\n    maxDuration: 10.0, // in seconds\n    minDamping: 0.05,\n    maxDamping: 1,\n};\n\nexport { springDefaults };\n","import { warning, secondsToMilliseconds, clamp, millisecondsToSeconds } from 'motion-utils';\nimport { springDefaults } from './defaults.mjs';\n\nconst safeMin = 0.001;\nfunction findSpring({ duration = springDefaults.duration, bounce = springDefaults.bounce, velocity = springDefaults.velocity, mass = springDefaults.mass, }) {\n    let envelope;\n    let derivative;\n    warning(duration <= secondsToMilliseconds(springDefaults.maxDuration), \"Spring duration must be 10 seconds or less\", \"spring-duration-limit\");\n    let dampingRatio = 1 - bounce;\n    /**\n     * Restrict dampingRatio and duration to within acceptable ranges.\n     */\n    dampingRatio = clamp(springDefaults.minDamping, springDefaults.maxDamping, dampingRatio);\n    duration = clamp(springDefaults.minDuration, springDefaults.maxDuration, millisecondsToSeconds(duration));\n    if (dampingRatio < 1) {\n        /**\n         * Underdamped spring\n         */\n        envelope = (undampedFreq) => {\n            const exponentialDecay = undampedFreq * dampingRatio;\n            const delta = exponentialDecay * duration;\n            const a = exponentialDecay - velocity;\n            const b = calcAngularFreq(undampedFreq, dampingRatio);\n            const c = Math.exp(-delta);\n            return safeMin - (a / b) * c;\n        };\n        derivative = (undampedFreq) => {\n            const exponentialDecay = undampedFreq * dampingRatio;\n            const delta = exponentialDecay * duration;\n            const d = delta * velocity + velocity;\n            const e = Math.pow(dampingRatio, 2) * Math.pow(undampedFreq, 2) * duration;\n            const f = Math.exp(-delta);\n            const g = calcAngularFreq(Math.pow(undampedFreq, 2), dampingRatio);\n            const factor = -envelope(undampedFreq) + safeMin > 0 ? -1 : 1;\n            return (factor * ((d - e) * f)) / g;\n        };\n    }\n    else {\n        /**\n         * Critically-damped spring\n         */\n        envelope = (undampedFreq) => {\n            const a = Math.exp(-undampedFreq * duration);\n            const b = (undampedFreq - velocity) * duration + 1;\n            return -safeMin + a * b;\n        };\n        derivative = (undampedFreq) => {\n            const a = Math.exp(-undampedFreq * duration);\n            const b = (velocity - undampedFreq) * (duration * duration);\n            return a * b;\n        };\n    }\n    const initialGuess = 5 / duration;\n    const undampedFreq = approximateRoot(envelope, derivative, initialGuess);\n    duration = secondsToMilliseconds(duration);\n    if (isNaN(undampedFreq)) {\n        return {\n            stiffness: springDefaults.stiffness,\n            damping: springDefaults.damping,\n            duration,\n        };\n    }\n    else {\n        const stiffness = Math.pow(undampedFreq, 2) * mass;\n        return {\n            stiffness,\n            damping: dampingRatio * 2 * Math.sqrt(mass * stiffness),\n            duration,\n        };\n    }\n}\nconst rootIterations = 12;\nfunction approximateRoot(envelope, derivative, initialGuess) {\n    let result = initialGuess;\n    for (let i = 1; i < rootIterations; i++) {\n        result = result - envelope(result) / derivative(result);\n    }\n    return result;\n}\nfunction calcAngularFreq(undampedFreq, dampingRatio) {\n    return undampedFreq * Math.sqrt(1 - dampingRatio * dampingRatio);\n}\n\nexport { calcAngularFreq, findSpring };\n","import { millisecondsToSeconds, secondsToMilliseconds, clamp } from 'motion-utils';\nimport { generateLinearEasing } from '../../waapi/utils/linear.mjs';\nimport { calcGeneratorDuration, maxGeneratorDuration } from '../utils/calc-duration.mjs';\nimport { createGeneratorEasing } from '../utils/create-generator-easing.mjs';\nimport { calcGeneratorVelocity } from '../utils/velocity.mjs';\nimport { springDefaults } from './defaults.mjs';\nimport { findSpring, calcAngularFreq } from './find.mjs';\n\nconst durationKeys = [\"duration\", \"bounce\"];\nconst physicsKeys = [\"stiffness\", \"damping\", \"mass\"];\nfunction isSpringType(options, keys) {\n    return keys.some((key) => options[key] !== undefined);\n}\nfunction getSpringOptions(options) {\n    let springOptions = {\n        velocity: springDefaults.velocity,\n        stiffness: springDefaults.stiffness,\n        damping: springDefaults.damping,\n        mass: springDefaults.mass,\n        isResolvedFromDuration: false,\n        ...options,\n    };\n    // stiffness/damping/mass overrides duration/bounce\n    if (!isSpringType(options, physicsKeys) &&\n        isSpringType(options, durationKeys)) {\n        if (options.visualDuration) {\n            const visualDuration = options.visualDuration;\n            const root = (2 * Math.PI) / (visualDuration * 1.2);\n            const stiffness = root * root;\n            const damping = 2 *\n                clamp(0.05, 1, 1 - (options.bounce || 0)) *\n                Math.sqrt(stiffness);\n            springOptions = {\n                ...springOptions,\n                mass: springDefaults.mass,\n                stiffness,\n                damping,\n            };\n        }\n        else {\n            const derived = findSpring(options);\n            springOptions = {\n                ...springOptions,\n                ...derived,\n                mass: springDefaults.mass,\n            };\n            springOptions.isResolvedFromDuration = true;\n        }\n    }\n    return springOptions;\n}\nfunction spring(optionsOrVisualDuration = springDefaults.visualDuration, bounce = springDefaults.bounce) {\n    const options = typeof optionsOrVisualDuration !== \"object\"\n        ? {\n            visualDuration: optionsOrVisualDuration,\n            keyframes: [0, 1],\n            bounce,\n        }\n        : optionsOrVisualDuration;\n    let { restSpeed, restDelta } = options;\n    const origin = options.keyframes[0];\n    const target = options.keyframes[options.keyframes.length - 1];\n    /**\n     * This is the Iterator-spec return value. We ensure it's mutable rather than using a generator\n     * to reduce GC during animation.\n     */\n    const state = { done: false, value: origin };\n    const { stiffness, damping, mass, duration, velocity, isResolvedFromDuration, } = getSpringOptions({\n        ...options,\n        velocity: -millisecondsToSeconds(options.velocity || 0),\n    });\n    const initialVelocity = velocity || 0.0;\n    const dampingRatio = damping / (2 * Math.sqrt(stiffness * mass));\n    const initialDelta = target - origin;\n    const undampedAngularFreq = millisecondsToSeconds(Math.sqrt(stiffness / mass));\n    /**\n     * If we're working on a granular scale, use smaller defaults for determining\n     * when the spring is finished.\n     *\n     * These defaults have been selected emprically based on what strikes a good\n     * ratio between feeling good and finishing as soon as changes are imperceptible.\n     */\n    const isGranularScale = Math.abs(initialDelta) < 5;\n    restSpeed || (restSpeed = isGranularScale\n        ? springDefaults.restSpeed.granular\n        : springDefaults.restSpeed.default);\n    restDelta || (restDelta = isGranularScale\n        ? springDefaults.restDelta.granular\n        : springDefaults.restDelta.default);\n    let resolveSpring;\n    if (dampingRatio < 1) {\n        const angularFreq = calcAngularFreq(undampedAngularFreq, dampingRatio);\n        // Underdamped spring\n        resolveSpring = (t) => {\n            const envelope = Math.exp(-dampingRatio * undampedAngularFreq * t);\n            return (target -\n                envelope *\n                    (((initialVelocity +\n                        dampingRatio * undampedAngularFreq * initialDelta) /\n                        angularFreq) *\n                        Math.sin(angularFreq * t) +\n                        initialDelta * Math.cos(angularFreq * t)));\n        };\n    }\n    else if (dampingRatio === 1) {\n        // Critically damped spring\n        resolveSpring = (t) => target -\n            Math.exp(-undampedAngularFreq * t) *\n                (initialDelta +\n                    (initialVelocity + undampedAngularFreq * initialDelta) * t);\n    }\n    else {\n        // Overdamped spring\n        const dampedAngularFreq = undampedAngularFreq * Math.sqrt(dampingRatio * dampingRatio - 1);\n        resolveSpring = (t) => {\n            const envelope = Math.exp(-dampingRatio * undampedAngularFreq * t);\n            // When performing sinh or cosh values can hit Infinity so we cap them here\n            const freqForT = Math.min(dampedAngularFreq * t, 300);\n            return (target -\n                (envelope *\n                    ((initialVelocity +\n                        dampingRatio * undampedAngularFreq * initialDelta) *\n                        Math.sinh(freqForT) +\n                        dampedAngularFreq *\n                            initialDelta *\n                            Math.cosh(freqForT))) /\n                    dampedAngularFreq);\n        };\n    }\n    const generator = {\n        calculatedDuration: isResolvedFromDuration ? duration || null : null,\n        next: (t) => {\n            const current = resolveSpring(t);\n            if (!isResolvedFromDuration) {\n                let currentVelocity = t === 0 ? initialVelocity : 0.0;\n                /**\n                 * We only need to calculate velocity for under-damped springs\n                 * as over- and critically-damped springs can't overshoot, so\n                 * checking only for displacement is enough.\n                 */\n                if (dampingRatio < 1) {\n                    currentVelocity =\n                        t === 0\n                            ? secondsToMilliseconds(initialVelocity)\n                            : calcGeneratorVelocity(resolveSpring, t, current);\n                }\n                const isBelowVelocityThreshold = Math.abs(currentVelocity) <= restSpeed;\n                const isBelowDisplacementThreshold = Math.abs(target - current) <= restDelta;\n                state.done =\n                    isBelowVelocityThreshold && isBelowDisplacementThreshold;\n            }\n            else {\n                state.done = t >= duration;\n            }\n            state.value = state.done ? target : current;\n            return state;\n        },\n        toString: () => {\n            const calculatedDuration = Math.min(calcGeneratorDuration(generator), maxGeneratorDuration);\n            const easing = generateLinearEasing((progress) => generator.next(calculatedDuration * progress).value, calculatedDuration, 30);\n            return calculatedDuration + \"ms \" + easing;\n        },\n        toTransition: () => { },\n    };\n    return generator;\n}\nspring.applyToOptions = (options) => {\n    const generatorOptions = createGeneratorEasing(options, 100, spring);\n    options.ease = generatorOptions.ease;\n    options.duration = secondsToMilliseconds(generatorOptions.duration);\n    options.type = \"keyframes\";\n    return options;\n};\n\nexport { spring };\n","import { spring } from './spring/index.mjs';\nimport { calcGeneratorVelocity } from './utils/velocity.mjs';\n\nfunction inertia({ keyframes, velocity = 0.0, power = 0.8, timeConstant = 325, bounceDamping = 10, bounceStiffness = 500, modifyTarget, min, max, restDelta = 0.5, restSpeed, }) {\n    const origin = keyframes[0];\n    const state = {\n        done: false,\n        value: origin,\n    };\n    const isOutOfBounds = (v) => (min !== undefined && v < min) || (max !== undefined && v > max);\n    const nearestBoundary = (v) => {\n        if (min === undefined)\n            return max;\n        if (max === undefined)\n            return min;\n        return Math.abs(min - v) < Math.abs(max - v) ? min : max;\n    };\n    let amplitude = power * velocity;\n    const ideal = origin + amplitude;\n    const target = modifyTarget === undefined ? ideal : modifyTarget(ideal);\n    /**\n     * If the target has changed we need to re-calculate the amplitude, otherwise\n     * the animation will start from the wrong position.\n     */\n    if (target !== ideal)\n        amplitude = target - origin;\n    const calcDelta = (t) => -amplitude * Math.exp(-t / timeConstant);\n    const calcLatest = (t) => target + calcDelta(t);\n    const applyFriction = (t) => {\n        const delta = calcDelta(t);\n        const latest = calcLatest(t);\n        state.done = Math.abs(delta) <= restDelta;\n        state.value = state.done ? target : latest;\n    };\n    /**\n     * Ideally this would resolve for t in a stateless way, we could\n     * do that by always precalculating the animation but as we know\n     * this will be done anyway we can assume that spring will\n     * be discovered during that.\n     */\n    let timeReachedBoundary;\n    let spring$1;\n    const checkCatchBoundary = (t) => {\n        if (!isOutOfBounds(state.value))\n            return;\n        timeReachedBoundary = t;\n        spring$1 = spring({\n            keyframes: [state.value, nearestBoundary(state.value)],\n            velocity: calcGeneratorVelocity(calcLatest, t, state.value), // TODO: This should be passing * 1000\n            damping: bounceDamping,\n            stiffness: bounceStiffness,\n            restDelta,\n            restSpeed,\n        });\n    };\n    checkCatchBoundary(0);\n    return {\n        calculatedDuration: null,\n        next: (t) => {\n            /**\n             * We need to resolve the friction to figure out if we need a\n             * spring but we don't want to do this twice per frame. So here\n             * we flag if we updated for this frame and later if we did\n             * we can skip doing it again.\n             */\n            let hasUpdatedFrame = false;\n            if (!spring$1 && timeReachedBoundary === undefined) {\n                hasUpdatedFrame = true;\n                applyFriction(t);\n                checkCatchBoundary(t);\n            }\n            /**\n             * If we have a spring and the provided t is beyond the moment the friction\n             * animation crossed the min/max boundary, use the spring.\n             */\n            if (timeReachedBoundary !== undefined && t >= timeReachedBoundary) {\n                return spring$1.next(t - timeReachedBoundary);\n            }\n            else {\n                !hasUpdatedFrame && applyFriction(t);\n                return state;\n            }\n        },\n    };\n}\n\nexport { inertia };\n","import { millisecondsToSeconds } from 'motion-utils';\nimport { calcGeneratorDuration, maxGeneratorDuration } from './calc-duration.mjs';\n\n/**\n * Create a progress => progress easing function from a generator.\n */\nfunction createGeneratorEasing(options, scale = 100, createGenerator) {\n    const generator = createGenerator({ ...options, keyframes: [0, scale] });\n    const duration = Math.min(calcGeneratorDuration(generator), maxGeneratorDuration);\n    return {\n        type: \"keyframes\",\n        ease: (progress) => {\n            return generator.next(duration * progress).value / scale;\n        },\n        duration: millisecondsToSeconds(duration),\n    };\n}\n\nexport { createGeneratorEasing };\n","import { noop } from '../noop.mjs';\n\n/*\n  Bezier function generator\n  This has been modified from Gaëtan Renaudeau's BezierEasing\n  https://github.com/gre/bezier-easing/blob/master/src/index.js\n  https://github.com/gre/bezier-easing/blob/master/LICENSE\n  \n  I've removed the newtonRaphsonIterate algo because in benchmarking it\n  wasn't noticeably faster than binarySubdivision, indeed removing it\n  usually improved times, depending on the curve.\n  I also removed the lookup table, as for the added bundle size and loop we're\n  only cutting ~4 or so subdivision iterations. I bumped the max iterations up\n  to 12 to compensate and this still tended to be faster for no perceivable\n  loss in accuracy.\n  Usage\n    const easeOut = cubicBezier(.17,.67,.83,.67);\n    const x = easeOut(0.5); // returns 0.627...\n*/\n// Returns x(t) given t, x1, and x2, or y(t) given t, y1, and y2.\nconst calcBezier = (t, a1, a2) => (((1.0 - 3.0 * a2 + 3.0 * a1) * t + (3.0 * a2 - 6.0 * a1)) * t + 3.0 * a1) *\n    t;\nconst subdivisionPrecision = 0.0000001;\nconst subdivisionMaxIterations = 12;\nfunction binarySubdivide(x, lowerBound, upperBound, mX1, mX2) {\n    let currentX;\n    let currentT;\n    let i = 0;\n    do {\n        currentT = lowerBound + (upperBound - lowerBound) / 2.0;\n        currentX = calcBezier(currentT, mX1, mX2) - x;\n        if (currentX > 0.0) {\n            upperBound = currentT;\n        }\n        else {\n            lowerBound = currentT;\n        }\n    } while (Math.abs(currentX) > subdivisionPrecision &&\n        ++i < subdivisionMaxIterations);\n    return currentT;\n}\nfunction cubicBezier(mX1, mY1, mX2, mY2) {\n    // If this is a linear gradient, return linear easing\n    if (mX1 === mY1 && mX2 === mY2)\n        return noop;\n    const getTForX = (aX) => binarySubdivide(aX, 0, 1, mX1, mX2);\n    // If animation is at start/end, return t without easing\n    return (t) => t === 0 || t === 1 ? t : calcBezier(getTForX(t), mY1, mY2);\n}\n\nexport { cubicBezier };\n","import { cubicBezier } from './cubic-bezier.mjs';\n\nconst easeIn = /*@__PURE__*/ cubicBezier(0.42, 0, 1, 1);\nconst easeOut = /*@__PURE__*/ cubicBezier(0, 0, 0.58, 1);\nconst easeInOut = /*@__PURE__*/ cubicBezier(0.42, 0, 0.58, 1);\n\nexport { easeIn, easeInOut, easeOut };\n","// Accepts an easing function and returns a new one that outputs mirrored values for\n// the second half of the animation. Turns easeIn into easeInOut.\nconst mirrorEasing = (easing) => (p) => p <= 0.5 ? easing(2 * p) / 2 : (2 - easing(2 * (1 - p))) / 2;\n\nexport { mirrorEasing };\n","// Accepts an easing function and returns a new one that outputs reversed values.\n// Turns easeIn into easeOut.\nconst reverseEasing = (easing) => (p) => 1 - easing(1 - p);\n\nexport { reverseEasing };\n","import { cubicBezier } from './cubic-bezier.mjs';\nimport { mirrorEasing } from './modifiers/mirror.mjs';\nimport { reverseEasing } from './modifiers/reverse.mjs';\n\nconst backOut = /*@__PURE__*/ cubicBezier(0.33, 1.53, 0.69, 0.99);\nconst backIn = /*@__PURE__*/ reverseEasing(backOut);\nconst backInOut = /*@__PURE__*/ mirrorEasing(backIn);\n\nexport { backIn, backInOut, backOut };\n","import { backIn } from './back.mjs';\n\nconst anticipate = (p) => (p *= 2) < 1 ? 0.5 * backIn(p) : 0.5 * (2 - Math.pow(2, -10 * (p - 1)));\n\nexport { anticipate };\n","import { mirrorEasing } from './modifiers/mirror.mjs';\nimport { reverseEasing } from './modifiers/reverse.mjs';\n\nconst circIn = (p) => 1 - Math.sin(Math.acos(p));\nconst circOut = reverseEasing(circIn);\nconst circInOut = mirrorEasing(circIn);\n\nexport { circIn, circInOut, circOut };\n","const isBezierDefinition = (easing) => Array.isArray(easing) && typeof easing[0] === \"number\";\n\nexport { isBezierDefinition };\n","import { invariant } from '../../errors.mjs';\nimport { noop } from '../../noop.mjs';\nimport { anticipate } from '../anticipate.mjs';\nimport { backIn, backInOut, backOut } from '../back.mjs';\nimport { circIn, circInOut, circOut } from '../circ.mjs';\nimport { cubicBezier } from '../cubic-bezier.mjs';\nimport { easeIn, easeInOut, easeOut } from '../ease.mjs';\nimport { isBezierDefinition } from './is-bezier-definition.mjs';\n\nconst easingLookup = {\n    linear: noop,\n    easeIn,\n    easeInOut,\n    easeOut,\n    circIn,\n    circInOut,\n    circOut,\n    backIn,\n    backInOut,\n    backOut,\n    anticipate,\n};\nconst isValidEasing = (easing) => {\n    return typeof easing === \"string\";\n};\nconst easingDefinitionToFunction = (definition) => {\n    if (isBezierDefinition(definition)) {\n        // If cubic bezier definition, create bezier curve\n        invariant(definition.length === 4, `Cubic bezier arrays must contain four numerical values.`, \"cubic-bezier-length\");\n        const [x1, y1, x2, y2] = definition;\n        return cubicBezier(x1, y1, x2, y2);\n    }\n    else if (isValidEasing(definition)) {\n        // Else lookup from table\n        invariant(easingLookup[definition] !== undefined, `Invalid easing type '${definition}'`, \"invalid-easing-type\");\n        return easingLookup[definition];\n    }\n    return definition;\n};\n\nexport { easingDefinitionToFunction };\n","/*\n  Progress within given range\n\n  Given a lower limit and an upper limit, we return the progress\n  (expressed as a number 0-1) represented by the given value, and\n  limit that progress to within 0-1.\n\n  @param [number]: Lower limit\n  @param [number]: Upper limit\n  @param [number]: Value to find progress within given range\n  @return [number]: Progress of value within range as expressed 0-1\n*/\n/*#__NO_SIDE_EFFECTS__*/\nconst progress = (from, to, value) => {\n    const toFromDifference = to - from;\n    return toFromDifference === 0 ? 1 : (value - from) / toFromDifference;\n};\n\nexport { progress };\n","import { invariant, clamp, MotionGlobalConfig, noop, pipe, progress } from 'motion-utils';\nimport { mix } from './mix/index.mjs';\n\nfunction createMixers(output, ease, customMixer) {\n    const mixers = [];\n    const mixerFactory = customMixer || MotionGlobalConfig.mix || mix;\n    const numMixers = output.length - 1;\n    for (let i = 0; i < numMixers; i++) {\n        let mixer = mixerFactory(output[i], output[i + 1]);\n        if (ease) {\n            const easingFunction = Array.isArray(ease) ? ease[i] || noop : ease;\n            mixer = pipe(easingFunction, mixer);\n        }\n        mixers.push(mixer);\n    }\n    return mixers;\n}\n/**\n * Create a function that maps from a numerical input array to a generic output array.\n *\n * Accepts:\n *   - Numbers\n *   - Colors (hex, hsl, hsla, rgb, rgba)\n *   - Complex (combinations of one or more numbers or strings)\n *\n * ```jsx\n * const mixColor = interpolate([0, 1], ['#fff', '#000'])\n *\n * mixColor(0.5) // 'rgba(128, 128, 128, 1)'\n * ```\n *\n * TODO Revisit this approach once we've moved to data models for values,\n * probably not needed to pregenerate mixer functions.\n *\n * @public\n */\nfunction interpolate(input, output, { clamp: isClamp = true, ease, mixer } = {}) {\n    const inputLength = input.length;\n    invariant(inputLength === output.length, \"Both input and output ranges must be the same length\", \"range-length\");\n    /**\n     * If we're only provided a single input, we can just make a function\n     * that returns the output.\n     */\n    if (inputLength === 1)\n        return () => output[0];\n    if (inputLength === 2 && output[0] === output[1])\n        return () => output[1];\n    const isZeroDeltaRange = input[0] === input[1];\n    // If input runs highest -> lowest, reverse both arrays\n    if (input[0] > input[inputLength - 1]) {\n        input = [...input].reverse();\n        output = [...output].reverse();\n    }\n    const mixers = createMixers(output, ease, mixer);\n    const numMixers = mixers.length;\n    const interpolator = (v) => {\n        if (isZeroDeltaRange && v < input[0])\n            return output[0];\n        let i = 0;\n        if (numMixers > 1) {\n            for (; i < input.length - 2; i++) {\n                if (v < input[i + 1])\n                    break;\n            }\n        }\n        const progressInRange = progress(input[i], input[i + 1], v);\n        return mixers[i](progressInRange);\n    };\n    return isClamp\n        ? (v) => interpolator(clamp(input[0], input[inputLength - 1], v))\n        : interpolator;\n}\n\nexport { interpolate };\n","import { fillOffset } from './fill.mjs';\n\nfunction defaultOffset(arr) {\n    const offset = [0];\n    fillOffset(offset, arr.length - 1);\n    return offset;\n}\n\nexport { defaultOffset };\n","import { progress } from 'motion-utils';\nimport { mixNumber } from '../../../utils/mix/number.mjs';\n\nfunction fillOffset(offset, remaining) {\n    const min = offset[offset.length - 1];\n    for (let i = 1; i <= remaining; i++) {\n        const offsetProgress = progress(0, remaining, i);\n        offset.push(mixNumber(min, 1, offsetProgress));\n    }\n}\n\nexport { fillOffset };\n","import { easeInOut, isEasingArray, easingDefinitionToFunction } from 'motion-utils';\nimport { interpolate } from '../../utils/interpolate.mjs';\nimport { defaultOffset } from '../keyframes/offsets/default.mjs';\nimport { convertOffsetToTimes } from '../keyframes/offsets/time.mjs';\n\nfunction defaultEasing(values, easing) {\n    return values.map(() => easing || easeInOut).splice(0, values.length - 1);\n}\nfunction keyframes({ duration = 300, keyframes: keyframeValues, times, ease = \"easeInOut\", }) {\n    /**\n     * Easing functions can be externally defined as strings. Here we convert them\n     * into actual functions.\n     */\n    const easingFunctions = isEasingArray(ease)\n        ? ease.map(easingDefinitionToFunction)\n        : easingDefinitionToFunction(ease);\n    /**\n     * This is the Iterator-spec return value. We ensure it's mutable rather than using a generator\n     * to reduce GC during animation.\n     */\n    const state = {\n        done: false,\n        value: keyframeValues[0],\n    };\n    /**\n     * Create a times array based on the provided 0-1 offsets\n     */\n    const absoluteTimes = convertOffsetToTimes(\n    // Only use the provided offsets if they're the correct length\n    // TODO Maybe we should warn here if there's a length mismatch\n    times && times.length === keyframeValues.length\n        ? times\n        : defaultOffset(keyframeValues), duration);\n    const mapTimeToKeyframe = interpolate(absoluteTimes, keyframeValues, {\n        ease: Array.isArray(easingFunctions)\n            ? easingFunctions\n            : defaultEasing(keyframeValues, easingFunctions),\n    });\n    return {\n        calculatedDuration: duration,\n        next: (t) => {\n            state.value = mapTimeToKeyframe(t);\n            state.done = t >= duration;\n            return state;\n        },\n    };\n}\n\nexport { defaultEasing, keyframes };\n","const isEasingArray = (ease) => {\n    return Array.isArray(ease) && typeof ease[0] !== \"number\";\n};\n\nexport { isEasingArray };\n","function convertOffsetToTimes(offset, duration) {\n    return offset.map((o) => o * duration);\n}\n\nexport { convertOffsetToTimes };\n","const isNotNull = (value) => value !== null;\nfunction getFinalKeyframe(keyframes, { repeat, repeatType = \"loop\" }, finalKeyframe, speed = 1) {\n    const resolvedKeyframes = keyframes.filter(isNotNull);\n    const useFirstKeyframe = speed < 0 || (repeat && repeatType !== \"loop\" && repeat % 2 === 1);\n    const index = useFirstKeyframe ? 0 : resolvedKeyframes.length - 1;\n    return !index || finalKeyframe === undefined\n        ? resolvedKeyframes[index]\n        : finalKeyframe;\n}\n\nexport { getFinalKeyframe };\n","import { inertia } from '../generators/inertia.mjs';\nimport { keyframes } from '../generators/keyframes.mjs';\nimport { spring } from '../generators/spring/index.mjs';\n\nconst transitionTypeMap = {\n    decay: inertia,\n    inertia,\n    tween: keyframes,\n    keyframes: keyframes,\n    spring,\n};\nfunction replaceTransitionType(transition) {\n    if (typeof transition.type === \"string\") {\n        transition.type = transitionTypeMap[transition.type];\n    }\n}\n\nexport { replaceTransitionType };\n","class WithPromise {\n    constructor() {\n        this.updateFinished();\n    }\n    get finished() {\n        return this._finished;\n    }\n    updateFinished() {\n        this._finished = new Promise((resolve) => {\n            this.resolve = resolve;\n        });\n    }\n    notifyFinished() {\n        this.resolve();\n    }\n    /**\n     * Allows the animation to be awaited.\n     *\n     * @deprecated Use `finished` instead.\n     */\n    then(onResolve, onReject) {\n        return this.finished.then(onResolve, onReject);\n    }\n}\n\nexport { WithPromise };\n","import { invariant, pipe, clamp, millisecondsToSeconds, secondsToMilliseconds } from 'motion-utils';\nimport { time } from '../frameloop/sync-time.mjs';\nimport { activeAnimations } from '../stats/animation-count.mjs';\nimport { mix } from '../utils/mix/index.mjs';\nimport { frameloopDriver } from './drivers/frame.mjs';\nimport { inertia } from './generators/inertia.mjs';\nimport { keyframes } from './generators/keyframes.mjs';\nimport { calcGeneratorDuration } from './generators/utils/calc-duration.mjs';\nimport { getFinalKeyframe } from './keyframes/get-final.mjs';\nimport { replaceTransitionType } from './utils/replace-transition-type.mjs';\nimport { WithPromise } from './utils/WithPromise.mjs';\n\nconst percentToProgress = (percent) => percent / 100;\nclass JSAnimation extends WithPromise {\n    constructor(options) {\n        super();\n        this.state = \"idle\";\n        this.startTime = null;\n        this.isStopped = false;\n        /**\n         * The current time of the animation.\n         */\n        this.currentTime = 0;\n        /**\n         * The time at which the animation was paused.\n         */\n        this.holdTime = null;\n        /**\n         * Playback speed as a factor. 0 would be stopped, -1 reverse and 2 double speed.\n         */\n        this.playbackSpeed = 1;\n        /**\n         * This method is bound to the instance to fix a pattern where\n         * animation.stop is returned as a reference from a useEffect.\n         */\n        this.stop = () => {\n            const { motionValue } = this.options;\n            if (motionValue && motionValue.updatedAt !== time.now()) {\n                this.tick(time.now());\n            }\n            this.isStopped = true;\n            if (this.state === \"idle\")\n                return;\n            this.teardown();\n            this.options.onStop?.();\n        };\n        activeAnimations.mainThread++;\n        this.options = options;\n        this.initAnimation();\n        this.play();\n        if (options.autoplay === false)\n            this.pause();\n    }\n    initAnimation() {\n        const { options } = this;\n        replaceTransitionType(options);\n        const { type = keyframes, repeat = 0, repeatDelay = 0, repeatType, velocity = 0, } = options;\n        let { keyframes: keyframes$1 } = options;\n        const generatorFactory = type || keyframes;\n        if (process.env.NODE_ENV !== \"production\" &&\n            generatorFactory !== keyframes) {\n            invariant(keyframes$1.length <= 2, `Only two keyframes currently supported with spring and inertia animations. Trying to animate ${keyframes$1}`, \"spring-two-frames\");\n        }\n        if (generatorFactory !== keyframes &&\n            typeof keyframes$1[0] !== \"number\") {\n            this.mixKeyframes = pipe(percentToProgress, mix(keyframes$1[0], keyframes$1[1]));\n            keyframes$1 = [0, 100];\n        }\n        const generator = generatorFactory({ ...options, keyframes: keyframes$1 });\n        /**\n         * If we have a mirror repeat type we need to create a second generator that outputs the\n         * mirrored (not reversed) animation and later ping pong between the two generators.\n         */\n        if (repeatType === \"mirror\") {\n            this.mirroredGenerator = generatorFactory({\n                ...options,\n                keyframes: [...keyframes$1].reverse(),\n                velocity: -velocity,\n            });\n        }\n        /**\n         * If duration is undefined and we have repeat options,\n         * we need to calculate a duration from the generator.\n         *\n         * We set it to the generator itself to cache the duration.\n         * Any timeline resolver will need to have already precalculated\n         * the duration by this step.\n         */\n        if (generator.calculatedDuration === null) {\n            generator.calculatedDuration = calcGeneratorDuration(generator);\n        }\n        const { calculatedDuration } = generator;\n        this.calculatedDuration = calculatedDuration;\n        this.resolvedDuration = calculatedDuration + repeatDelay;\n        this.totalDuration = this.resolvedDuration * (repeat + 1) - repeatDelay;\n        this.generator = generator;\n    }\n    updateTime(timestamp) {\n        const animationTime = Math.round(timestamp - this.startTime) * this.playbackSpeed;\n        // Update currentTime\n        if (this.holdTime !== null) {\n            this.currentTime = this.holdTime;\n        }\n        else {\n            // Rounding the time because floating point arithmetic is not always accurate, e.g. 3000.367 - 1000.367 =\n            // 2000.0000000000002. This is a problem when we are comparing the currentTime with the duration, for\n            // example.\n            this.currentTime = animationTime;\n        }\n    }\n    tick(timestamp, sample = false) {\n        const { generator, totalDuration, mixKeyframes, mirroredGenerator, resolvedDuration, calculatedDuration, } = this;\n        if (this.startTime === null)\n            return generator.next(0);\n        const { delay = 0, keyframes, repeat, repeatType, repeatDelay, type, onUpdate, finalKeyframe, } = this.options;\n        /**\n         * requestAnimationFrame timestamps can come through as lower than\n         * the startTime as set by performance.now(). Here we prevent this,\n         * though in the future it could be possible to make setting startTime\n         * a pending operation that gets resolved here.\n         */\n        if (this.speed > 0) {\n            this.startTime = Math.min(this.startTime, timestamp);\n        }\n        else if (this.speed < 0) {\n            this.startTime = Math.min(timestamp - totalDuration / this.speed, this.startTime);\n        }\n        if (sample) {\n            this.currentTime = timestamp;\n        }\n        else {\n            this.updateTime(timestamp);\n        }\n        // Rebase on delay\n        const timeWithoutDelay = this.currentTime - delay * (this.playbackSpeed >= 0 ? 1 : -1);\n        const isInDelayPhase = this.playbackSpeed >= 0\n            ? timeWithoutDelay < 0\n            : timeWithoutDelay > totalDuration;\n        this.currentTime = Math.max(timeWithoutDelay, 0);\n        // If this animation has finished, set the current time  to the total duration.\n        if (this.state === \"finished\" && this.holdTime === null) {\n            this.currentTime = totalDuration;\n        }\n        let elapsed = this.currentTime;\n        let frameGenerator = generator;\n        if (repeat) {\n            /**\n             * Get the current progress (0-1) of the animation. If t is >\n             * than duration we'll get values like 2.5 (midway through the\n             * third iteration)\n             */\n            const progress = Math.min(this.currentTime, totalDuration) / resolvedDuration;\n            /**\n             * Get the current iteration (0 indexed). For instance the floor of\n             * 2.5 is 2.\n             */\n            let currentIteration = Math.floor(progress);\n            /**\n             * Get the current progress of the iteration by taking the remainder\n             * so 2.5 is 0.5 through iteration 2\n             */\n            let iterationProgress = progress % 1.0;\n            /**\n             * If iteration progress is 1 we count that as the end\n             * of the previous iteration.\n             */\n            if (!iterationProgress && progress >= 1) {\n                iterationProgress = 1;\n            }\n            iterationProgress === 1 && currentIteration--;\n            currentIteration = Math.min(currentIteration, repeat + 1);\n            /**\n             * Reverse progress if we're not running in \"normal\" direction\n             */\n            const isOddIteration = Boolean(currentIteration % 2);\n            if (isOddIteration) {\n                if (repeatType === \"reverse\") {\n                    iterationProgress = 1 - iterationProgress;\n                    if (repeatDelay) {\n                        iterationProgress -= repeatDelay / resolvedDuration;\n                    }\n                }\n                else if (repeatType === \"mirror\") {\n                    frameGenerator = mirroredGenerator;\n                }\n            }\n            elapsed = clamp(0, 1, iterationProgress) * resolvedDuration;\n        }\n        /**\n         * If we're in negative time, set state as the initial keyframe.\n         * This prevents delay: x, duration: 0 animations from finishing\n         * instantly.\n         */\n        const state = isInDelayPhase\n            ? { done: false, value: keyframes[0] }\n            : frameGenerator.next(elapsed);\n        if (mixKeyframes) {\n            state.value = mixKeyframes(state.value);\n        }\n        let { done } = state;\n        if (!isInDelayPhase && calculatedDuration !== null) {\n            done =\n                this.playbackSpeed >= 0\n                    ? this.currentTime >= totalDuration\n                    : this.currentTime <= 0;\n        }\n        const isAnimationFinished = this.holdTime === null &&\n            (this.state === \"finished\" || (this.state === \"running\" && done));\n        // TODO: The exception for inertia could be cleaner here\n        if (isAnimationFinished && type !== inertia) {\n            state.value = getFinalKeyframe(keyframes, this.options, finalKeyframe, this.speed);\n        }\n        if (onUpdate) {\n            onUpdate(state.value);\n        }\n        if (isAnimationFinished) {\n            this.finish();\n        }\n        return state;\n    }\n    /**\n     * Allows the returned animation to be awaited or promise-chained. Currently\n     * resolves when the animation finishes at all but in a future update could/should\n     * reject if its cancels.\n     */\n    then(resolve, reject) {\n        return this.finished.then(resolve, reject);\n    }\n    get duration() {\n        return millisecondsToSeconds(this.calculatedDuration);\n    }\n    get time() {\n        return millisecondsToSeconds(this.currentTime);\n    }\n    set time(newTime) {\n        newTime = secondsToMilliseconds(newTime);\n        this.currentTime = newTime;\n        if (this.startTime === null ||\n            this.holdTime !== null ||\n            this.playbackSpeed === 0) {\n            this.holdTime = newTime;\n        }\n        else if (this.driver) {\n            this.startTime = this.driver.now() - newTime / this.playbackSpeed;\n        }\n        this.driver?.start(false);\n    }\n    get speed() {\n        return this.playbackSpeed;\n    }\n    set speed(newSpeed) {\n        this.updateTime(time.now());\n        const hasChanged = this.playbackSpeed !== newSpeed;\n        this.playbackSpeed = newSpeed;\n        if (hasChanged) {\n            this.time = millisecondsToSeconds(this.currentTime);\n        }\n    }\n    play() {\n        if (this.isStopped)\n            return;\n        const { driver = frameloopDriver, startTime } = this.options;\n        if (!this.driver) {\n            this.driver = driver((timestamp) => this.tick(timestamp));\n        }\n        this.options.onPlay?.();\n        const now = this.driver.now();\n        if (this.state === \"finished\") {\n            this.updateFinished();\n            this.startTime = now;\n        }\n        else if (this.holdTime !== null) {\n            this.startTime = now - this.holdTime;\n        }\n        else if (!this.startTime) {\n            this.startTime = startTime ?? now;\n        }\n        if (this.state === \"finished\" && this.speed < 0) {\n            this.startTime += this.calculatedDuration;\n        }\n        this.holdTime = null;\n        /**\n         * Set playState to running only after we've used it in\n         * the previous logic.\n         */\n        this.state = \"running\";\n        this.driver.start();\n    }\n    pause() {\n        this.state = \"paused\";\n        this.updateTime(time.now());\n        this.holdTime = this.currentTime;\n    }\n    complete() {\n        if (this.state !== \"running\") {\n            this.play();\n        }\n        this.state = \"finished\";\n        this.holdTime = null;\n    }\n    finish() {\n        this.notifyFinished();\n        this.teardown();\n        this.state = \"finished\";\n        this.options.onComplete?.();\n    }\n    cancel() {\n        this.holdTime = null;\n        this.startTime = 0;\n        this.tick(0);\n        this.teardown();\n        this.options.onCancel?.();\n    }\n    teardown() {\n        this.state = \"idle\";\n        this.stopDriver();\n        this.startTime = this.holdTime = null;\n        activeAnimations.mainThread--;\n    }\n    stopDriver() {\n        if (!this.driver)\n            return;\n        this.driver.stop();\n        this.driver = undefined;\n    }\n    sample(sampleTime) {\n        this.startTime = 0;\n        return this.tick(sampleTime, true);\n    }\n    attachTimeline(timeline) {\n        if (this.options.allowFlatten) {\n            this.options.type = \"keyframes\";\n            this.options.ease = \"linear\";\n            this.initAnimation();\n        }\n        this.driver?.stop();\n        return timeline.observe(this);\n    }\n}\n// Legacy function support\nfunction animateValue(options) {\n    return new JSAnimation(options);\n}\n\nexport { JSAnimation, animateValue };\n","/*#__NO_SIDE_EFFECTS__*/\nfunction memo(callback) {\n    let result;\n    return () => {\n        if (result === undefined)\n            result = callback();\n        return result;\n    };\n}\n\nexport { memo };\n","import { memo } from 'motion-utils';\n\nconst supportsScrollTimeline = /* @__PURE__ */ memo(() => window.ScrollTimeline !== undefined);\n\nexport { supportsScrollTimeline };\n","/**\n * Add the ability for test suites to manually set support flags\n * to better test more environments.\n */\nconst supportsFlags = {};\n\nexport { supportsFlags };\n","import { memo } from 'motion-utils';\nimport { supportsFlags } from './flags.mjs';\n\nfunction memoSupports(callback, supportsFlag) {\n    const memoized = memo(callback);\n    return () => supportsFlags[supportsFlag] ?? memoized();\n}\n\nexport { memoSupports };\n","import { memoSupports } from './memo.mjs';\n\nconst supportsLinearEasing = /*@__PURE__*/ memoSupports(() => {\n    try {\n        document\n            .createElement(\"div\")\n            .animate({ opacity: 0 }, { easing: \"linear(0, 1)\" });\n    }\n    catch (e) {\n        return false;\n    }\n    return true;\n}, \"linearEasing\");\n\nexport { supportsLinearEasing };\n","const cubicBezierAsString = ([a, b, c, d]) => `cubic-bezier(${a}, ${b}, ${c}, ${d})`;\n\nexport { cubicBezierAsString };\n","import { cubicBezierAsString } from './cubic-bezier.mjs';\n\nconst supportedWaapiEasing = {\n    linear: \"linear\",\n    ease: \"ease\",\n    easeIn: \"ease-in\",\n    easeOut: \"ease-out\",\n    easeInOut: \"ease-in-out\",\n    circIn: /*@__PURE__*/ cubicBezierAsString([0, 0.65, 0.55, 1]),\n    circOut: /*@__PURE__*/ cubicBezierAsString([0.55, 0, 1, 0.45]),\n    backIn: /*@__PURE__*/ cubicBezierAsString([0.31, 0.01, 0.66, -0.59]),\n    backOut: /*@__PURE__*/ cubicBezierAsString([0.33, 1.53, 0.69, 0.99]),\n};\n\nexport { supportedWaapiEasing };\n","import { isBezierDefinition } from 'motion-utils';\nimport { supportsLinearEasing } from '../../../utils/supports/linear-easing.mjs';\nimport { generateLinearEasing } from '../utils/linear.mjs';\nimport { cubicBezierAsString } from './cubic-bezier.mjs';\nimport { supportedWaapiEasing } from './supported.mjs';\n\nfunction mapEasingToNativeEasing(easing, duration) {\n    if (!easing) {\n        return undefined;\n    }\n    else if (typeof easing === \"function\") {\n        return supportsLinearEasing()\n            ? generateLinearEasing(easing, duration)\n            : \"ease-out\";\n    }\n    else if (isBezierDefinition(easing)) {\n        return cubicBezierAsString(easing);\n    }\n    else if (Array.isArray(easing)) {\n        return easing.map((segmentEasing) => mapEasingToNativeEasing(segmentEasing, duration) ||\n            supportedWaapiEasing.easeOut);\n    }\n    else {\n        return supportedWaapiEasing[easing];\n    }\n}\n\nexport { mapEasingToNativeEasing };\n","import { activeAnimations } from '../../stats/animation-count.mjs';\nimport { statsBuffer } from '../../stats/buffer.mjs';\nimport { mapEasingToNativeEasing } from './easing/map-easing.mjs';\n\nfunction startWaapiAnimation(element, valueName, keyframes, { delay = 0, duration = 300, repeat = 0, repeatType = \"loop\", ease = \"easeOut\", times, } = {}, pseudoElement = undefined) {\n    const keyframeOptions = {\n        [valueName]: keyframes,\n    };\n    if (times)\n        keyframeOptions.offset = times;\n    const easing = mapEasingToNativeEasing(ease, duration);\n    /**\n     * If this is an easing array, apply to keyframes, not animation as a whole\n     */\n    if (Array.isArray(easing))\n        keyframeOptions.easing = easing;\n    if (statsBuffer.value) {\n        activeAnimations.waapi++;\n    }\n    const options = {\n        delay,\n        duration,\n        easing: !Array.isArray(easing) ? easing : \"linear\",\n        fill: \"both\",\n        iterations: repeat + 1,\n        direction: repeatType === \"reverse\" ? \"alternate\" : \"normal\",\n    };\n    if (pseudoElement)\n        options.pseudoElement = pseudoElement;\n    const animation = element.animate(keyframeOptions, options);\n    if (statsBuffer.value) {\n        animation.finished.finally(() => {\n            activeAnimations.waapi--;\n        });\n    }\n    return animation;\n}\n\nexport { startWaapiAnimation };\n","function isGenerator(type) {\n    return typeof type === \"function\" && \"applyToOptions\" in type;\n}\n\nexport { isGenerator };\n","import { invariant, millisecondsToSeconds, secondsToMilliseconds, noop } from 'motion-utils';\nimport { setStyle } from '../render/dom/style-set.mjs';\nimport { supportsScrollTimeline } from '../utils/supports/scroll-timeline.mjs';\nimport { getFinalKeyframe } from './keyframes/get-final.mjs';\nimport { WithPromise } from './utils/WithPromise.mjs';\nimport { startWaapiAnimation } from './waapi/start-waapi-animation.mjs';\nimport { applyGeneratorOptions } from './waapi/utils/apply-generator.mjs';\n\n/**\n * NativeAnimation implements AnimationPlaybackControls for the browser's Web Animations API.\n */\nclass NativeAnimation extends WithPromise {\n    constructor(options) {\n        super();\n        this.finishedTime = null;\n        this.isStopped = false;\n        if (!options)\n            return;\n        const { element, name, keyframes, pseudoElement, allowFlatten = false, finalKeyframe, onComplete, } = options;\n        this.isPseudoElement = Boolean(pseudoElement);\n        this.allowFlatten = allowFlatten;\n        this.options = options;\n        invariant(typeof options.type !== \"string\", `Mini animate() doesn't support \"type\" as a string.`, \"mini-spring\");\n        const transition = applyGeneratorOptions(options);\n        this.animation = startWaapiAnimation(element, name, keyframes, transition, pseudoElement);\n        if (transition.autoplay === false) {\n            this.animation.pause();\n        }\n        this.animation.onfinish = () => {\n            this.finishedTime = this.time;\n            if (!pseudoElement) {\n                const keyframe = getFinalKeyframe(keyframes, this.options, finalKeyframe, this.speed);\n                if (this.updateMotionValue) {\n                    this.updateMotionValue(keyframe);\n                }\n                else {\n                    /**\n                     * If we can, we want to commit the final style as set by the user,\n                     * rather than the computed keyframe value supplied by the animation.\n                     */\n                    setStyle(element, name, keyframe);\n                }\n                this.animation.cancel();\n            }\n            onComplete?.();\n            this.notifyFinished();\n        };\n    }\n    play() {\n        if (this.isStopped)\n            return;\n        this.animation.play();\n        if (this.state === \"finished\") {\n            this.updateFinished();\n        }\n    }\n    pause() {\n        this.animation.pause();\n    }\n    complete() {\n        this.animation.finish?.();\n    }\n    cancel() {\n        try {\n            this.animation.cancel();\n        }\n        catch (e) { }\n    }\n    stop() {\n        if (this.isStopped)\n            return;\n        this.isStopped = true;\n        const { state } = this;\n        if (state === \"idle\" || state === \"finished\") {\n            return;\n        }\n        if (this.updateMotionValue) {\n            this.updateMotionValue();\n        }\n        else {\n            this.commitStyles();\n        }\n        if (!this.isPseudoElement)\n            this.cancel();\n    }\n    /**\n     * WAAPI doesn't natively have any interruption capabilities.\n     *\n     * In this method, we commit styles back to the DOM before cancelling\n     * the animation.\n     *\n     * This is designed to be overridden by NativeAnimationExtended, which\n     * will create a renderless JS animation and sample it twice to calculate\n     * its current value, \"previous\" value, and therefore allow\n     * Motion to also correctly calculate velocity for any subsequent animation\n     * while deferring the commit until the next animation frame.\n     */\n    commitStyles() {\n        if (!this.isPseudoElement) {\n            this.animation.commitStyles?.();\n        }\n    }\n    get duration() {\n        const duration = this.animation.effect?.getComputedTiming?.().duration || 0;\n        return millisecondsToSeconds(Number(duration));\n    }\n    get time() {\n        return millisecondsToSeconds(Number(this.animation.currentTime) || 0);\n    }\n    set time(newTime) {\n        this.finishedTime = null;\n        this.animation.currentTime = secondsToMilliseconds(newTime);\n    }\n    /**\n     * The playback speed of the animation.\n     * 1 = normal speed, 2 = double speed, 0.5 = half speed.\n     */\n    get speed() {\n        return this.animation.playbackRate;\n    }\n    set speed(newSpeed) {\n        // Allow backwards playback after finishing\n        if (newSpeed < 0)\n            this.finishedTime = null;\n        this.animation.playbackRate = newSpeed;\n    }\n    get state() {\n        return this.finishedTime !== null\n            ? \"finished\"\n            : this.animation.playState;\n    }\n    get startTime() {\n        return Number(this.animation.startTime);\n    }\n    set startTime(newStartTime) {\n        this.animation.startTime = newStartTime;\n    }\n    /**\n     * Attaches a timeline to the animation, for instance the `ScrollTimeline`.\n     */\n    attachTimeline({ timeline, observe }) {\n        if (this.allowFlatten) {\n            this.animation.effect?.updateTiming({ easing: \"linear\" });\n        }\n        this.animation.onfinish = null;\n        if (timeline && supportsScrollTimeline()) {\n            this.animation.timeline = timeline;\n            return noop;\n        }\n        else {\n            return observe(this);\n        }\n    }\n}\n\nexport { NativeAnimation };\n","import { supportsLinearEasing } from '../../../utils/supports/linear-easing.mjs';\nimport { isGenerator } from '../../generators/utils/is-generator.mjs';\n\nfunction applyGeneratorOptions({ type, ...options }) {\n    if (isGenerator(type) && supportsLinearEasing()) {\n        return type.applyToOptions(options);\n    }\n    else {\n        options.duration ?? (options.duration = 300);\n        options.ease ?? (options.ease = \"easeOut\");\n    }\n    return options;\n}\n\nexport { applyGeneratorOptions };\n","import { isCSSVar } from './is-css-var.mjs';\n\nfunction setStyle(element, name, value) {\n    isCSSVar(name)\n        ? element.style.setProperty(name, value)\n        : (element.style[name] = value);\n}\n\nexport { setStyle };\n","const isCSSVar = (name) => name.startsWith(\"--\");\n\nexport { isCSSVar };\n","import { anticipate, backInOut, circInOut } from 'motion-utils';\n\nconst unsupportedEasingFunctions = {\n    anticipate,\n    backInOut,\n    circInOut,\n};\nfunction isUnsupportedEase(key) {\n    return key in unsupportedEasingFunctions;\n}\nfunction replaceStringEasing(transition) {\n    if (typeof transition.ease === \"string\" &&\n        isUnsupportedEase(transition.ease)) {\n        transition.ease = unsupportedEasingFunctions[transition.ease];\n    }\n}\n\nexport { replaceStringEasing };\n","import { secondsToMilliseconds } from 'motion-utils';\nimport { JSAnimation } from './JSAnimation.mjs';\nimport { NativeAnimation } from './NativeAnimation.mjs';\nimport { replaceTransitionType } from './utils/replace-transition-type.mjs';\nimport { replaceStringEasing } from './waapi/utils/unsupported-easing.mjs';\n\n/**\n * 10ms is chosen here as it strikes a balance between smooth\n * results (more than one keyframe per frame at 60fps) and\n * keyframe quantity.\n */\nconst sampleDelta = 10; //ms\nclass NativeAnimationExtended extends NativeAnimation {\n    constructor(options) {\n        /**\n         * The base NativeAnimation function only supports a subset\n         * of Motion easings, and WAAPI also only supports some\n         * easing functions via string/cubic-bezier definitions.\n         *\n         * This function replaces those unsupported easing functions\n         * with a JS easing function. This will later get compiled\n         * to a linear() easing function.\n         */\n        replaceStringEasing(options);\n        /**\n         * Ensure we replace the transition type with a generator function\n         * before passing to WAAPI.\n         *\n         * TODO: Does this have a better home? It could be shared with\n         * JSAnimation.\n         */\n        replaceTransitionType(options);\n        super(options);\n        if (options.startTime) {\n            this.startTime = options.startTime;\n        }\n        this.options = options;\n    }\n    /**\n     * WAAPI doesn't natively have any interruption capabilities.\n     *\n     * Rather than read commited styles back out of the DOM, we can\n     * create a renderless JS animation and sample it twice to calculate\n     * its current value, \"previous\" value, and therefore allow\n     * Motion to calculate velocity for any subsequent animation.\n     */\n    updateMotionValue(value) {\n        const { motionValue, onUpdate, onComplete, element, ...options } = this.options;\n        if (!motionValue)\n            return;\n        if (value !== undefined) {\n            motionValue.set(value);\n            return;\n        }\n        const sampleAnimation = new JSAnimation({\n            ...options,\n            autoplay: false,\n        });\n        const sampleTime = secondsToMilliseconds(this.finishedTime ?? this.time);\n        motionValue.setWithVelocity(sampleAnimation.sample(sampleTime - sampleDelta).value, sampleAnimation.sample(sampleTime).value, sampleDelta);\n        sampleAnimation.stop();\n    }\n}\n\nexport { NativeAnimationExtended };\n","import { complex } from '../../value/types/complex/index.mjs';\n\n/**\n * Check if a value is animatable. Examples:\n *\n * ✅: 100, \"100px\", \"#fff\"\n * ❌: \"block\", \"url(2.jpg)\"\n * @param value\n *\n * @internal\n */\nconst isAnimatable = (value, name) => {\n    // If the list of keys that might be non-animatable grows, replace with Set\n    if (name === \"zIndex\")\n        return false;\n    // If it's a number or a keyframes array, we can animate it. We might at some point\n    // need to do a deep isAnimatable check of keyframes, or let Popmotion handle this,\n    // but for now lets leave it like this for performance reasons\n    if (typeof value === \"number\" || Array.isArray(value))\n        return true;\n    if (typeof value === \"string\" && // It's animatable if we have a string\n        (complex.test(value) || value === \"0\") && // And it contains numbers and/or colors\n        !value.startsWith(\"url(\") // Unless it starts with \"url(\"\n    ) {\n        return true;\n    }\n    return false;\n};\n\nexport { isAnimatable };\n","import { memo } from 'motion-utils';\n\n/**\n * A list of values that can be hardware-accelerated.\n */\nconst acceleratedValues = new Set([\n    \"opacity\",\n    \"clipPath\",\n    \"filter\",\n    \"transform\",\n    // TODO: Could be re-enabled now we have support for linear() easing\n    // \"background-color\"\n]);\nconst supportsWaapi = /*@__PURE__*/ memo(() => Object.hasOwnProperty.call(Element.prototype, \"animate\"));\nfunction supportsBrowserAnimation(options) {\n    const { motionValue, name, repeatDelay, repeatType, damping, type } = options;\n    const subject = motionValue?.owner?.current;\n    /**\n     * We use this check instead of isHTMLElement() because we explicitly\n     * **don't** want elements in different timing contexts (i.e. popups)\n     * to be accelerated, as it's not possible to sync these animations\n     * properly with those driven from the main window frameloop.\n     */\n    if (!(subject instanceof HTMLElement)) {\n        return false;\n    }\n    const { onUpdate, transformTemplate } = motionValue.owner.getProps();\n    return (supportsWaapi() &&\n        name &&\n        acceleratedValues.has(name) &&\n        (name !== \"transform\" || !transformTemplate) &&\n        /**\n         * If we're outputting values to onUpdate then we can't use WAAPI as there's\n         * no way to read the value from WAAPI every frame.\n         */\n        !onUpdate &&\n        !repeatDelay &&\n        repeatType !== \"mirror\" &&\n        damping !== 0 &&\n        type !== \"inertia\");\n}\n\nexport { supportsBrowserAnimation };\n","import { MotionGlobalConfig, noop } from 'motion-utils';\nimport { time } from '../frameloop/sync-time.mjs';\nimport { JSAnimation } from './JSAnimation.mjs';\nimport { getFinalKeyframe } from './keyframes/get-final.mjs';\nimport { KeyframeResolver, flushKeyframeResolvers } from './keyframes/KeyframesResolver.mjs';\nimport { NativeAnimationExtended } from './NativeAnimationExtended.mjs';\nimport { canAnimate } from './utils/can-animate.mjs';\nimport { WithPromise } from './utils/WithPromise.mjs';\nimport { supportsBrowserAnimation } from './waapi/supports/waapi.mjs';\n\n/**\n * Maximum time allowed between an animation being created and it being\n * resolved for us to use the latter as the start time.\n *\n * This is to ensure that while we prefer to \"start\" an animation as soon\n * as it's triggered, we also want to avoid a visual jump if there's a big delay\n * between these two moments.\n */\nconst MAX_RESOLVE_DELAY = 40;\nclass AsyncMotionValueAnimation extends WithPromise {\n    constructor({ autoplay = true, delay = 0, type = \"keyframes\", repeat = 0, repeatDelay = 0, repeatType = \"loop\", keyframes, name, motionValue, element, ...options }) {\n        super();\n        /**\n         * Bound to support return animation.stop pattern\n         */\n        this.stop = () => {\n            if (this._animation) {\n                this._animation.stop();\n                this.stopTimeline?.();\n            }\n            this.keyframeResolver?.cancel();\n        };\n        this.createdAt = time.now();\n        const optionsWithDefaults = {\n            autoplay,\n            delay,\n            type,\n            repeat,\n            repeatDelay,\n            repeatType,\n            name,\n            motionValue,\n            element,\n            ...options,\n        };\n        const KeyframeResolver$1 = element?.KeyframeResolver || KeyframeResolver;\n        this.keyframeResolver = new KeyframeResolver$1(keyframes, (resolvedKeyframes, finalKeyframe, forced) => this.onKeyframesResolved(resolvedKeyframes, finalKeyframe, optionsWithDefaults, !forced), name, motionValue, element);\n        this.keyframeResolver?.scheduleResolve();\n    }\n    onKeyframesResolved(keyframes, finalKeyframe, options, sync) {\n        this.keyframeResolver = undefined;\n        const { name, type, velocity, delay, isHandoff, onUpdate } = options;\n        this.resolvedAt = time.now();\n        /**\n         * If we can't animate this value with the resolved keyframes\n         * then we should complete it immediately.\n         */\n        if (!canAnimate(keyframes, name, type, velocity)) {\n            if (MotionGlobalConfig.instantAnimations || !delay) {\n                onUpdate?.(getFinalKeyframe(keyframes, options, finalKeyframe));\n            }\n            keyframes[0] = keyframes[keyframes.length - 1];\n            options.duration = 0;\n            options.repeat = 0;\n        }\n        /**\n         * Resolve startTime for the animation.\n         *\n         * This method uses the createdAt and resolvedAt to calculate the\n         * animation startTime. *Ideally*, we would use the createdAt time as t=0\n         * as the following frame would then be the first frame of the animation in\n         * progress, which would feel snappier.\n         *\n         * However, if there's a delay (main thread work) between the creation of\n         * the animation and the first commited frame, we prefer to use resolvedAt\n         * to avoid a sudden jump into the animation.\n         */\n        const startTime = sync\n            ? !this.resolvedAt\n                ? this.createdAt\n                : this.resolvedAt - this.createdAt > MAX_RESOLVE_DELAY\n                    ? this.resolvedAt\n                    : this.createdAt\n            : undefined;\n        const resolvedOptions = {\n            startTime,\n            finalKeyframe,\n            ...options,\n            keyframes,\n        };\n        /**\n         * Animate via WAAPI if possible. If this is a handoff animation, the optimised animation will be running via\n         * WAAPI. Therefore, this animation must be JS to ensure it runs \"under\" the\n         * optimised animation.\n         */\n        const animation = !isHandoff && supportsBrowserAnimation(resolvedOptions)\n            ? new NativeAnimationExtended({\n                ...resolvedOptions,\n                element: resolvedOptions.motionValue.owner.current,\n            })\n            : new JSAnimation(resolvedOptions);\n        animation.finished.then(() => this.notifyFinished()).catch(noop);\n        if (this.pendingTimeline) {\n            this.stopTimeline = animation.attachTimeline(this.pendingTimeline);\n            this.pendingTimeline = undefined;\n        }\n        this._animation = animation;\n    }\n    get finished() {\n        if (!this._animation) {\n            return this._finished;\n        }\n        else {\n            return this.animation.finished;\n        }\n    }\n    then(onResolve, _onReject) {\n        return this.finished.finally(onResolve).then(() => { });\n    }\n    get animation() {\n        if (!this._animation) {\n            this.keyframeResolver?.resume();\n            flushKeyframeResolvers();\n        }\n        return this._animation;\n    }\n    get duration() {\n        return this.animation.duration;\n    }\n    get time() {\n        return this.animation.time;\n    }\n    set time(newTime) {\n        this.animation.time = newTime;\n    }\n    get speed() {\n        return this.animation.speed;\n    }\n    get state() {\n        return this.animation.state;\n    }\n    set speed(newSpeed) {\n        this.animation.speed = newSpeed;\n    }\n    get startTime() {\n        return this.animation.startTime;\n    }\n    attachTimeline(timeline) {\n        if (this._animation) {\n            this.stopTimeline = this.animation.attachTimeline(timeline);\n        }\n        else {\n            this.pendingTimeline = timeline;\n        }\n        return () => this.stop();\n    }\n    play() {\n        this.animation.play();\n    }\n    pause() {\n        this.animation.pause();\n    }\n    complete() {\n        this.animation.complete();\n    }\n    cancel() {\n        if (this._animation) {\n            this.animation.cancel();\n        }\n        this.keyframeResolver?.cancel();\n    }\n}\n\nexport { AsyncMotionValueAnimation };\n","import { warning } from 'motion-utils';\nimport { isGenerator } from '../generators/utils/is-generator.mjs';\nimport { isAnimatable } from './is-animatable.mjs';\n\nfunction hasKeyframesChanged(keyframes) {\n    const current = keyframes[0];\n    if (keyframes.length === 1)\n        return true;\n    for (let i = 0; i < keyframes.length; i++) {\n        if (keyframes[i] !== current)\n            return true;\n    }\n}\nfunction canAnimate(keyframes, name, type, velocity) {\n    /**\n     * Check if we're able to animate between the start and end keyframes,\n     * and throw a warning if we're attempting to animate between one that's\n     * animatable and another that isn't.\n     */\n    const originKeyframe = keyframes[0];\n    if (originKeyframe === null)\n        return false;\n    /**\n     * These aren't traditionally animatable but we do support them.\n     * In future we could look into making this more generic or replacing\n     * this function with mix() === mixImmediate\n     */\n    if (name === \"display\" || name === \"visibility\")\n        return true;\n    const targetKeyframe = keyframes[keyframes.length - 1];\n    const isOriginAnimatable = isAnimatable(originKeyframe, name);\n    const isTargetAnimatable = isAnimatable(targetKeyframe, name);\n    warning(isOriginAnimatable === isTargetAnimatable, `You are trying to animate ${name} from \"${originKeyframe}\" to \"${targetKeyframe}\". \"${isOriginAnimatable ? targetKeyframe : originKeyframe}\" is not an animatable value.`, \"value-not-animatable\");\n    // Always skip if any of these are true\n    if (!isOriginAnimatable || !isTargetAnimatable) {\n        return false;\n    }\n    return (hasKeyframesChanged(keyframes) ||\n        ((type === \"spring\" || isGenerator(type)) && velocity));\n}\n\nexport { canAnimate };\n","const isNotNull = (value) => value !== null;\nfunction getFinalKeyframe(keyframes, { repeat, repeatType = \"loop\" }, finalKeyframe) {\n    const resolvedKeyframes = keyframes.filter(isNotNull);\n    const index = repeat && repeatType !== \"loop\" && repeat % 2 === 1\n        ? 0\n        : resolvedKeyframes.length - 1;\n    return !index || finalKeyframe === undefined\n        ? resolvedKeyframes[index]\n        : finalKeyframe;\n}\n\nexport { getFinalKeyframe };\n","import { transformProps } from 'motion-dom';\n\nconst underDampedSpring = {\n    type: \"spring\",\n    stiffness: 500,\n    damping: 25,\n    restSpeed: 10,\n};\nconst criticallyDampedSpring = (target) => ({\n    type: \"spring\",\n    stiffness: 550,\n    damping: target === 0 ? 2 * Math.sqrt(550) : 30,\n    restSpeed: 10,\n});\nconst keyframesTransition = {\n    type: \"keyframes\",\n    duration: 0.8,\n};\n/**\n * Default easing curve is a slightly shallower version of\n * the default browser easing curve.\n */\nconst ease = {\n    type: \"keyframes\",\n    ease: [0.25, 0.1, 0.35, 1],\n    duration: 0.3,\n};\nconst getDefaultTransition = (valueKey, { keyframes }) => {\n    if (keyframes.length > 2) {\n        return keyframesTransition;\n    }\n    else if (transformProps.has(valueKey)) {\n        return valueKey.startsWith(\"scale\")\n            ? criticallyDampedSpring(keyframes[1])\n            : underDampedSpring;\n    }\n    return ease;\n};\n\nexport { getDefaultTransition };\n","import { getValueTransition, frame, JSAnimation, AsyncMotionValueAnimation } from 'motion-dom';\nimport { secondsToMilliseconds, MotionGlobalConfig } from 'motion-utils';\nimport { getFinalKeyframe } from '../animators/waapi/utils/get-final-keyframe.mjs';\nimport { getDefaultTransition } from '../utils/default-transitions.mjs';\nimport { isTransitionDefined } from '../utils/is-transition-defined.mjs';\n\nconst animateMotionValue = (name, value, target, transition = {}, element, isHandoff) => (onComplete) => {\n    const valueTransition = getValueTransition(transition, name) || {};\n    /**\n     * Most transition values are currently completely overwritten by value-specific\n     * transitions. In the future it'd be nicer to blend these transitions. But for now\n     * delay actually does inherit from the root transition if not value-specific.\n     */\n    const delay = valueTransition.delay || transition.delay || 0;\n    /**\n     * Elapsed isn't a public transition option but can be passed through from\n     * optimized appear effects in milliseconds.\n     */\n    let { elapsed = 0 } = transition;\n    elapsed = elapsed - secondsToMilliseconds(delay);\n    const options = {\n        keyframes: Array.isArray(target) ? target : [null, target],\n        ease: \"easeOut\",\n        velocity: value.getVelocity(),\n        ...valueTransition,\n        delay: -elapsed,\n        onUpdate: (v) => {\n            value.set(v);\n            valueTransition.onUpdate && valueTransition.onUpdate(v);\n        },\n        onComplete: () => {\n            onComplete();\n            valueTransition.onComplete && valueTransition.onComplete();\n        },\n        name,\n        motionValue: value,\n        element: isHandoff ? undefined : element,\n    };\n    /**\n     * If there's no transition defined for this value, we can generate\n     * unique transition settings for this value.\n     */\n    if (!isTransitionDefined(valueTransition)) {\n        Object.assign(options, getDefaultTransition(name, options));\n    }\n    /**\n     * Both WAAPI and our internal animation functions use durations\n     * as defined by milliseconds, while our external API defines them\n     * as seconds.\n     */\n    options.duration && (options.duration = secondsToMilliseconds(options.duration));\n    options.repeatDelay && (options.repeatDelay = secondsToMilliseconds(options.repeatDelay));\n    /**\n     * Support deprecated way to set initial value. Prefer keyframe syntax.\n     */\n    if (options.from !== undefined) {\n        options.keyframes[0] = options.from;\n    }\n    let shouldSkip = false;\n    if (options.type === false ||\n        (options.duration === 0 && !options.repeatDelay)) {\n        options.duration = 0;\n        if (options.delay === 0) {\n            shouldSkip = true;\n        }\n    }\n    if (MotionGlobalConfig.instantAnimations ||\n        MotionGlobalConfig.skipAnimations) {\n        shouldSkip = true;\n        options.duration = 0;\n        options.delay = 0;\n    }\n    /**\n     * If the transition type or easing has been explicitly set by the user\n     * then we don't want to allow flattening the animation.\n     */\n    options.allowFlatten = !valueTransition.type && !valueTransition.ease;\n    /**\n     * If we can or must skip creating the animation, and apply only\n     * the final keyframe, do so. We also check once keyframes are resolved but\n     * this early check prevents the need to create an animation at all.\n     */\n    if (shouldSkip && !isHandoff && value.get() !== undefined) {\n        const finalKeyframe = getFinalKeyframe(options.keyframes, valueTransition);\n        if (finalKeyframe !== undefined) {\n            frame.update(() => {\n                options.onUpdate(finalKeyframe);\n                options.onComplete();\n            });\n            return;\n        }\n    }\n    return valueTransition.isSync\n        ? new JSAnimation(options)\n        : new AsyncMotionValueAnimation(options);\n};\n\nexport { animateMotionValue };\n","/**\n * Decide whether a transition is defined on a given Transition.\n * This filters out orchestration options and returns true\n * if any options are left.\n */\nfunction isTransitionDefined({ when, delay: _delay, delayChildren, staggerChildren, staggerDirection, repeat, repeatType, repeatDelay, from, elapsed, ...transition }) {\n    return !!Object.keys(transition).length;\n}\n\nexport { isTransitionDefined };\n","import { getValueTransition, frame, positionalKeys } from 'motion-dom';\nimport { setTarget } from '../../render/utils/setters.mjs';\nimport { addValueToWillChange } from '../../value/use-will-change/add-will-change.mjs';\nimport { getOptimisedAppearId } from '../optimized-appear/get-appear-id.mjs';\nimport { animateMotionValue } from './motion-value.mjs';\n\n/**\n * Decide whether we should block this animation. Previously, we achieved this\n * just by checking whether the key was listed in protectedKeys, but this\n * posed problems if an animation was triggered by afterChildren and protectedKeys\n * had been set to true in the meantime.\n */\nfunction shouldBlockAnimation({ protectedKeys, needsAnimating }, key) {\n    const shouldBlock = protectedKeys.hasOwnProperty(key) && needsAnimating[key] !== true;\n    needsAnimating[key] = false;\n    return shouldBlock;\n}\nfunction animateTarget(visualElement, targetAndTransition, { delay = 0, transitionOverride, type } = {}) {\n    let { transition = visualElement.getDefaultTransition(), transitionEnd, ...target } = targetAndTransition;\n    if (transitionOverride)\n        transition = transitionOverride;\n    const animations = [];\n    const animationTypeState = type &&\n        visualElement.animationState &&\n        visualElement.animationState.getState()[type];\n    for (const key in target) {\n        const value = visualElement.getValue(key, visualElement.latestValues[key] ?? null);\n        const valueTarget = target[key];\n        if (valueTarget === undefined ||\n            (animationTypeState &&\n                shouldBlockAnimation(animationTypeState, key))) {\n            continue;\n        }\n        const valueTransition = {\n            delay,\n            ...getValueTransition(transition || {}, key),\n        };\n        /**\n         * If the value is already at the defined target, skip the animation.\n         */\n        const currentValue = value.get();\n        if (currentValue !== undefined &&\n            !value.isAnimating &&\n            !Array.isArray(valueTarget) &&\n            valueTarget === currentValue &&\n            !valueTransition.velocity) {\n            continue;\n        }\n        /**\n         * If this is the first time a value is being animated, check\n         * to see if we're handling off from an existing animation.\n         */\n        let isHandoff = false;\n        if (window.MotionHandoffAnimation) {\n            const appearId = getOptimisedAppearId(visualElement);\n            if (appearId) {\n                const startTime = window.MotionHandoffAnimation(appearId, key, frame);\n                if (startTime !== null) {\n                    valueTransition.startTime = startTime;\n                    isHandoff = true;\n                }\n            }\n        }\n        addValueToWillChange(visualElement, key);\n        value.start(animateMotionValue(key, value, valueTarget, visualElement.shouldReduceMotion && positionalKeys.has(key)\n            ? { type: false }\n            : valueTransition, visualElement, isHandoff));\n        const animation = value.animation;\n        if (animation) {\n            animations.push(animation);\n        }\n    }\n    if (transitionEnd) {\n        Promise.all(animations).then(() => {\n            frame.update(() => {\n                transitionEnd && setTarget(visualElement, transitionEnd);\n            });\n        });\n    }\n    return animations;\n}\n\nexport { animateTarget };\n","import { resolveVariant } from '../../render/utils/resolve-dynamic-variants.mjs';\nimport { animateTarget } from './visual-element-target.mjs';\n\nfunction animateVariant(visualElement, variant, options = {}) {\n    const resolved = resolveVariant(visualElement, variant, options.type === \"exit\"\n        ? visualElement.presenceContext?.custom\n        : undefined);\n    let { transition = visualElement.getDefaultTransition() || {} } = resolved || {};\n    if (options.transitionOverride) {\n        transition = options.transitionOverride;\n    }\n    /**\n     * If we have a variant, create a callback that runs it as an animation.\n     * Otherwise, we resolve a Promise immediately for a composable no-op.\n     */\n    const getAnimation = resolved\n        ? () => Promise.all(animateTarget(visualElement, resolved, options))\n        : () => Promise.resolve();\n    /**\n     * If we have children, create a callback that runs all their animations.\n     * Otherwise, we resolve a Promise immediately for a composable no-op.\n     */\n    const getChildAnimations = visualElement.variantChildren && visualElement.variantChildren.size\n        ? (forwardDelay = 0) => {\n            const { delayChildren = 0, staggerChildren, staggerDirection, } = transition;\n            return animateChildren(visualElement, variant, forwardDelay, delayChildren, staggerChildren, staggerDirection, options);\n        }\n        : () => Promise.resolve();\n    /**\n     * If the transition explicitly defines a \"when\" option, we need to resolve either\n     * this animation or all children animations before playing the other.\n     */\n    const { when } = transition;\n    if (when) {\n        const [first, last] = when === \"beforeChildren\"\n            ? [getAnimation, getChildAnimations]\n            : [getChildAnimations, getAnimation];\n        return first().then(() => last());\n    }\n    else {\n        return Promise.all([getAnimation(), getChildAnimations(options.delay)]);\n    }\n}\nfunction animateChildren(visualElement, variant, delay = 0, delayChildren = 0, staggerChildren = 0, staggerDirection = 1, options) {\n    const animations = [];\n    const numChildren = visualElement.variantChildren.size;\n    const maxStaggerDuration = (numChildren - 1) * staggerChildren;\n    const delayIsFunction = typeof delayChildren === \"function\";\n    const generateStaggerDuration = delayIsFunction\n        ? (i) => delayChildren(i, numChildren)\n        : // Support deprecated staggerChildren\n            staggerDirection === 1\n                ? (i = 0) => i * staggerChildren\n                : (i = 0) => maxStaggerDuration - i * staggerChildren;\n    Array.from(visualElement.variantChildren)\n        .sort(sortByTreeOrder)\n        .forEach((child, i) => {\n        child.notify(\"AnimationStart\", variant);\n        animations.push(animateVariant(child, variant, {\n            ...options,\n            delay: delay +\n                (delayIsFunction ? 0 : delayChildren) +\n                generateStaggerDuration(i),\n        }).then(() => child.notify(\"AnimationComplete\", variant)));\n    });\n    return Promise.all(animations);\n}\nfunction sortByTreeOrder(a, b) {\n    return a.sortNodePosition(b);\n}\n\nexport { animateVariant, sortByTreeOrder };\n","function shallowCompare(next, prev) {\n    if (!Array.isArray(prev))\n        return false;\n    const prevLength = prev.length;\n    if (prevLength !== next.length)\n        return false;\n    for (let i = 0; i < prevLength; i++) {\n        if (prev[i] !== next[i])\n            return false;\n    }\n    return true;\n}\n\nexport { shallowCompare };\n","import { isVariantLabel } from './is-variant-label.mjs';\nimport { variantProps } from './variant-props.mjs';\n\nconst numVariantProps = variantProps.length;\nfunction getVariantContext(visualElement) {\n    if (!visualElement)\n        return undefined;\n    if (!visualElement.isControllingVariants) {\n        const context = visualElement.parent\n            ? getVariantContext(visualElement.parent) || {}\n            : {};\n        if (visualElement.props.initial !== undefined) {\n            context.initial = visualElement.props.initial;\n        }\n        return context;\n    }\n    const context = {};\n    for (let i = 0; i < numVariantProps; i++) {\n        const name = variantProps[i];\n        const prop = visualElement.props[name];\n        if (isVariantLabel(prop) || prop === false) {\n            context[name] = prop;\n        }\n    }\n    return context;\n}\n\nexport { getVariantContext };\n","import { animateVisualElement } from '../../animation/interfaces/visual-element.mjs';\nimport { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { isKeyframesTarget } from '../../animation/utils/is-keyframes-target.mjs';\nimport { shallowCompare } from '../../utils/shallow-compare.mjs';\nimport { getVariantContext } from './get-variant-context.mjs';\nimport { isVariantLabel } from './is-variant-label.mjs';\nimport { resolveVariant } from './resolve-dynamic-variants.mjs';\nimport { variantPriorityOrder } from './variant-props.mjs';\n\nconst reversePriorityOrder = [...variantPriorityOrder].reverse();\nconst numAnimationTypes = variantPriorityOrder.length;\nfunction animateList(visualElement) {\n    return (animations) => Promise.all(animations.map(({ animation, options }) => animateVisualElement(visualElement, animation, options)));\n}\nfunction createAnimationState(visualElement) {\n    let animate = animateList(visualElement);\n    let state = createState();\n    let isInitialRender = true;\n    /**\n     * This function will be used to reduce the animation definitions for\n     * each active animation type into an object of resolved values for it.\n     */\n    const buildResolvedTypeValues = (type) => (acc, definition) => {\n        const resolved = resolveVariant(visualElement, definition, type === \"exit\"\n            ? visualElement.presenceContext?.custom\n            : undefined);\n        if (resolved) {\n            const { transition, transitionEnd, ...target } = resolved;\n            acc = { ...acc, ...target, ...transitionEnd };\n        }\n        return acc;\n    };\n    /**\n     * This just allows us to inject mocked animation functions\n     * @internal\n     */\n    function setAnimateFunction(makeAnimator) {\n        animate = makeAnimator(visualElement);\n    }\n    /**\n     * When we receive new props, we need to:\n     * 1. Create a list of protected keys for each type. This is a directory of\n     *    value keys that are currently being \"handled\" by types of a higher priority\n     *    so that whenever an animation is played of a given type, these values are\n     *    protected from being animated.\n     * 2. Determine if an animation type needs animating.\n     * 3. Determine if any values have been removed from a type and figure out\n     *    what to animate those to.\n     */\n    function animateChanges(changedActiveType) {\n        const { props } = visualElement;\n        const context = getVariantContext(visualElement.parent) || {};\n        /**\n         * A list of animations that we'll build into as we iterate through the animation\n         * types. This will get executed at the end of the function.\n         */\n        const animations = [];\n        /**\n         * Keep track of which values have been removed. Then, as we hit lower priority\n         * animation types, we can check if they contain removed values and animate to that.\n         */\n        const removedKeys = new Set();\n        /**\n         * A dictionary of all encountered keys. This is an object to let us build into and\n         * copy it without iteration. Each time we hit an animation type we set its protected\n         * keys - the keys its not allowed to animate - to the latest version of this object.\n         */\n        let encounteredKeys = {};\n        /**\n         * If a variant has been removed at a given index, and this component is controlling\n         * variant animations, we want to ensure lower-priority variants are forced to animate.\n         */\n        let removedVariantIndex = Infinity;\n        /**\n         * Iterate through all animation types in reverse priority order. For each, we want to\n         * detect which values it's handling and whether or not they've changed (and therefore\n         * need to be animated). If any values have been removed, we want to detect those in\n         * lower priority props and flag for animation.\n         */\n        for (let i = 0; i < numAnimationTypes; i++) {\n            const type = reversePriorityOrder[i];\n            const typeState = state[type];\n            const prop = props[type] !== undefined\n                ? props[type]\n                : context[type];\n            const propIsVariant = isVariantLabel(prop);\n            /**\n             * If this type has *just* changed isActive status, set activeDelta\n             * to that status. Otherwise set to null.\n             */\n            const activeDelta = type === changedActiveType ? typeState.isActive : null;\n            if (activeDelta === false)\n                removedVariantIndex = i;\n            /**\n             * If this prop is an inherited variant, rather than been set directly on the\n             * component itself, we want to make sure we allow the parent to trigger animations.\n             *\n             * TODO: Can probably change this to a !isControllingVariants check\n             */\n            let isInherited = prop === context[type] &&\n                prop !== props[type] &&\n                propIsVariant;\n            /**\n             *\n             */\n            if (isInherited &&\n                isInitialRender &&\n                visualElement.manuallyAnimateOnMount) {\n                isInherited = false;\n            }\n            /**\n             * Set all encountered keys so far as the protected keys for this type. This will\n             * be any key that has been animated or otherwise handled by active, higher-priortiy types.\n             */\n            typeState.protectedKeys = { ...encounteredKeys };\n            // Check if we can skip analysing this prop early\n            if (\n            // If it isn't active and hasn't *just* been set as inactive\n            (!typeState.isActive && activeDelta === null) ||\n                // If we didn't and don't have any defined prop for this animation type\n                (!prop && !typeState.prevProp) ||\n                // Or if the prop doesn't define an animation\n                isAnimationControls(prop) ||\n                typeof prop === \"boolean\") {\n                continue;\n            }\n            /**\n             * As we go look through the values defined on this type, if we detect\n             * a changed value or a value that was removed in a higher priority, we set\n             * this to true and add this prop to the animation list.\n             */\n            const variantDidChange = checkVariantsDidChange(typeState.prevProp, prop);\n            let shouldAnimateType = variantDidChange ||\n                // If we're making this variant active, we want to always make it active\n                (type === changedActiveType &&\n                    typeState.isActive &&\n                    !isInherited &&\n                    propIsVariant) ||\n                // If we removed a higher-priority variant (i is in reverse order)\n                (i > removedVariantIndex && propIsVariant);\n            let handledRemovedValues = false;\n            /**\n             * As animations can be set as variant lists, variants or target objects, we\n             * coerce everything to an array if it isn't one already\n             */\n            const definitionList = Array.isArray(prop) ? prop : [prop];\n            /**\n             * Build an object of all the resolved values. We'll use this in the subsequent\n             * animateChanges calls to determine whether a value has changed.\n             */\n            let resolvedValues = definitionList.reduce(buildResolvedTypeValues(type), {});\n            if (activeDelta === false)\n                resolvedValues = {};\n            /**\n             * Now we need to loop through all the keys in the prev prop and this prop,\n             * and decide:\n             * 1. If the value has changed, and needs animating\n             * 2. If it has been removed, and needs adding to the removedKeys set\n             * 3. If it has been removed in a higher priority type and needs animating\n             * 4. If it hasn't been removed in a higher priority but hasn't changed, and\n             *    needs adding to the type's protectedKeys list.\n             */\n            const { prevResolvedValues = {} } = typeState;\n            const allKeys = {\n                ...prevResolvedValues,\n                ...resolvedValues,\n            };\n            const markToAnimate = (key) => {\n                shouldAnimateType = true;\n                if (removedKeys.has(key)) {\n                    handledRemovedValues = true;\n                    removedKeys.delete(key);\n                }\n                typeState.needsAnimating[key] = true;\n                const motionValue = visualElement.getValue(key);\n                if (motionValue)\n                    motionValue.liveStyle = false;\n            };\n            for (const key in allKeys) {\n                const next = resolvedValues[key];\n                const prev = prevResolvedValues[key];\n                // If we've already handled this we can just skip ahead\n                if (encounteredKeys.hasOwnProperty(key))\n                    continue;\n                /**\n                 * If the value has changed, we probably want to animate it.\n                 */\n                let valueHasChanged = false;\n                if (isKeyframesTarget(next) && isKeyframesTarget(prev)) {\n                    valueHasChanged = !shallowCompare(next, prev);\n                }\n                else {\n                    valueHasChanged = next !== prev;\n                }\n                if (valueHasChanged) {\n                    if (next !== undefined && next !== null) {\n                        // If next is defined and doesn't equal prev, it needs animating\n                        markToAnimate(key);\n                    }\n                    else {\n                        // If it's undefined, it's been removed.\n                        removedKeys.add(key);\n                    }\n                }\n                else if (next !== undefined && removedKeys.has(key)) {\n                    /**\n                     * If next hasn't changed and it isn't undefined, we want to check if it's\n                     * been removed by a higher priority\n                     */\n                    markToAnimate(key);\n                }\n                else {\n                    /**\n                     * If it hasn't changed, we add it to the list of protected values\n                     * to ensure it doesn't get animated.\n                     */\n                    typeState.protectedKeys[key] = true;\n                }\n            }\n            /**\n             * Update the typeState so next time animateChanges is called we can compare the\n             * latest prop and resolvedValues to these.\n             */\n            typeState.prevProp = prop;\n            typeState.prevResolvedValues = resolvedValues;\n            /**\n             *\n             */\n            if (typeState.isActive) {\n                encounteredKeys = { ...encounteredKeys, ...resolvedValues };\n            }\n            if (isInitialRender && visualElement.blockInitialAnimation) {\n                shouldAnimateType = false;\n            }\n            /**\n             * If this is an inherited prop we want to skip this animation\n             * unless the inherited variants haven't changed on this render.\n             */\n            const willAnimateViaParent = isInherited && variantDidChange;\n            const needsAnimating = !willAnimateViaParent || handledRemovedValues;\n            if (shouldAnimateType && needsAnimating) {\n                animations.push(...definitionList.map((animation) => ({\n                    animation: animation,\n                    options: { type },\n                })));\n            }\n        }\n        /**\n         * If there are some removed value that haven't been dealt with,\n         * we need to create a new animation that falls back either to the value\n         * defined in the style prop, or the last read value.\n         */\n        if (removedKeys.size) {\n            const fallbackAnimation = {};\n            /**\n             * If the initial prop contains a transition we can use that, otherwise\n             * allow the animation function to use the visual element's default.\n             */\n            if (typeof props.initial !== \"boolean\") {\n                const initialTransition = resolveVariant(visualElement, Array.isArray(props.initial)\n                    ? props.initial[0]\n                    : props.initial);\n                if (initialTransition && initialTransition.transition) {\n                    fallbackAnimation.transition = initialTransition.transition;\n                }\n            }\n            removedKeys.forEach((key) => {\n                const fallbackTarget = visualElement.getBaseTarget(key);\n                const motionValue = visualElement.getValue(key);\n                if (motionValue)\n                    motionValue.liveStyle = true;\n                // @ts-expect-error - @mattgperry to figure if we should do something here\n                fallbackAnimation[key] = fallbackTarget ?? null;\n            });\n            animations.push({ animation: fallbackAnimation });\n        }\n        let shouldAnimate = Boolean(animations.length);\n        if (isInitialRender &&\n            (props.initial === false || props.initial === props.animate) &&\n            !visualElement.manuallyAnimateOnMount) {\n            shouldAnimate = false;\n        }\n        isInitialRender = false;\n        return shouldAnimate ? animate(animations) : Promise.resolve();\n    }\n    /**\n     * Change whether a certain animation type is active.\n     */\n    function setActive(type, isActive) {\n        // If the active state hasn't changed, we can safely do nothing here\n        if (state[type].isActive === isActive)\n            return Promise.resolve();\n        // Propagate active change to children\n        visualElement.variantChildren?.forEach((child) => child.animationState?.setActive(type, isActive));\n        state[type].isActive = isActive;\n        const animations = animateChanges(type);\n        for (const key in state) {\n            state[key].protectedKeys = {};\n        }\n        return animations;\n    }\n    return {\n        animateChanges,\n        setActive,\n        setAnimateFunction,\n        getState: () => state,\n        reset: () => {\n            state = createState();\n            isInitialRender = true;\n        },\n    };\n}\nfunction checkVariantsDidChange(prev, next) {\n    if (typeof next === \"string\") {\n        return next !== prev;\n    }\n    else if (Array.isArray(next)) {\n        return !shallowCompare(next, prev);\n    }\n    return false;\n}\nfunction createTypeState(isActive = false) {\n    return {\n        isActive,\n        protectedKeys: {},\n        needsAnimating: {},\n        prevResolvedValues: {},\n    };\n}\nfunction createState() {\n    return {\n        animate: createTypeState(true),\n        whileInView: createTypeState(),\n        whileHover: createTypeState(),\n        whileTap: createTypeState(),\n        whileDrag: createTypeState(),\n        whileFocus: createTypeState(),\n        exit: createTypeState(),\n    };\n}\n\nexport { checkVariantsDidChange, createAnimationState };\n","import { resolveVariant } from '../../render/utils/resolve-dynamic-variants.mjs';\nimport { animateTarget } from './visual-element-target.mjs';\nimport { animateVariant } from './visual-element-variant.mjs';\n\nfunction animateVisualElement(visualElement, definition, options = {}) {\n    visualElement.notify(\"AnimationStart\", definition);\n    let animation;\n    if (Array.isArray(definition)) {\n        const animations = definition.map((variant) => animateVariant(visualElement, variant, options));\n        animation = Promise.all(animations);\n    }\n    else if (typeof definition === \"string\") {\n        animation = animateVariant(visualElement, definition, options);\n    }\n    else {\n        const resolvedDefinition = typeof definition === \"function\"\n            ? resolveVariant(visualElement, definition, options.custom)\n            : definition;\n        animation = Promise.all(animateTarget(visualElement, resolvedDefinition, options));\n    }\n    return animation.then(() => {\n        visualElement.notify(\"AnimationComplete\", definition);\n    });\n}\n\nexport { animateVisualElement };\n","class Feature {\n    constructor(node) {\n        this.isMounted = false;\n        this.node = node;\n    }\n    update() { }\n}\n\nexport { Feature };\n","import { Feature } from '../Feature.mjs';\n\nlet id = 0;\nclass ExitAnimationFeature extends Feature {\n    constructor() {\n        super(...arguments);\n        this.id = id++;\n    }\n    update() {\n        if (!this.node.presenceContext)\n            return;\n        const { isPresent, onExitComplete } = this.node.presenceContext;\n        const { isPresent: prevIsPresent } = this.node.prevPresenceContext || {};\n        if (!this.node.animationState || isPresent === prevIsPresent) {\n            return;\n        }\n        const exitAnimation = this.node.animationState.setActive(\"exit\", !isPresent);\n        if (onExitComplete && !isPresent) {\n            exitAnimation.then(() => {\n                onExitComplete(this.id);\n            });\n        }\n    }\n    mount() {\n        const { register, onExitComplete } = this.node.presenceContext || {};\n        if (onExitComplete) {\n            onExitComplete(this.id);\n        }\n        if (register) {\n            this.unmount = register(this.id);\n        }\n    }\n    unmount() { }\n}\n\nexport { ExitAnimationFeature };\n","import { AnimationFeature } from './animation/index.mjs';\nimport { ExitAnimationFeature } from './animation/exit.mjs';\n\nconst animations = {\n    animation: {\n        Feature: AnimationFeature,\n    },\n    exit: {\n        Feature: ExitAnimationFeature,\n    },\n};\n\nexport { animations };\n","import { isAnimationControls } from '../../../animation/utils/is-animation-controls.mjs';\nimport { createAnimationState } from '../../../render/utils/animation-state.mjs';\nimport { Feature } from '../Feature.mjs';\n\nclass AnimationFeature extends Feature {\n    /**\n     * We dynamically generate the AnimationState manager as it contains a reference\n     * to the underlying animation library. We only want to load that if we load this,\n     * so people can optionally code split it out using the `m` component.\n     */\n    constructor(node) {\n        super(node);\n        node.animationState || (node.animationState = createAnimationState(node));\n    }\n    updateAnimationControlsSubscription() {\n        const { animate } = this.node.getProps();\n        if (isAnimationControls(animate)) {\n            this.unmountControls = animate.subscribe(this.node);\n        }\n    }\n    /**\n     * Subscribe any provided AnimationControls to the component's VisualElement\n     */\n    mount() {\n        this.updateAnimationControlsSubscription();\n    }\n    update() {\n        const { animate } = this.node.getProps();\n        const { animate: prevAnimate } = this.node.prevProps || {};\n        if (animate !== prevAnimate) {\n            this.updateAnimationControlsSubscription();\n        }\n    }\n    unmount() {\n        this.node.animationState.reset();\n        this.unmountControls?.();\n    }\n}\n\nexport { AnimationFeature };\n","const isDragging = {\n    x: false,\n    y: false,\n};\nfunction isDragActive() {\n    return isDragging.x || isDragging.y;\n}\n\nexport { isDragActive, isDragging };\n","function addDomEvent(target, eventName, handler, options = { passive: true }) {\n    target.addEventListener(eventName, handler, options);\n    return () => target.removeEventListener(eventName, handler);\n}\n\nexport { addDomEvent };\n","const isPrimaryPointer = (event) => {\n    if (event.pointerType === \"mouse\") {\n        return typeof event.button !== \"number\" || event.button <= 0;\n    }\n    else {\n        /**\n         * isPrimary is true for all mice buttons, whereas every touch point\n         * is regarded as its own input. So subsequent concurrent touch points\n         * will be false.\n         *\n         * Specifically match against false here as incomplete versions of\n         * PointerEvents in very old browser might have it set as undefined.\n         */\n        return event.isPrimary !== false;\n    }\n};\n\nexport { isPrimaryPointer };\n","import { isPrimaryPointer } from 'motion-dom';\n\nfunction extractEventInfo(event) {\n    return {\n        point: {\n            x: event.pageX,\n            y: event.pageY,\n        },\n    };\n}\nconst addPointerInfo = (handler) => {\n    return (event) => isPrimaryPointer(event) && handler(event, extractEventInfo(event));\n};\n\nexport { addPointerInfo, extractEventInfo };\n","import { addDomEvent } from './add-dom-event.mjs';\nimport { addPointerInfo } from './event-info.mjs';\n\nfunction addPointerEvent(target, eventName, handler, options) {\n    return addDomEvent(target, eventName, addPointerInfo(handler), options);\n}\n\nexport { addPointerEvent };\n","import { mixNumber } from 'motion-dom';\n\nconst SCALE_PRECISION = 0.0001;\nconst SCALE_MIN = 1 - SCALE_PRECISION;\nconst SCALE_MAX = 1 + SCALE_PRECISION;\nconst TRANSLATE_PRECISION = 0.01;\nconst TRANSLATE_MIN = 0 - TRANSLATE_PRECISION;\nconst TRANSLATE_MAX = 0 + TRANSLATE_PRECISION;\nfunction calcLength(axis) {\n    return axis.max - axis.min;\n}\nfunction isNear(value, target, maxDistance) {\n    return Math.abs(value - target) <= maxDistance;\n}\nfunction calcAxisDelta(delta, source, target, origin = 0.5) {\n    delta.origin = origin;\n    delta.originPoint = mixNumber(source.min, source.max, delta.origin);\n    delta.scale = calcLength(target) / calcLength(source);\n    delta.translate =\n        mixNumber(target.min, target.max, delta.origin) - delta.originPoint;\n    if ((delta.scale >= SCALE_MIN && delta.scale <= SCALE_MAX) ||\n        isNaN(delta.scale)) {\n        delta.scale = 1.0;\n    }\n    if ((delta.translate >= TRANSLATE_MIN &&\n        delta.translate <= TRANSLATE_MAX) ||\n        isNaN(delta.translate)) {\n        delta.translate = 0.0;\n    }\n}\nfunction calcBoxDelta(delta, source, target, origin) {\n    calcAxisDelta(delta.x, source.x, target.x, origin ? origin.originX : undefined);\n    calcAxisDelta(delta.y, source.y, target.y, origin ? origin.originY : undefined);\n}\nfunction calcRelativeAxis(target, relative, parent) {\n    target.min = parent.min + relative.min;\n    target.max = target.min + calcLength(relative);\n}\nfunction calcRelativeBox(target, relative, parent) {\n    calcRelativeAxis(target.x, relative.x, parent.x);\n    calcRelativeAxis(target.y, relative.y, parent.y);\n}\nfunction calcRelativeAxisPosition(target, layout, parent) {\n    target.min = layout.min - parent.min;\n    target.max = target.min + calcLength(layout);\n}\nfunction calcRelativePosition(target, layout, parent) {\n    calcRelativeAxisPosition(target.x, layout.x, parent.x);\n    calcRelativeAxisPosition(target.y, layout.y, parent.y);\n}\n\nexport { calcAxisDelta, calcBoxDelta, calcLength, calcRelativeAxis, calcRelativeAxisPosition, calcRelativeBox, calcRelativePosition, isNear };\n","function eachAxis(callback) {\n    return [callback(\"x\"), callback(\"y\")];\n}\n\nexport { eachAxis };\n","// Fixes https://github.com/motiondivision/motion/issues/2270\nconst getContextWindow = ({ current }) => {\n    return current ? current.ownerDocument.defaultView : null;\n};\n\nexport { getContextWindow };\n","const distance = (a, b) => Math.abs(a - b);\nfunction distance2D(a, b) {\n    // Multi-dimensional\n    const xDelta = distance(a.x, b.x);\n    const yDelta = distance(a.y, b.y);\n    return Math.sqrt(xDelta ** 2 + yDelta ** 2);\n}\n\nexport { distance, distance2D };\n","import { frame, isPrimaryPointer, cancelFrame, frameData } from 'motion-dom';\nimport { pipe, secondsToMilliseconds, millisecondsToSeconds } from 'motion-utils';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { extractEventInfo } from '../../events/event-info.mjs';\nimport { distance2D } from '../../utils/distance.mjs';\n\n/**\n * @internal\n */\nclass PanSession {\n    constructor(event, handlers, { transformPagePoint, contextWindow = window, dragSnapToOrigin = false, distanceThreshold = 3, } = {}) {\n        /**\n         * @internal\n         */\n        this.startEvent = null;\n        /**\n         * @internal\n         */\n        this.lastMoveEvent = null;\n        /**\n         * @internal\n         */\n        this.lastMoveEventInfo = null;\n        /**\n         * @internal\n         */\n        this.handlers = {};\n        /**\n         * @internal\n         */\n        this.contextWindow = window;\n        this.updatePoint = () => {\n            if (!(this.lastMoveEvent && this.lastMoveEventInfo))\n                return;\n            const info = getPanInfo(this.lastMoveEventInfo, this.history);\n            const isPanStarted = this.startEvent !== null;\n            // Only start panning if the offset is larger than 3 pixels. If we make it\n            // any larger than this we'll want to reset the pointer history\n            // on the first update to avoid visual snapping to the cursor.\n            const isDistancePastThreshold = distance2D(info.offset, { x: 0, y: 0 }) >= this.distanceThreshold;\n            if (!isPanStarted && !isDistancePastThreshold)\n                return;\n            const { point } = info;\n            const { timestamp } = frameData;\n            this.history.push({ ...point, timestamp });\n            const { onStart, onMove } = this.handlers;\n            if (!isPanStarted) {\n                onStart && onStart(this.lastMoveEvent, info);\n                this.startEvent = this.lastMoveEvent;\n            }\n            onMove && onMove(this.lastMoveEvent, info);\n        };\n        this.handlePointerMove = (event, info) => {\n            this.lastMoveEvent = event;\n            this.lastMoveEventInfo = transformPoint(info, this.transformPagePoint);\n            // Throttle mouse move event to once per frame\n            frame.update(this.updatePoint, true);\n        };\n        this.handlePointerUp = (event, info) => {\n            this.end();\n            const { onEnd, onSessionEnd, resumeAnimation } = this.handlers;\n            if (this.dragSnapToOrigin)\n                resumeAnimation && resumeAnimation();\n            if (!(this.lastMoveEvent && this.lastMoveEventInfo))\n                return;\n            const panInfo = getPanInfo(event.type === \"pointercancel\"\n                ? this.lastMoveEventInfo\n                : transformPoint(info, this.transformPagePoint), this.history);\n            if (this.startEvent && onEnd) {\n                onEnd(event, panInfo);\n            }\n            onSessionEnd && onSessionEnd(event, panInfo);\n        };\n        // If we have more than one touch, don't start detecting this gesture\n        if (!isPrimaryPointer(event))\n            return;\n        this.dragSnapToOrigin = dragSnapToOrigin;\n        this.handlers = handlers;\n        this.transformPagePoint = transformPagePoint;\n        this.distanceThreshold = distanceThreshold;\n        this.contextWindow = contextWindow || window;\n        const info = extractEventInfo(event);\n        const initialInfo = transformPoint(info, this.transformPagePoint);\n        const { point } = initialInfo;\n        const { timestamp } = frameData;\n        this.history = [{ ...point, timestamp }];\n        const { onSessionStart } = handlers;\n        onSessionStart &&\n            onSessionStart(event, getPanInfo(initialInfo, this.history));\n        this.removeListeners = pipe(addPointerEvent(this.contextWindow, \"pointermove\", this.handlePointerMove), addPointerEvent(this.contextWindow, \"pointerup\", this.handlePointerUp), addPointerEvent(this.contextWindow, \"pointercancel\", this.handlePointerUp));\n    }\n    updateHandlers(handlers) {\n        this.handlers = handlers;\n    }\n    end() {\n        this.removeListeners && this.removeListeners();\n        cancelFrame(this.updatePoint);\n    }\n}\nfunction transformPoint(info, transformPagePoint) {\n    return transformPagePoint ? { point: transformPagePoint(info.point) } : info;\n}\nfunction subtractPoint(a, b) {\n    return { x: a.x - b.x, y: a.y - b.y };\n}\nfunction getPanInfo({ point }, history) {\n    return {\n        point,\n        delta: subtractPoint(point, lastDevicePoint(history)),\n        offset: subtractPoint(point, startDevicePoint(history)),\n        velocity: getVelocity(history, 0.1),\n    };\n}\nfunction startDevicePoint(history) {\n    return history[0];\n}\nfunction lastDevicePoint(history) {\n    return history[history.length - 1];\n}\nfunction getVelocity(history, timeDelta) {\n    if (history.length < 2) {\n        return { x: 0, y: 0 };\n    }\n    let i = history.length - 1;\n    let timestampedPoint = null;\n    const lastPoint = lastDevicePoint(history);\n    while (i >= 0) {\n        timestampedPoint = history[i];\n        if (lastPoint.timestamp - timestampedPoint.timestamp >\n            secondsToMilliseconds(timeDelta)) {\n            break;\n        }\n        i--;\n    }\n    if (!timestampedPoint) {\n        return { x: 0, y: 0 };\n    }\n    const time = millisecondsToSeconds(lastPoint.timestamp - timestampedPoint.timestamp);\n    if (time === 0) {\n        return { x: 0, y: 0 };\n    }\n    const currentVelocity = {\n        x: (lastPoint.x - timestampedPoint.x) / time,\n        y: (lastPoint.y - timestampedPoint.y) / time,\n    };\n    if (currentVelocity.x === Infinity) {\n        currentVelocity.x = 0;\n    }\n    if (currentVelocity.y === Infinity) {\n        currentVelocity.y = 0;\n    }\n    return currentVelocity;\n}\n\nexport { PanSession };\n","import { mixNumber } from 'motion-dom';\nimport { progress, clamp } from 'motion-utils';\nimport { calcLength } from '../../../projection/geometry/delta-calc.mjs';\n\n/**\n * Apply constraints to a point. These constraints are both physical along an\n * axis, and an elastic factor that determines how much to constrain the point\n * by if it does lie outside the defined parameters.\n */\nfunction applyConstraints(point, { min, max }, elastic) {\n    if (min !== undefined && point < min) {\n        // If we have a min point defined, and this is outside of that, constrain\n        point = elastic\n            ? mixNumber(min, point, elastic.min)\n            : Math.max(point, min);\n    }\n    else if (max !== undefined && point > max) {\n        // If we have a max point defined, and this is outside of that, constrain\n        point = elastic\n            ? mixNumber(max, point, elastic.max)\n            : Math.min(point, max);\n    }\n    return point;\n}\n/**\n * Calculate constraints in terms of the viewport when defined relatively to the\n * measured axis. This is measured from the nearest edge, so a max constraint of 200\n * on an axis with a max value of 300 would return a constraint of 500 - axis length\n */\nfunction calcRelativeAxisConstraints(axis, min, max) {\n    return {\n        min: min !== undefined ? axis.min + min : undefined,\n        max: max !== undefined\n            ? axis.max + max - (axis.max - axis.min)\n            : undefined,\n    };\n}\n/**\n * Calculate constraints in terms of the viewport when\n * defined relatively to the measured bounding box.\n */\nfunction calcRelativeConstraints(layoutBox, { top, left, bottom, right }) {\n    return {\n        x: calcRelativeAxisConstraints(layoutBox.x, left, right),\n        y: calcRelativeAxisConstraints(layoutBox.y, top, bottom),\n    };\n}\n/**\n * Calculate viewport constraints when defined as another viewport-relative axis\n */\nfunction calcViewportAxisConstraints(layoutAxis, constraintsAxis) {\n    let min = constraintsAxis.min - layoutAxis.min;\n    let max = constraintsAxis.max - layoutAxis.max;\n    // If the constraints axis is actually smaller than the layout axis then we can\n    // flip the constraints\n    if (constraintsAxis.max - constraintsAxis.min <\n        layoutAxis.max - layoutAxis.min) {\n        [min, max] = [max, min];\n    }\n    return { min, max };\n}\n/**\n * Calculate viewport constraints when defined as another viewport-relative box\n */\nfunction calcViewportConstraints(layoutBox, constraintsBox) {\n    return {\n        x: calcViewportAxisConstraints(layoutBox.x, constraintsBox.x),\n        y: calcViewportAxisConstraints(layoutBox.y, constraintsBox.y),\n    };\n}\n/**\n * Calculate a transform origin relative to the source axis, between 0-1, that results\n * in an asthetically pleasing scale/transform needed to project from source to target.\n */\nfunction calcOrigin(source, target) {\n    let origin = 0.5;\n    const sourceLength = calcLength(source);\n    const targetLength = calcLength(target);\n    if (targetLength > sourceLength) {\n        origin = progress(target.min, target.max - sourceLength, source.min);\n    }\n    else if (sourceLength > targetLength) {\n        origin = progress(source.min, source.max - targetLength, target.min);\n    }\n    return clamp(0, 1, origin);\n}\n/**\n * Rebase the calculated viewport constraints relative to the layout.min point.\n */\nfunction rebaseAxisConstraints(layout, constraints) {\n    const relativeConstraints = {};\n    if (constraints.min !== undefined) {\n        relativeConstraints.min = constraints.min - layout.min;\n    }\n    if (constraints.max !== undefined) {\n        relativeConstraints.max = constraints.max - layout.min;\n    }\n    return relativeConstraints;\n}\nconst defaultElastic = 0.35;\n/**\n * Accepts a dragElastic prop and returns resolved elastic values for each axis.\n */\nfunction resolveDragElastic(dragElastic = defaultElastic) {\n    if (dragElastic === false) {\n        dragElastic = 0;\n    }\n    else if (dragElastic === true) {\n        dragElastic = defaultElastic;\n    }\n    return {\n        x: resolveAxisElastic(dragElastic, \"left\", \"right\"),\n        y: resolveAxisElastic(dragElastic, \"top\", \"bottom\"),\n    };\n}\nfunction resolveAxisElastic(dragElastic, minLabel, maxLabel) {\n    return {\n        min: resolvePointElastic(dragElastic, minLabel),\n        max: resolvePointElastic(dragElastic, maxLabel),\n    };\n}\nfunction resolvePointElastic(dragElastic, label) {\n    return typeof dragElastic === \"number\"\n        ? dragElastic\n        : dragElastic[label] || 0;\n}\n\nexport { applyConstraints, calcOrigin, calcRelativeAxisConstraints, calcRelativeConstraints, calcViewportAxisConstraints, calcViewportConstraints, defaultElastic, rebaseAxisConstraints, resolveAxisElastic, resolveDragElastic, resolvePointElastic };\n","import { frame, mixNumber, setDragLock, percent } from 'motion-dom';\nimport { invariant } from 'motion-utils';\nimport { animateMotionValue } from '../../animation/interfaces/motion-value.mjs';\nimport { addDomEvent } from '../../events/add-dom-event.mjs';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { extractEventInfo } from '../../events/event-info.mjs';\nimport { convertBoxToBoundingBox, convertBoundingBoxToBox } from '../../projection/geometry/conversion.mjs';\nimport { calcLength } from '../../projection/geometry/delta-calc.mjs';\nimport { createBox } from '../../projection/geometry/models.mjs';\nimport { eachAxis } from '../../projection/utils/each-axis.mjs';\nimport { measurePageBox } from '../../projection/utils/measure.mjs';\nimport { getContextWindow } from '../../utils/get-context-window.mjs';\nimport { isRefObject } from '../../utils/is-ref-object.mjs';\nimport { addValueToWillChange } from '../../value/use-will-change/add-will-change.mjs';\nimport { PanSession } from '../pan/PanSession.mjs';\nimport { applyConstraints, calcRelativeConstraints, resolveDragElastic, rebaseAxisConstraints, calcViewportConstraints, calcOrigin, defaultElastic } from './utils/constraints.mjs';\n\nconst elementDragControls = new WeakMap();\nclass VisualElementDragControls {\n    constructor(visualElement) {\n        this.openDragLock = null;\n        this.isDragging = false;\n        this.currentDirection = null;\n        this.originPoint = { x: 0, y: 0 };\n        /**\n         * The permitted boundaries of travel, in pixels.\n         */\n        this.constraints = false;\n        this.hasMutatedConstraints = false;\n        /**\n         * The per-axis resolved elastic values.\n         */\n        this.elastic = createBox();\n        /**\n         * The latest pointer event. Used as fallback when the `cancel` and `stop` functions are called without arguments.\n         */\n        this.latestPointerEvent = null;\n        /**\n         * The latest pan info. Used as fallback when the `cancel` and `stop` functions are called without arguments.\n         */\n        this.latestPanInfo = null;\n        this.visualElement = visualElement;\n    }\n    start(originEvent, { snapToCursor = false, distanceThreshold } = {}) {\n        /**\n         * Don't start dragging if this component is exiting\n         */\n        const { presenceContext } = this.visualElement;\n        if (presenceContext && presenceContext.isPresent === false)\n            return;\n        const onSessionStart = (event) => {\n            const { dragSnapToOrigin } = this.getProps();\n            // Stop or pause any animations on both axis values immediately. This allows the user to throw and catch\n            // the component.\n            dragSnapToOrigin ? this.pauseAnimation() : this.stopAnimation();\n            if (snapToCursor) {\n                this.snapToCursor(extractEventInfo(event).point);\n            }\n        };\n        const onStart = (event, info) => {\n            // Attempt to grab the global drag gesture lock - maybe make this part of PanSession\n            const { drag, dragPropagation, onDragStart } = this.getProps();\n            if (drag && !dragPropagation) {\n                if (this.openDragLock)\n                    this.openDragLock();\n                this.openDragLock = setDragLock(drag);\n                // If we don 't have the lock, don't start dragging\n                if (!this.openDragLock)\n                    return;\n            }\n            this.latestPointerEvent = event;\n            this.latestPanInfo = info;\n            this.isDragging = true;\n            this.currentDirection = null;\n            this.resolveConstraints();\n            if (this.visualElement.projection) {\n                this.visualElement.projection.isAnimationBlocked = true;\n                this.visualElement.projection.target = undefined;\n            }\n            /**\n             * Record gesture origin\n             */\n            eachAxis((axis) => {\n                let current = this.getAxisMotionValue(axis).get() || 0;\n                /**\n                 * If the MotionValue is a percentage value convert to px\n                 */\n                if (percent.test(current)) {\n                    const { projection } = this.visualElement;\n                    if (projection && projection.layout) {\n                        const measuredAxis = projection.layout.layoutBox[axis];\n                        if (measuredAxis) {\n                            const length = calcLength(measuredAxis);\n                            current = length * (parseFloat(current) / 100);\n                        }\n                    }\n                }\n                this.originPoint[axis] = current;\n            });\n            // Fire onDragStart event\n            if (onDragStart) {\n                frame.postRender(() => onDragStart(event, info));\n            }\n            addValueToWillChange(this.visualElement, \"transform\");\n            const { animationState } = this.visualElement;\n            animationState && animationState.setActive(\"whileDrag\", true);\n        };\n        const onMove = (event, info) => {\n            this.latestPointerEvent = event;\n            this.latestPanInfo = info;\n            const { dragPropagation, dragDirectionLock, onDirectionLock, onDrag, } = this.getProps();\n            // If we didn't successfully receive the gesture lock, early return.\n            if (!dragPropagation && !this.openDragLock)\n                return;\n            const { offset } = info;\n            // Attempt to detect drag direction if directionLock is true\n            if (dragDirectionLock && this.currentDirection === null) {\n                this.currentDirection = getCurrentDirection(offset);\n                // If we've successfully set a direction, notify listener\n                if (this.currentDirection !== null) {\n                    onDirectionLock && onDirectionLock(this.currentDirection);\n                }\n                return;\n            }\n            // Update each point with the latest position\n            this.updateAxis(\"x\", info.point, offset);\n            this.updateAxis(\"y\", info.point, offset);\n            /**\n             * Ideally we would leave the renderer to fire naturally at the end of\n             * this frame but if the element is about to change layout as the result\n             * of a re-render we want to ensure the browser can read the latest\n             * bounding box to ensure the pointer and element don't fall out of sync.\n             */\n            this.visualElement.render();\n            /**\n             * This must fire after the render call as it might trigger a state\n             * change which itself might trigger a layout update.\n             */\n            onDrag && onDrag(event, info);\n        };\n        const onSessionEnd = (event, info) => {\n            this.latestPointerEvent = event;\n            this.latestPanInfo = info;\n            this.stop(event, info);\n            this.latestPointerEvent = null;\n            this.latestPanInfo = null;\n        };\n        const resumeAnimation = () => eachAxis((axis) => this.getAnimationState(axis) === \"paused\" &&\n            this.getAxisMotionValue(axis).animation?.play());\n        const { dragSnapToOrigin } = this.getProps();\n        this.panSession = new PanSession(originEvent, {\n            onSessionStart,\n            onStart,\n            onMove,\n            onSessionEnd,\n            resumeAnimation,\n        }, {\n            transformPagePoint: this.visualElement.getTransformPagePoint(),\n            dragSnapToOrigin,\n            distanceThreshold,\n            contextWindow: getContextWindow(this.visualElement),\n        });\n    }\n    /**\n     * @internal\n     */\n    stop(event, panInfo) {\n        const finalEvent = event || this.latestPointerEvent;\n        const finalPanInfo = panInfo || this.latestPanInfo;\n        const isDragging = this.isDragging;\n        this.cancel();\n        if (!isDragging || !finalPanInfo || !finalEvent)\n            return;\n        const { velocity } = finalPanInfo;\n        this.startAnimation(velocity);\n        const { onDragEnd } = this.getProps();\n        if (onDragEnd) {\n            frame.postRender(() => onDragEnd(finalEvent, finalPanInfo));\n        }\n    }\n    /**\n     * @internal\n     */\n    cancel() {\n        this.isDragging = false;\n        const { projection, animationState } = this.visualElement;\n        if (projection) {\n            projection.isAnimationBlocked = false;\n        }\n        this.panSession && this.panSession.end();\n        this.panSession = undefined;\n        const { dragPropagation } = this.getProps();\n        if (!dragPropagation && this.openDragLock) {\n            this.openDragLock();\n            this.openDragLock = null;\n        }\n        animationState && animationState.setActive(\"whileDrag\", false);\n    }\n    updateAxis(axis, _point, offset) {\n        const { drag } = this.getProps();\n        // If we're not dragging this axis, do an early return.\n        if (!offset || !shouldDrag(axis, drag, this.currentDirection))\n            return;\n        const axisValue = this.getAxisMotionValue(axis);\n        let next = this.originPoint[axis] + offset[axis];\n        // Apply constraints\n        if (this.constraints && this.constraints[axis]) {\n            next = applyConstraints(next, this.constraints[axis], this.elastic[axis]);\n        }\n        axisValue.set(next);\n    }\n    resolveConstraints() {\n        const { dragConstraints, dragElastic } = this.getProps();\n        const layout = this.visualElement.projection &&\n            !this.visualElement.projection.layout\n            ? this.visualElement.projection.measure(false)\n            : this.visualElement.projection?.layout;\n        const prevConstraints = this.constraints;\n        if (dragConstraints && isRefObject(dragConstraints)) {\n            if (!this.constraints) {\n                this.constraints = this.resolveRefConstraints();\n            }\n        }\n        else {\n            if (dragConstraints && layout) {\n                this.constraints = calcRelativeConstraints(layout.layoutBox, dragConstraints);\n            }\n            else {\n                this.constraints = false;\n            }\n        }\n        this.elastic = resolveDragElastic(dragElastic);\n        /**\n         * If we're outputting to external MotionValues, we want to rebase the measured constraints\n         * from viewport-relative to component-relative.\n         */\n        if (prevConstraints !== this.constraints &&\n            layout &&\n            this.constraints &&\n            !this.hasMutatedConstraints) {\n            eachAxis((axis) => {\n                if (this.constraints !== false &&\n                    this.getAxisMotionValue(axis)) {\n                    this.constraints[axis] = rebaseAxisConstraints(layout.layoutBox[axis], this.constraints[axis]);\n                }\n            });\n        }\n    }\n    resolveRefConstraints() {\n        const { dragConstraints: constraints, onMeasureDragConstraints } = this.getProps();\n        if (!constraints || !isRefObject(constraints))\n            return false;\n        const constraintsElement = constraints.current;\n        invariant(constraintsElement !== null, \"If `dragConstraints` is set as a React ref, that ref must be passed to another component's `ref` prop.\", \"drag-constraints-ref\");\n        const { projection } = this.visualElement;\n        // TODO\n        if (!projection || !projection.layout)\n            return false;\n        const constraintsBox = measurePageBox(constraintsElement, projection.root, this.visualElement.getTransformPagePoint());\n        let measuredConstraints = calcViewportConstraints(projection.layout.layoutBox, constraintsBox);\n        /**\n         * If there's an onMeasureDragConstraints listener we call it and\n         * if different constraints are returned, set constraints to that\n         */\n        if (onMeasureDragConstraints) {\n            const userConstraints = onMeasureDragConstraints(convertBoxToBoundingBox(measuredConstraints));\n            this.hasMutatedConstraints = !!userConstraints;\n            if (userConstraints) {\n                measuredConstraints = convertBoundingBoxToBox(userConstraints);\n            }\n        }\n        return measuredConstraints;\n    }\n    startAnimation(velocity) {\n        const { drag, dragMomentum, dragElastic, dragTransition, dragSnapToOrigin, onDragTransitionEnd, } = this.getProps();\n        const constraints = this.constraints || {};\n        const momentumAnimations = eachAxis((axis) => {\n            if (!shouldDrag(axis, drag, this.currentDirection)) {\n                return;\n            }\n            let transition = (constraints && constraints[axis]) || {};\n            if (dragSnapToOrigin)\n                transition = { min: 0, max: 0 };\n            /**\n             * Overdamp the boundary spring if `dragElastic` is disabled. There's still a frame\n             * of spring animations so we should look into adding a disable spring option to `inertia`.\n             * We could do something here where we affect the `bounceStiffness` and `bounceDamping`\n             * using the value of `dragElastic`.\n             */\n            const bounceStiffness = dragElastic ? 200 : 1000000;\n            const bounceDamping = dragElastic ? 40 : 10000000;\n            const inertia = {\n                type: \"inertia\",\n                velocity: dragMomentum ? velocity[axis] : 0,\n                bounceStiffness,\n                bounceDamping,\n                timeConstant: 750,\n                restDelta: 1,\n                restSpeed: 10,\n                ...dragTransition,\n                ...transition,\n            };\n            // If we're not animating on an externally-provided `MotionValue` we can use the\n            // component's animation controls which will handle interactions with whileHover (etc),\n            // otherwise we just have to animate the `MotionValue` itself.\n            return this.startAxisValueAnimation(axis, inertia);\n        });\n        // Run all animations and then resolve the new drag constraints.\n        return Promise.all(momentumAnimations).then(onDragTransitionEnd);\n    }\n    startAxisValueAnimation(axis, transition) {\n        const axisValue = this.getAxisMotionValue(axis);\n        addValueToWillChange(this.visualElement, axis);\n        return axisValue.start(animateMotionValue(axis, axisValue, 0, transition, this.visualElement, false));\n    }\n    stopAnimation() {\n        eachAxis((axis) => this.getAxisMotionValue(axis).stop());\n    }\n    pauseAnimation() {\n        eachAxis((axis) => this.getAxisMotionValue(axis).animation?.pause());\n    }\n    getAnimationState(axis) {\n        return this.getAxisMotionValue(axis).animation?.state;\n    }\n    /**\n     * Drag works differently depending on which props are provided.\n     *\n     * - If _dragX and _dragY are provided, we output the gesture delta directly to those motion values.\n     * - Otherwise, we apply the delta to the x/y motion values.\n     */\n    getAxisMotionValue(axis) {\n        const dragKey = `_drag${axis.toUpperCase()}`;\n        const props = this.visualElement.getProps();\n        const externalMotionValue = props[dragKey];\n        return externalMotionValue\n            ? externalMotionValue\n            : this.visualElement.getValue(axis, (props.initial\n                ? props.initial[axis]\n                : undefined) || 0);\n    }\n    snapToCursor(point) {\n        eachAxis((axis) => {\n            const { drag } = this.getProps();\n            // If we're not dragging this axis, do an early return.\n            if (!shouldDrag(axis, drag, this.currentDirection))\n                return;\n            const { projection } = this.visualElement;\n            const axisValue = this.getAxisMotionValue(axis);\n            if (projection && projection.layout) {\n                const { min, max } = projection.layout.layoutBox[axis];\n                axisValue.set(point[axis] - mixNumber(min, max, 0.5));\n            }\n        });\n    }\n    /**\n     * When the viewport resizes we want to check if the measured constraints\n     * have changed and, if so, reposition the element within those new constraints\n     * relative to where it was before the resize.\n     */\n    scalePositionWithinConstraints() {\n        if (!this.visualElement.current)\n            return;\n        const { drag, dragConstraints } = this.getProps();\n        const { projection } = this.visualElement;\n        if (!isRefObject(dragConstraints) || !projection || !this.constraints)\n            return;\n        /**\n         * Stop current animations as there can be visual glitching if we try to do\n         * this mid-animation\n         */\n        this.stopAnimation();\n        /**\n         * Record the relative position of the dragged element relative to the\n         * constraints box and save as a progress value.\n         */\n        const boxProgress = { x: 0, y: 0 };\n        eachAxis((axis) => {\n            const axisValue = this.getAxisMotionValue(axis);\n            if (axisValue && this.constraints !== false) {\n                const latest = axisValue.get();\n                boxProgress[axis] = calcOrigin({ min: latest, max: latest }, this.constraints[axis]);\n            }\n        });\n        /**\n         * Update the layout of this element and resolve the latest drag constraints\n         */\n        const { transformTemplate } = this.visualElement.getProps();\n        this.visualElement.current.style.transform = transformTemplate\n            ? transformTemplate({}, \"\")\n            : \"none\";\n        projection.root && projection.root.updateScroll();\n        projection.updateLayout();\n        this.resolveConstraints();\n        /**\n         * For each axis, calculate the current progress of the layout axis\n         * within the new constraints.\n         */\n        eachAxis((axis) => {\n            if (!shouldDrag(axis, drag, null))\n                return;\n            /**\n             * Calculate a new transform based on the previous box progress\n             */\n            const axisValue = this.getAxisMotionValue(axis);\n            const { min, max } = this.constraints[axis];\n            axisValue.set(mixNumber(min, max, boxProgress[axis]));\n        });\n    }\n    addListeners() {\n        if (!this.visualElement.current)\n            return;\n        elementDragControls.set(this.visualElement, this);\n        const element = this.visualElement.current;\n        /**\n         * Attach a pointerdown event listener on this DOM element to initiate drag tracking.\n         */\n        const stopPointerListener = addPointerEvent(element, \"pointerdown\", (event) => {\n            const { drag, dragListener = true } = this.getProps();\n            drag && dragListener && this.start(event);\n        });\n        const measureDragConstraints = () => {\n            const { dragConstraints } = this.getProps();\n            if (isRefObject(dragConstraints) && dragConstraints.current) {\n                this.constraints = this.resolveRefConstraints();\n            }\n        };\n        const { projection } = this.visualElement;\n        const stopMeasureLayoutListener = projection.addEventListener(\"measure\", measureDragConstraints);\n        if (projection && !projection.layout) {\n            projection.root && projection.root.updateScroll();\n            projection.updateLayout();\n        }\n        frame.read(measureDragConstraints);\n        /**\n         * Attach a window resize listener to scale the draggable target within its defined\n         * constraints as the window resizes.\n         */\n        const stopResizeListener = addDomEvent(window, \"resize\", () => this.scalePositionWithinConstraints());\n        /**\n         * If the element's layout changes, calculate the delta and apply that to\n         * the drag gesture's origin point.\n         */\n        const stopLayoutUpdateListener = projection.addEventListener(\"didUpdate\", (({ delta, hasLayoutChanged }) => {\n            if (this.isDragging && hasLayoutChanged) {\n                eachAxis((axis) => {\n                    const motionValue = this.getAxisMotionValue(axis);\n                    if (!motionValue)\n                        return;\n                    this.originPoint[axis] += delta[axis].translate;\n                    motionValue.set(motionValue.get() + delta[axis].translate);\n                });\n                this.visualElement.render();\n            }\n        }));\n        return () => {\n            stopResizeListener();\n            stopPointerListener();\n            stopMeasureLayoutListener();\n            stopLayoutUpdateListener && stopLayoutUpdateListener();\n        };\n    }\n    getProps() {\n        const props = this.visualElement.getProps();\n        const { drag = false, dragDirectionLock = false, dragPropagation = false, dragConstraints = false, dragElastic = defaultElastic, dragMomentum = true, } = props;\n        return {\n            ...props,\n            drag,\n            dragDirectionLock,\n            dragPropagation,\n            dragConstraints,\n            dragElastic,\n            dragMomentum,\n        };\n    }\n}\nfunction shouldDrag(direction, drag, currentDirection) {\n    return ((drag === true || drag === direction) &&\n        (currentDirection === null || currentDirection === direction));\n}\n/**\n * Based on an x/y offset determine the current drag direction. If both axis' offsets are lower\n * than the provided threshold, return `null`.\n *\n * @param offset - The x/y offset from origin.\n * @param lockThreshold - (Optional) - the minimum absolute offset before we can determine a drag direction.\n */\nfunction getCurrentDirection(offset, lockThreshold = 10) {\n    let direction = null;\n    if (Math.abs(offset.y) > lockThreshold) {\n        direction = \"y\";\n    }\n    else if (Math.abs(offset.x) > lockThreshold) {\n        direction = \"x\";\n    }\n    return direction;\n}\n\nexport { VisualElementDragControls, elementDragControls };\n","import { isDragging } from './is-active.mjs';\n\nfunction setDragLock(axis) {\n    if (axis === \"x\" || axis === \"y\") {\n        if (isDragging[axis]) {\n            return null;\n        }\n        else {\n            isDragging[axis] = true;\n            return () => {\n                isDragging[axis] = false;\n            };\n        }\n    }\n    else {\n        if (isDragging.x || isDragging.y) {\n            return null;\n        }\n        else {\n            isDragging.x = isDragging.y = true;\n            return () => {\n                isDragging.x = isDragging.y = false;\n            };\n        }\n    }\n}\n\nexport { setDragLock };\n","import { frame } from 'motion-dom';\nimport { noop } from 'motion-utils';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { Feature } from '../../motion/features/Feature.mjs';\nimport { getContextWindow } from '../../utils/get-context-window.mjs';\nimport { PanSession } from './PanSession.mjs';\n\nconst asyncHandler = (handler) => (event, info) => {\n    if (handler) {\n        frame.postRender(() => handler(event, info));\n    }\n};\nclass PanGesture extends Feature {\n    constructor() {\n        super(...arguments);\n        this.removePointerDownListener = noop;\n    }\n    onPointerDown(pointerDownEvent) {\n        this.session = new PanSession(pointerDownEvent, this.createPanHandlers(), {\n            transformPagePoint: this.node.getTransformPagePoint(),\n            contextWindow: getContextWindow(this.node),\n        });\n    }\n    createPanHandlers() {\n        const { onPanSessionStart, onPanStart, onPan, onPanEnd } = this.node.getProps();\n        return {\n            onSessionStart: asyncHandler(onPanSessionStart),\n            onStart: asyncHandler(onPanStart),\n            onMove: onPan,\n            onEnd: (event, info) => {\n                delete this.session;\n                if (onPanEnd) {\n                    frame.postRender(() => onPanEnd(event, info));\n                }\n            },\n        };\n    }\n    mount() {\n        this.removePointerDownListener = addPointerEvent(this.node.current, \"pointerdown\", (event) => this.onPointerDown(event));\n    }\n    update() {\n        this.session && this.session.updateHandlers(this.createPanHandlers());\n    }\n    unmount() {\n        this.removePointerDownListener();\n        this.session && this.session.end();\n    }\n}\n\nexport { PanGesture };\n","/**\n * This should only ever be modified on the client otherwise it'll\n * persist through server requests. If we need instanced states we\n * could lazy-init via root.\n */\nconst globalProjectionState = {\n    /**\n     * Global flag as to whether the tree has animated since the last time\n     * we resized the window\n     */\n    hasAnimatedSinceResize: true,\n    /**\n     * We set this to true once, on the first update. Any nodes added to the tree beyond that\n     * update will be given a `data-projection-id` attribute.\n     */\n    hasEverUpdated: false,\n};\n\nexport { globalProjectionState };\n","import { px } from 'motion-dom';\n\nfunction pixelsToPercent(pixels, axis) {\n    if (axis.max === axis.min)\n        return 0;\n    return (pixels / (axis.max - axis.min)) * 100;\n}\n/**\n * We always correct borderRadius as a percentage rather than pixels to reduce paints.\n * For example, if you are projecting a box that is 100px wide with a 10px borderRadius\n * into a box that is 200px wide with a 20px borderRadius, that is actually a 10%\n * borderRadius in both states. If we animate between the two in pixels that will trigger\n * a paint each time. If we animate between the two in percentage we'll avoid a paint.\n */\nconst correctBorderRadius = {\n    correct: (latest, node) => {\n        if (!node.target)\n            return latest;\n        /**\n         * If latest is a string, if it's a percentage we can return immediately as it's\n         * going to be stretched appropriately. Otherwise, if it's a pixel, convert it to a number.\n         */\n        if (typeof latest === \"string\") {\n            if (px.test(latest)) {\n                latest = parseFloat(latest);\n            }\n            else {\n                return latest;\n            }\n        }\n        /**\n         * If latest is a number, it's a pixel value. We use the current viewportBox to calculate that\n         * pixel value as a percentage of each axis\n         */\n        const x = pixelsToPercent(latest, node.target.x);\n        const y = pixelsToPercent(latest, node.target.y);\n        return `${x}% ${y}%`;\n    },\n};\n\nexport { correctBorderRadius, pixelsToPercent };\n","import { complex, mixNumber } from 'motion-dom';\n\nconst correctBoxShadow = {\n    correct: (latest, { treeScale, projectionDelta }) => {\n        const original = latest;\n        const shadow = complex.parse(latest);\n        // TODO: Doesn't support multiple shadows\n        if (shadow.length > 5)\n            return original;\n        const template = complex.createTransformer(latest);\n        const offset = typeof shadow[0] !== \"number\" ? 1 : 0;\n        // Calculate the overall context scale\n        const xScale = projectionDelta.x.scale * treeScale.x;\n        const yScale = projectionDelta.y.scale * treeScale.y;\n        shadow[0 + offset] /= xScale;\n        shadow[1 + offset] /= yScale;\n        /**\n         * Ideally we'd correct x and y scales individually, but because blur and\n         * spread apply to both we have to take a scale average and apply that instead.\n         * We could potentially improve the outcome of this by incorporating the ratio between\n         * the two scales.\n         */\n        const averageScale = mixNumber(xScale, yScale, 0.5);\n        // Blur\n        if (typeof shadow[2 + offset] === \"number\")\n            shadow[2 + offset] /= averageScale;\n        // Spread\n        if (typeof shadow[3 + offset] === \"number\")\n            shadow[3 + offset] /= averageScale;\n        return template(shadow);\n    },\n};\n\nexport { correctBoxShadow };\n","\"use client\";\nimport { jsx } from 'react/jsx-runtime';\nimport { frame, microtask } from 'motion-dom';\nimport { useContext, Component } from 'react';\nimport { usePresence } from '../../../components/AnimatePresence/use-presence.mjs';\nimport { LayoutGroupContext } from '../../../context/LayoutGroupContext.mjs';\nimport { SwitchLayoutGroupContext } from '../../../context/SwitchLayoutGroupContext.mjs';\nimport { globalProjectionState } from '../../../projection/node/state.mjs';\nimport { correctBorderRadius } from '../../../projection/styles/scale-border-radius.mjs';\nimport { correctBoxShadow } from '../../../projection/styles/scale-box-shadow.mjs';\nimport { addScaleCorrector } from '../../../projection/styles/scale-correction.mjs';\n\n/**\n * Track whether we've taken any snapshots yet. If not,\n * we can safely skip notification of didUpdate.\n */\nlet hasTakenAnySnapshot = false;\nclass MeasureLayoutWithContext extends Component {\n    /**\n     * This only mounts projection nodes for components that\n     * need measuring, we might want to do it for all components\n     * in order to incorporate transforms\n     */\n    componentDidMount() {\n        const { visualElement, layoutGroup, switchLayoutGroup, layoutId } = this.props;\n        const { projection } = visualElement;\n        addScaleCorrector(defaultScaleCorrectors);\n        if (projection) {\n            if (layoutGroup.group)\n                layoutGroup.group.add(projection);\n            if (switchLayoutGroup && switchLayoutGroup.register && layoutId) {\n                switchLayoutGroup.register(projection);\n            }\n            if (hasTakenAnySnapshot) {\n                projection.root.didUpdate();\n            }\n            projection.addEventListener(\"animationComplete\", () => {\n                this.safeToRemove();\n            });\n            projection.setOptions({\n                ...projection.options,\n                onExitComplete: () => this.safeToRemove(),\n            });\n        }\n        globalProjectionState.hasEverUpdated = true;\n    }\n    getSnapshotBeforeUpdate(prevProps) {\n        const { layoutDependency, visualElement, drag, isPresent } = this.props;\n        const { projection } = visualElement;\n        if (!projection)\n            return null;\n        /**\n         * TODO: We use this data in relegate to determine whether to\n         * promote a previous element. There's no guarantee its presence data\n         * will have updated by this point - if a bug like this arises it will\n         * have to be that we markForRelegation and then find a new lead some other way,\n         * perhaps in didUpdate\n         */\n        projection.isPresent = isPresent;\n        hasTakenAnySnapshot = true;\n        if (drag ||\n            prevProps.layoutDependency !== layoutDependency ||\n            layoutDependency === undefined ||\n            prevProps.isPresent !== isPresent) {\n            projection.willUpdate();\n        }\n        else {\n            this.safeToRemove();\n        }\n        if (prevProps.isPresent !== isPresent) {\n            if (isPresent) {\n                projection.promote();\n            }\n            else if (!projection.relegate()) {\n                /**\n                 * If there's another stack member taking over from this one,\n                 * it's in charge of the exit animation and therefore should\n                 * be in charge of the safe to remove. Otherwise we call it here.\n                 */\n                frame.postRender(() => {\n                    const stack = projection.getStack();\n                    if (!stack || !stack.members.length) {\n                        this.safeToRemove();\n                    }\n                });\n            }\n        }\n        return null;\n    }\n    componentDidUpdate() {\n        const { projection } = this.props.visualElement;\n        if (projection) {\n            projection.root.didUpdate();\n            microtask.postRender(() => {\n                if (!projection.currentAnimation && projection.isLead()) {\n                    this.safeToRemove();\n                }\n            });\n        }\n    }\n    componentWillUnmount() {\n        const { visualElement, layoutGroup, switchLayoutGroup: promoteContext, } = this.props;\n        const { projection } = visualElement;\n        if (projection) {\n            projection.scheduleCheckAfterUnmount();\n            if (layoutGroup && layoutGroup.group)\n                layoutGroup.group.remove(projection);\n            if (promoteContext && promoteContext.deregister)\n                promoteContext.deregister(projection);\n        }\n    }\n    safeToRemove() {\n        const { safeToRemove } = this.props;\n        safeToRemove && safeToRemove();\n    }\n    render() {\n        return null;\n    }\n}\nfunction MeasureLayout(props) {\n    const [isPresent, safeToRemove] = usePresence();\n    const layoutGroup = useContext(LayoutGroupContext);\n    return (jsx(MeasureLayoutWithContext, { ...props, layoutGroup: layoutGroup, switchLayoutGroup: useContext(SwitchLayoutGroupContext), isPresent: isPresent, safeToRemove: safeToRemove }));\n}\nconst defaultScaleCorrectors = {\n    borderRadius: {\n        ...correctBorderRadius,\n        applyTo: [\n            \"borderTopLeftRadius\",\n            \"borderTopRightRadius\",\n            \"borderBottomLeftRadius\",\n            \"borderBottomRightRadius\",\n        ],\n    },\n    borderTopLeftRadius: correctBorderRadius,\n    borderTopRightRadius: correctBorderRadius,\n    borderBottomLeftRadius: correctBorderRadius,\n    borderBottomRightRadius: correctBorderRadius,\n    boxShadow: correctBoxShadow,\n};\n\nexport { MeasureLayout };\n","import { isObject } from 'motion-utils';\n\n/**\n * Checks if an element is an SVG element in a way\n * that works across iframes\n */\nfunction isSVGElement(element) {\n    return isObject(element) && \"ownerSVGElement\" in element;\n}\n\nexport { isSVGElement };\n","const compareByDepth = (a, b) => a.depth - b.depth;\n\nexport { compareByDepth };\n","import { addUniqueItem, removeItem } from 'motion-utils';\nimport { compareByDepth } from './compare-by-depth.mjs';\n\nclass FlatTree {\n    constructor() {\n        this.children = [];\n        this.isDirty = false;\n    }\n    add(child) {\n        addUniqueItem(this.children, child);\n        this.isDirty = true;\n    }\n    remove(child) {\n        removeItem(this.children, child);\n        this.isDirty = true;\n    }\n    forEach(callback) {\n        this.isDirty && this.children.sort(compareByDepth);\n        this.isDirty = false;\n        this.children.forEach(callback);\n    }\n}\n\nexport { FlatTree };\n","import { time, frame, cancelFrame } from 'motion-dom';\nimport { secondsToMilliseconds } from 'motion-utils';\n\n/**\n * Timeout defined in ms\n */\nfunction delay(callback, timeout) {\n    const start = time.now();\n    const checkElapsed = ({ timestamp }) => {\n        const elapsed = timestamp - start;\n        if (elapsed >= timeout) {\n            cancelFrame(checkElapsed);\n            callback(elapsed - timeout);\n        }\n    };\n    frame.setup(checkElapsed, true);\n    return () => cancelFrame(checkElapsed);\n}\nfunction delayInSeconds(callback, timeout) {\n    return delay(callback, secondsToMilliseconds(timeout));\n}\n\nexport { delay, delayInSeconds };\n","import { mixNumber, percent, px } from 'motion-dom';\nimport { progress, circOut, noop } from 'motion-utils';\n\nconst borders = [\"TopLeft\", \"TopRight\", \"BottomLeft\", \"BottomRight\"];\nconst numBorders = borders.length;\nconst asNumber = (value) => typeof value === \"string\" ? parseFloat(value) : value;\nconst isPx = (value) => typeof value === \"number\" || px.test(value);\nfunction mixValues(target, follow, lead, progress, shouldCrossfadeOpacity, isOnlyMember) {\n    if (shouldCrossfadeOpacity) {\n        target.opacity = mixNumber(0, lead.opacity ?? 1, easeCrossfadeIn(progress));\n        target.opacityExit = mixNumber(follow.opacity ?? 1, 0, easeCrossfadeOut(progress));\n    }\n    else if (isOnlyMember) {\n        target.opacity = mixNumber(follow.opacity ?? 1, lead.opacity ?? 1, progress);\n    }\n    /**\n     * Mix border radius\n     */\n    for (let i = 0; i < numBorders; i++) {\n        const borderLabel = `border${borders[i]}Radius`;\n        let followRadius = getRadius(follow, borderLabel);\n        let leadRadius = getRadius(lead, borderLabel);\n        if (followRadius === undefined && leadRadius === undefined)\n            continue;\n        followRadius || (followRadius = 0);\n        leadRadius || (leadRadius = 0);\n        const canMix = followRadius === 0 ||\n            leadRadius === 0 ||\n            isPx(followRadius) === isPx(leadRadius);\n        if (canMix) {\n            target[borderLabel] = Math.max(mixNumber(asNumber(followRadius), asNumber(leadRadius), progress), 0);\n            if (percent.test(leadRadius) || percent.test(followRadius)) {\n                target[borderLabel] += \"%\";\n            }\n        }\n        else {\n            target[borderLabel] = leadRadius;\n        }\n    }\n    /**\n     * Mix rotation\n     */\n    if (follow.rotate || lead.rotate) {\n        target.rotate = mixNumber(follow.rotate || 0, lead.rotate || 0, progress);\n    }\n}\nfunction getRadius(values, radiusName) {\n    return values[radiusName] !== undefined\n        ? values[radiusName]\n        : values.borderRadius;\n}\n// /**\n//  * We only want to mix the background color if there's a follow element\n//  * that we're not crossfading opacity between. For instance with switch\n//  * AnimateSharedLayout animations, this helps the illusion of a continuous\n//  * element being animated but also cuts down on the number of paints triggered\n//  * for elements where opacity is doing that work for us.\n//  */\n// if (\n//     !hasFollowElement &&\n//     latestLeadValues.backgroundColor &&\n//     latestFollowValues.backgroundColor\n// ) {\n//     /**\n//      * This isn't ideal performance-wise as mixColor is creating a new function every frame.\n//      * We could probably create a mixer that runs at the start of the animation but\n//      * the idea behind the crossfader is that it runs dynamically between two potentially\n//      * changing targets (ie opacity or borderRadius may be animating independently via variants)\n//      */\n//     leadState.backgroundColor = followState.backgroundColor = mixColor(\n//         latestFollowValues.backgroundColor as string,\n//         latestLeadValues.backgroundColor as string\n//     )(p)\n// }\nconst easeCrossfadeIn = /*@__PURE__*/ compress(0, 0.5, circOut);\nconst easeCrossfadeOut = /*@__PURE__*/ compress(0.5, 0.95, noop);\nfunction compress(min, max, easing) {\n    return (p) => {\n        // Could replace ifs with clamp\n        if (p < min)\n            return 0;\n        if (p > max)\n            return 1;\n        return easing(progress(min, max, p));\n    };\n}\n\nexport { mixValues };\n","/**\n * Reset an axis to the provided origin box.\n *\n * This is a mutative operation.\n */\nfunction copyAxisInto(axis, originAxis) {\n    axis.min = originAxis.min;\n    axis.max = originAxis.max;\n}\n/**\n * Reset a box to the provided origin box.\n *\n * This is a mutative operation.\n */\nfunction copyBoxInto(box, originBox) {\n    copyAxisInto(box.x, originBox.x);\n    copyAxisInto(box.y, originBox.y);\n}\n/**\n * Reset a delta to the provided origin box.\n *\n * This is a mutative operation.\n */\nfunction copyAxisDeltaInto(delta, originDelta) {\n    delta.translate = originDelta.translate;\n    delta.scale = originDelta.scale;\n    delta.originPoint = originDelta.originPoint;\n    delta.origin = originDelta.origin;\n}\n\nexport { copyAxisDeltaInto, copyAxisInto, copyBoxInto };\n","import { percent, mixNumber } from 'motion-dom';\nimport { scalePoint } from './delta-apply.mjs';\n\n/**\n * Remove a delta from a point. This is essentially the steps of applyPointDelta in reverse\n */\nfunction removePointDelta(point, translate, scale, originPoint, boxScale) {\n    point -= translate;\n    point = scalePoint(point, 1 / scale, originPoint);\n    if (boxScale !== undefined) {\n        point = scalePoint(point, 1 / boxScale, originPoint);\n    }\n    return point;\n}\n/**\n * Remove a delta from an axis. This is essentially the steps of applyAxisDelta in reverse\n */\nfunction removeAxisDelta(axis, translate = 0, scale = 1, origin = 0.5, boxScale, originAxis = axis, sourceAxis = axis) {\n    if (percent.test(translate)) {\n        translate = parseFloat(translate);\n        const relativeProgress = mixNumber(sourceAxis.min, sourceAxis.max, translate / 100);\n        translate = relativeProgress - sourceAxis.min;\n    }\n    if (typeof translate !== \"number\")\n        return;\n    let originPoint = mixNumber(originAxis.min, originAxis.max, origin);\n    if (axis === originAxis)\n        originPoint -= translate;\n    axis.min = removePointDelta(axis.min, translate, scale, originPoint, boxScale);\n    axis.max = removePointDelta(axis.max, translate, scale, originPoint, boxScale);\n}\n/**\n * Remove a transforms from an axis. This is essentially the steps of applyAxisTransforms in reverse\n * and acts as a bridge between motion values and removeAxisDelta\n */\nfunction removeAxisTransforms(axis, transforms, [key, scaleKey, originKey], origin, sourceAxis) {\n    removeAxisDelta(axis, transforms[key], transforms[scaleKey], transforms[originKey], transforms.scale, origin, sourceAxis);\n}\n/**\n * The names of the motion values we want to apply as translation, scale and origin.\n */\nconst xKeys = [\"x\", \"scaleX\", \"originX\"];\nconst yKeys = [\"y\", \"scaleY\", \"originY\"];\n/**\n * Remove a transforms from an box. This is essentially the steps of applyAxisBox in reverse\n * and acts as a bridge between motion values and removeAxisDelta\n */\nfunction removeBoxTransforms(box, transforms, originBox, sourceBox) {\n    removeAxisTransforms(box.x, transforms, xKeys, originBox ? originBox.x : undefined, sourceBox ? sourceBox.x : undefined);\n    removeAxisTransforms(box.y, transforms, yKeys, originBox ? originBox.y : undefined, sourceBox ? sourceBox.y : undefined);\n}\n\nexport { removeAxisDelta, removeAxisTransforms, removeBoxTransforms, removePointDelta };\n","import { calcLength } from './delta-calc.mjs';\n\nfunction isAxisDeltaZero(delta) {\n    return delta.translate === 0 && delta.scale === 1;\n}\nfunction isDeltaZero(delta) {\n    return isAxisDeltaZero(delta.x) && isAxisDeltaZero(delta.y);\n}\nfunction axisEquals(a, b) {\n    return a.min === b.min && a.max === b.max;\n}\nfunction boxEquals(a, b) {\n    return axisEquals(a.x, b.x) && axisEquals(a.y, b.y);\n}\nfunction axisEqualsRounded(a, b) {\n    return (Math.round(a.min) === Math.round(b.min) &&\n        Math.round(a.max) === Math.round(b.max));\n}\nfunction boxEqualsRounded(a, b) {\n    return axisEqualsRounded(a.x, b.x) && axisEqualsRounded(a.y, b.y);\n}\nfunction aspectRatio(box) {\n    return calcLength(box.x) / calcLength(box.y);\n}\nfunction axisDeltaEquals(a, b) {\n    return (a.translate === b.translate &&\n        a.scale === b.scale &&\n        a.originPoint === b.originPoint);\n}\n\nexport { aspectRatio, axisDeltaEquals, axisEquals, axisEqualsRounded, boxEquals, boxEqualsRounded, isDeltaZero };\n","import { addUniqueItem, removeItem } from 'motion-utils';\n\nclass NodeStack {\n    constructor() {\n        this.members = [];\n    }\n    add(node) {\n        addUniqueItem(this.members, node);\n        node.scheduleRender();\n    }\n    remove(node) {\n        removeItem(this.members, node);\n        if (node === this.prevLead) {\n            this.prevLead = undefined;\n        }\n        if (node === this.lead) {\n            const prevLead = this.members[this.members.length - 1];\n            if (prevLead) {\n                this.promote(prevLead);\n            }\n        }\n    }\n    relegate(node) {\n        const indexOfNode = this.members.findIndex((member) => node === member);\n        if (indexOfNode === 0)\n            return false;\n        /**\n         * Find the next projection node that is present\n         */\n        let prevLead;\n        for (let i = indexOfNode; i >= 0; i--) {\n            const member = this.members[i];\n            if (member.isPresent !== false) {\n                prevLead = member;\n                break;\n            }\n        }\n        if (prevLead) {\n            this.promote(prevLead);\n            return true;\n        }\n        else {\n            return false;\n        }\n    }\n    promote(node, preserveFollowOpacity) {\n        const prevLead = this.lead;\n        if (node === prevLead)\n            return;\n        this.prevLead = prevLead;\n        this.lead = node;\n        node.show();\n        if (prevLead) {\n            prevLead.instance && prevLead.scheduleRender();\n            node.scheduleRender();\n            node.resumeFrom = prevLead;\n            if (preserveFollowOpacity) {\n                node.resumeFrom.preserveOpacity = true;\n            }\n            if (prevLead.snapshot) {\n                node.snapshot = prevLead.snapshot;\n                node.snapshot.latestValues =\n                    prevLead.animationValues || prevLead.latestValues;\n            }\n            if (node.root && node.root.isUpdating) {\n                node.isLayoutDirty = true;\n            }\n            const { crossfade } = node.options;\n            if (crossfade === false) {\n                prevLead.hide();\n            }\n            /**\n             * TODO:\n             *   - Test border radius when previous node was deleted\n             *   - boxShadow mixing\n             *   - Shared between element A in scrolled container and element B (scroll stays the same or changes)\n             *   - Shared between element A in transformed container and element B (transform stays the same or changes)\n             *   - Shared between element A in scrolled page and element B (scroll stays the same or changes)\n             * ---\n             *   - Crossfade opacity of root nodes\n             *   - layoutId changes after animation\n             *   - layoutId changes mid animation\n             */\n        }\n    }\n    exitAnimationComplete() {\n        this.members.forEach((node) => {\n            const { options, resumingFrom } = node;\n            options.onExitComplete && options.onExitComplete();\n            if (resumingFrom) {\n                resumingFrom.options.onExitComplete &&\n                    resumingFrom.options.onExitComplete();\n            }\n        });\n    }\n    scheduleRender() {\n        this.members.forEach((node) => {\n            node.instance && node.scheduleRender(false);\n        });\n    }\n    /**\n     * Clear any leads that have been removed this render to prevent them from being\n     * used in future animations and to prevent memory leaks\n     */\n    removeLeadSnapshot() {\n        if (this.lead && this.lead.snapshot) {\n            this.lead.snapshot = undefined;\n        }\n    }\n}\n\nexport { NodeStack };\n","import { statsBuffer, isSVGElement, isSVGSVGElement, frame, getValueTransition, cancelFrame, time, frameData, frameSteps, microtask, activeAnimations, motionValue, mixNumber } from 'motion-dom';\nimport { SubscriptionManager, clamp, noop } from 'motion-utils';\nimport { animateSingleValue } from '../../animation/animate/single-value.mjs';\nimport { getOptimisedAppearId } from '../../animation/optimized-appear/get-appear-id.mjs';\nimport { FlatTree } from '../../render/utils/flat-tree.mjs';\nimport { delay } from '../../utils/delay.mjs';\nimport { resolveMotionValue } from '../../value/utils/resolve-motion-value.mjs';\nimport { mixValues } from '../animation/mix-values.mjs';\nimport { copyBoxInto, copyAxisDeltaInto } from '../geometry/copy.mjs';\nimport { translateAxis, transformBox, applyBoxDelta, applyTreeDeltas } from '../geometry/delta-apply.mjs';\nimport { calcLength, calcRelativePosition, calcRelativeBox, calcBoxDelta, isNear } from '../geometry/delta-calc.mjs';\nimport { removeBoxTransforms } from '../geometry/delta-remove.mjs';\nimport { createBox, createDelta } from '../geometry/models.mjs';\nimport { boxEqualsRounded, isDeltaZero, axisDeltaEquals, aspectRatio, boxEquals } from '../geometry/utils.mjs';\nimport { NodeStack } from '../shared/stack.mjs';\nimport { scaleCorrectors } from '../styles/scale-correction.mjs';\nimport { buildProjectionTransform } from '../styles/transform.mjs';\nimport { eachAxis } from '../utils/each-axis.mjs';\nimport { hasTransform, hasScale, has2DTranslate } from '../utils/has-transform.mjs';\nimport { globalProjectionState } from './state.mjs';\n\nconst metrics = {\n    nodes: 0,\n    calculatedTargetDeltas: 0,\n    calculatedProjections: 0,\n};\nconst transformAxes = [\"\", \"X\", \"Y\", \"Z\"];\n/**\n * We use 1000 as the animation target as 0-1000 maps better to pixels than 0-1\n * which has a noticeable difference in spring animations\n */\nconst animationTarget = 1000;\nlet id = 0;\nfunction resetDistortingTransform(key, visualElement, values, sharedAnimationValues) {\n    const { latestValues } = visualElement;\n    // Record the distorting transform and then temporarily set it to 0\n    if (latestValues[key]) {\n        values[key] = latestValues[key];\n        visualElement.setStaticValue(key, 0);\n        if (sharedAnimationValues) {\n            sharedAnimationValues[key] = 0;\n        }\n    }\n}\nfunction cancelTreeOptimisedTransformAnimations(projectionNode) {\n    projectionNode.hasCheckedOptimisedAppear = true;\n    if (projectionNode.root === projectionNode)\n        return;\n    const { visualElement } = projectionNode.options;\n    if (!visualElement)\n        return;\n    const appearId = getOptimisedAppearId(visualElement);\n    if (window.MotionHasOptimisedAnimation(appearId, \"transform\")) {\n        const { layout, layoutId } = projectionNode.options;\n        window.MotionCancelOptimisedAnimation(appearId, \"transform\", frame, !(layout || layoutId));\n    }\n    const { parent } = projectionNode;\n    if (parent && !parent.hasCheckedOptimisedAppear) {\n        cancelTreeOptimisedTransformAnimations(parent);\n    }\n}\nfunction createProjectionNode({ attachResizeListener, defaultParent, measureScroll, checkIsScrollRoot, resetTransform, }) {\n    return class ProjectionNode {\n        constructor(latestValues = {}, parent = defaultParent?.()) {\n            /**\n             * A unique ID generated for every projection node.\n             */\n            this.id = id++;\n            /**\n             * An id that represents a unique session instigated by startUpdate.\n             */\n            this.animationId = 0;\n            this.animationCommitId = 0;\n            /**\n             * A Set containing all this component's children. This is used to iterate\n             * through the children.\n             *\n             * TODO: This could be faster to iterate as a flat array stored on the root node.\n             */\n            this.children = new Set();\n            /**\n             * Options for the node. We use this to configure what kind of layout animations\n             * we should perform (if any).\n             */\n            this.options = {};\n            /**\n             * We use this to detect when its safe to shut down part of a projection tree.\n             * We have to keep projecting children for scale correction and relative projection\n             * until all their parents stop performing layout animations.\n             */\n            this.isTreeAnimating = false;\n            this.isAnimationBlocked = false;\n            /**\n             * Flag to true if we think this layout has been changed. We can't always know this,\n             * currently we set it to true every time a component renders, or if it has a layoutDependency\n             * if that has changed between renders. Additionally, components can be grouped by LayoutGroup\n             * and if one node is dirtied, they all are.\n             */\n            this.isLayoutDirty = false;\n            /**\n             * Flag to true if we think the projection calculations for this node needs\n             * recalculating as a result of an updated transform or layout animation.\n             */\n            this.isProjectionDirty = false;\n            /**\n             * Flag to true if the layout *or* transform has changed. This then gets propagated\n             * throughout the projection tree, forcing any element below to recalculate on the next frame.\n             */\n            this.isSharedProjectionDirty = false;\n            /**\n             * Flag transform dirty. This gets propagated throughout the whole tree but is only\n             * respected by shared nodes.\n             */\n            this.isTransformDirty = false;\n            /**\n             * Block layout updates for instant layout transitions throughout the tree.\n             */\n            this.updateManuallyBlocked = false;\n            this.updateBlockedByResize = false;\n            /**\n             * Set to true between the start of the first `willUpdate` call and the end of the `didUpdate`\n             * call.\n             */\n            this.isUpdating = false;\n            /**\n             * If this is an SVG element we currently disable projection transforms\n             */\n            this.isSVG = false;\n            /**\n             * Flag to true (during promotion) if a node doing an instant layout transition needs to reset\n             * its projection styles.\n             */\n            this.needsReset = false;\n            /**\n             * Flags whether this node should have its transform reset prior to measuring.\n             */\n            this.shouldResetTransform = false;\n            /**\n             * Store whether this node has been checked for optimised appear animations. As\n             * effects fire bottom-up, and we want to look up the tree for appear animations,\n             * this makes sure we only check each path once, stopping at nodes that\n             * have already been checked.\n             */\n            this.hasCheckedOptimisedAppear = false;\n            /**\n             * An object representing the calculated contextual/accumulated/tree scale.\n             * This will be used to scale calculcated projection transforms, as these are\n             * calculated in screen-space but need to be scaled for elements to layoutly\n             * make it to their calculated destinations.\n             *\n             * TODO: Lazy-init\n             */\n            this.treeScale = { x: 1, y: 1 };\n            /**\n             *\n             */\n            this.eventHandlers = new Map();\n            this.hasTreeAnimated = false;\n            // Note: Currently only running on root node\n            this.updateScheduled = false;\n            this.scheduleUpdate = () => this.update();\n            this.projectionUpdateScheduled = false;\n            this.checkUpdateFailed = () => {\n                if (this.isUpdating) {\n                    this.isUpdating = false;\n                    this.clearAllSnapshots();\n                }\n            };\n            /**\n             * This is a multi-step process as shared nodes might be of different depths. Nodes\n             * are sorted by depth order, so we need to resolve the entire tree before moving to\n             * the next step.\n             */\n            this.updateProjection = () => {\n                this.projectionUpdateScheduled = false;\n                /**\n                 * Reset debug counts. Manually resetting rather than creating a new\n                 * object each frame.\n                 */\n                if (statsBuffer.value) {\n                    metrics.nodes =\n                        metrics.calculatedTargetDeltas =\n                            metrics.calculatedProjections =\n                                0;\n                }\n                this.nodes.forEach(propagateDirtyNodes);\n                this.nodes.forEach(resolveTargetDelta);\n                this.nodes.forEach(calcProjection);\n                this.nodes.forEach(cleanDirtyNodes);\n                if (statsBuffer.addProjectionMetrics) {\n                    statsBuffer.addProjectionMetrics(metrics);\n                }\n            };\n            /**\n             * Frame calculations\n             */\n            this.resolvedRelativeTargetAt = 0.0;\n            this.hasProjected = false;\n            this.isVisible = true;\n            this.animationProgress = 0;\n            /**\n             * Shared layout\n             */\n            // TODO Only running on root node\n            this.sharedNodes = new Map();\n            this.latestValues = latestValues;\n            this.root = parent ? parent.root || parent : this;\n            this.path = parent ? [...parent.path, parent] : [];\n            this.parent = parent;\n            this.depth = parent ? parent.depth + 1 : 0;\n            for (let i = 0; i < this.path.length; i++) {\n                this.path[i].shouldResetTransform = true;\n            }\n            if (this.root === this)\n                this.nodes = new FlatTree();\n        }\n        addEventListener(name, handler) {\n            if (!this.eventHandlers.has(name)) {\n                this.eventHandlers.set(name, new SubscriptionManager());\n            }\n            return this.eventHandlers.get(name).add(handler);\n        }\n        notifyListeners(name, ...args) {\n            const subscriptionManager = this.eventHandlers.get(name);\n            subscriptionManager && subscriptionManager.notify(...args);\n        }\n        hasListeners(name) {\n            return this.eventHandlers.has(name);\n        }\n        /**\n         * Lifecycles\n         */\n        mount(instance) {\n            if (this.instance)\n                return;\n            this.isSVG = isSVGElement(instance) && !isSVGSVGElement(instance);\n            this.instance = instance;\n            const { layoutId, layout, visualElement } = this.options;\n            if (visualElement && !visualElement.current) {\n                visualElement.mount(instance);\n            }\n            this.root.nodes.add(this);\n            this.parent && this.parent.children.add(this);\n            if (this.root.hasTreeAnimated && (layout || layoutId)) {\n                this.isLayoutDirty = true;\n            }\n            if (attachResizeListener) {\n                let cancelDelay;\n                let innerWidth = 0;\n                const resizeUnblockUpdate = () => (this.root.updateBlockedByResize = false);\n                // Set initial innerWidth in a frame.read callback to batch the read\n                frame.read(() => {\n                    innerWidth = window.innerWidth;\n                });\n                attachResizeListener(instance, () => {\n                    const newInnerWidth = window.innerWidth;\n                    if (newInnerWidth === innerWidth)\n                        return;\n                    innerWidth = newInnerWidth;\n                    this.root.updateBlockedByResize = true;\n                    cancelDelay && cancelDelay();\n                    cancelDelay = delay(resizeUnblockUpdate, 250);\n                    if (globalProjectionState.hasAnimatedSinceResize) {\n                        globalProjectionState.hasAnimatedSinceResize = false;\n                        this.nodes.forEach(finishAnimation);\n                    }\n                });\n            }\n            if (layoutId) {\n                this.root.registerSharedNode(layoutId, this);\n            }\n            // Only register the handler if it requires layout animation\n            if (this.options.animate !== false &&\n                visualElement &&\n                (layoutId || layout)) {\n                this.addEventListener(\"didUpdate\", ({ delta, hasLayoutChanged, hasRelativeLayoutChanged, layout: newLayout, }) => {\n                    if (this.isTreeAnimationBlocked()) {\n                        this.target = undefined;\n                        this.relativeTarget = undefined;\n                        return;\n                    }\n                    // TODO: Check here if an animation exists\n                    const layoutTransition = this.options.transition ||\n                        visualElement.getDefaultTransition() ||\n                        defaultLayoutTransition;\n                    const { onLayoutAnimationStart, onLayoutAnimationComplete, } = visualElement.getProps();\n                    /**\n                     * The target layout of the element might stay the same,\n                     * but its position relative to its parent has changed.\n                     */\n                    const hasTargetChanged = !this.targetLayout ||\n                        !boxEqualsRounded(this.targetLayout, newLayout);\n                    /*\n                     * Note: Disabled to fix relative animations always triggering new\n                     * layout animations. If this causes further issues, we can try\n                     * a different approach to detecting relative target changes.\n                     */\n                    // || hasRelativeLayoutChanged\n                    /**\n                     * If the layout hasn't seemed to have changed, it might be that the\n                     * element is visually in the same place in the document but its position\n                     * relative to its parent has indeed changed. So here we check for that.\n                     */\n                    const hasOnlyRelativeTargetChanged = !hasLayoutChanged && hasRelativeLayoutChanged;\n                    if (this.options.layoutRoot ||\n                        this.resumeFrom ||\n                        hasOnlyRelativeTargetChanged ||\n                        (hasLayoutChanged &&\n                            (hasTargetChanged || !this.currentAnimation))) {\n                        if (this.resumeFrom) {\n                            this.resumingFrom = this.resumeFrom;\n                            this.resumingFrom.resumingFrom = undefined;\n                        }\n                        const animationOptions = {\n                            ...getValueTransition(layoutTransition, \"layout\"),\n                            onPlay: onLayoutAnimationStart,\n                            onComplete: onLayoutAnimationComplete,\n                        };\n                        if (visualElement.shouldReduceMotion ||\n                            this.options.layoutRoot) {\n                            animationOptions.delay = 0;\n                            animationOptions.type = false;\n                        }\n                        this.startAnimation(animationOptions);\n                        /**\n                         * Set animation origin after starting animation to avoid layout jump\n                         * caused by stopping previous layout animation\n                         */\n                        this.setAnimationOrigin(delta, hasOnlyRelativeTargetChanged);\n                    }\n                    else {\n                        /**\n                         * If the layout hasn't changed and we have an animation that hasn't started yet,\n                         * finish it immediately. Otherwise it will be animating from a location\n                         * that was probably never commited to screen and look like a jumpy box.\n                         */\n                        if (!hasLayoutChanged) {\n                            finishAnimation(this);\n                        }\n                        if (this.isLead() && this.options.onExitComplete) {\n                            this.options.onExitComplete();\n                        }\n                    }\n                    this.targetLayout = newLayout;\n                });\n            }\n        }\n        unmount() {\n            this.options.layoutId && this.willUpdate();\n            this.root.nodes.remove(this);\n            const stack = this.getStack();\n            stack && stack.remove(this);\n            this.parent && this.parent.children.delete(this);\n            this.instance = undefined;\n            this.eventHandlers.clear();\n            cancelFrame(this.updateProjection);\n        }\n        // only on the root\n        blockUpdate() {\n            this.updateManuallyBlocked = true;\n        }\n        unblockUpdate() {\n            this.updateManuallyBlocked = false;\n        }\n        isUpdateBlocked() {\n            return this.updateManuallyBlocked || this.updateBlockedByResize;\n        }\n        isTreeAnimationBlocked() {\n            return (this.isAnimationBlocked ||\n                (this.parent && this.parent.isTreeAnimationBlocked()) ||\n                false);\n        }\n        // Note: currently only running on root node\n        startUpdate() {\n            if (this.isUpdateBlocked())\n                return;\n            this.isUpdating = true;\n            this.nodes && this.nodes.forEach(resetSkewAndRotation);\n            this.animationId++;\n        }\n        getTransformTemplate() {\n            const { visualElement } = this.options;\n            return visualElement && visualElement.getProps().transformTemplate;\n        }\n        willUpdate(shouldNotifyListeners = true) {\n            this.root.hasTreeAnimated = true;\n            if (this.root.isUpdateBlocked()) {\n                this.options.onExitComplete && this.options.onExitComplete();\n                return;\n            }\n            /**\n             * If we're running optimised appear animations then these must be\n             * cancelled before measuring the DOM. This is so we can measure\n             * the true layout of the element rather than the WAAPI animation\n             * which will be unaffected by the resetSkewAndRotate step.\n             *\n             * Note: This is a DOM write. Worst case scenario is this is sandwiched\n             * between other snapshot reads which will cause unnecessary style recalculations.\n             * This has to happen here though, as we don't yet know which nodes will need\n             * snapshots in startUpdate(), but we only want to cancel optimised animations\n             * if a layout animation measurement is actually going to be affected by them.\n             */\n            if (window.MotionCancelOptimisedAnimation &&\n                !this.hasCheckedOptimisedAppear) {\n                cancelTreeOptimisedTransformAnimations(this);\n            }\n            !this.root.isUpdating && this.root.startUpdate();\n            if (this.isLayoutDirty)\n                return;\n            this.isLayoutDirty = true;\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                node.shouldResetTransform = true;\n                node.updateScroll(\"snapshot\");\n                if (node.options.layoutRoot) {\n                    node.willUpdate(false);\n                }\n            }\n            const { layoutId, layout } = this.options;\n            if (layoutId === undefined && !layout)\n                return;\n            const transformTemplate = this.getTransformTemplate();\n            this.prevTransformTemplateValue = transformTemplate\n                ? transformTemplate(this.latestValues, \"\")\n                : undefined;\n            this.updateSnapshot();\n            shouldNotifyListeners && this.notifyListeners(\"willUpdate\");\n        }\n        update() {\n            this.updateScheduled = false;\n            const updateWasBlocked = this.isUpdateBlocked();\n            // When doing an instant transition, we skip the layout update,\n            // but should still clean up the measurements so that the next\n            // snapshot could be taken correctly.\n            if (updateWasBlocked) {\n                this.unblockUpdate();\n                this.clearAllSnapshots();\n                this.nodes.forEach(clearMeasurements);\n                return;\n            }\n            /**\n             * If this is a repeat of didUpdate then ignore the animation.\n             */\n            if (this.animationId <= this.animationCommitId) {\n                this.nodes.forEach(clearIsLayoutDirty);\n                return;\n            }\n            this.animationCommitId = this.animationId;\n            if (!this.isUpdating) {\n                this.nodes.forEach(clearIsLayoutDirty);\n            }\n            else {\n                this.isUpdating = false;\n                /**\n                 * Write\n                 */\n                this.nodes.forEach(resetTransformStyle);\n                /**\n                 * Read ==================\n                 */\n                // Update layout measurements of updated children\n                this.nodes.forEach(updateLayout);\n                /**\n                 * Write\n                 */\n                // Notify listeners that the layout is updated\n                this.nodes.forEach(notifyLayoutUpdate);\n            }\n            this.clearAllSnapshots();\n            /**\n             * Manually flush any pending updates. Ideally\n             * we could leave this to the following requestAnimationFrame but this seems\n             * to leave a flash of incorrectly styled content.\n             */\n            const now = time.now();\n            frameData.delta = clamp(0, 1000 / 60, now - frameData.timestamp);\n            frameData.timestamp = now;\n            frameData.isProcessing = true;\n            frameSteps.update.process(frameData);\n            frameSteps.preRender.process(frameData);\n            frameSteps.render.process(frameData);\n            frameData.isProcessing = false;\n        }\n        didUpdate() {\n            if (!this.updateScheduled) {\n                this.updateScheduled = true;\n                microtask.read(this.scheduleUpdate);\n            }\n        }\n        clearAllSnapshots() {\n            this.nodes.forEach(clearSnapshot);\n            this.sharedNodes.forEach(removeLeadSnapshots);\n        }\n        scheduleUpdateProjection() {\n            if (!this.projectionUpdateScheduled) {\n                this.projectionUpdateScheduled = true;\n                frame.preRender(this.updateProjection, false, true);\n            }\n        }\n        scheduleCheckAfterUnmount() {\n            /**\n             * If the unmounting node is in a layoutGroup and did trigger a willUpdate,\n             * we manually call didUpdate to give a chance to the siblings to animate.\n             * Otherwise, cleanup all snapshots to prevents future nodes from reusing them.\n             */\n            frame.postRender(() => {\n                if (this.isLayoutDirty) {\n                    this.root.didUpdate();\n                }\n                else {\n                    this.root.checkUpdateFailed();\n                }\n            });\n        }\n        /**\n         * Update measurements\n         */\n        updateSnapshot() {\n            if (this.snapshot || !this.instance)\n                return;\n            this.snapshot = this.measure();\n            if (this.snapshot &&\n                !calcLength(this.snapshot.measuredBox.x) &&\n                !calcLength(this.snapshot.measuredBox.y)) {\n                this.snapshot = undefined;\n            }\n        }\n        updateLayout() {\n            if (!this.instance)\n                return;\n            this.updateScroll();\n            if (!(this.options.alwaysMeasureLayout && this.isLead()) &&\n                !this.isLayoutDirty) {\n                return;\n            }\n            /**\n             * When a node is mounted, it simply resumes from the prevLead's\n             * snapshot instead of taking a new one, but the ancestors scroll\n             * might have updated while the prevLead is unmounted. We need to\n             * update the scroll again to make sure the layout we measure is\n             * up to date.\n             */\n            if (this.resumeFrom && !this.resumeFrom.instance) {\n                for (let i = 0; i < this.path.length; i++) {\n                    const node = this.path[i];\n                    node.updateScroll();\n                }\n            }\n            const prevLayout = this.layout;\n            this.layout = this.measure(false);\n            this.layoutCorrected = createBox();\n            this.isLayoutDirty = false;\n            this.projectionDelta = undefined;\n            this.notifyListeners(\"measure\", this.layout.layoutBox);\n            const { visualElement } = this.options;\n            visualElement &&\n                visualElement.notify(\"LayoutMeasure\", this.layout.layoutBox, prevLayout ? prevLayout.layoutBox : undefined);\n        }\n        updateScroll(phase = \"measure\") {\n            let needsMeasurement = Boolean(this.options.layoutScroll && this.instance);\n            if (this.scroll &&\n                this.scroll.animationId === this.root.animationId &&\n                this.scroll.phase === phase) {\n                needsMeasurement = false;\n            }\n            if (needsMeasurement && this.instance) {\n                const isRoot = checkIsScrollRoot(this.instance);\n                this.scroll = {\n                    animationId: this.root.animationId,\n                    phase,\n                    isRoot,\n                    offset: measureScroll(this.instance),\n                    wasRoot: this.scroll ? this.scroll.isRoot : isRoot,\n                };\n            }\n        }\n        resetTransform() {\n            if (!resetTransform)\n                return;\n            const isResetRequested = this.isLayoutDirty ||\n                this.shouldResetTransform ||\n                this.options.alwaysMeasureLayout;\n            const hasProjection = this.projectionDelta && !isDeltaZero(this.projectionDelta);\n            const transformTemplate = this.getTransformTemplate();\n            const transformTemplateValue = transformTemplate\n                ? transformTemplate(this.latestValues, \"\")\n                : undefined;\n            const transformTemplateHasChanged = transformTemplateValue !== this.prevTransformTemplateValue;\n            if (isResetRequested &&\n                this.instance &&\n                (hasProjection ||\n                    hasTransform(this.latestValues) ||\n                    transformTemplateHasChanged)) {\n                resetTransform(this.instance, transformTemplateValue);\n                this.shouldResetTransform = false;\n                this.scheduleRender();\n            }\n        }\n        measure(removeTransform = true) {\n            const pageBox = this.measurePageBox();\n            let layoutBox = this.removeElementScroll(pageBox);\n            /**\n             * Measurements taken during the pre-render stage\n             * still have transforms applied so we remove them\n             * via calculation.\n             */\n            if (removeTransform) {\n                layoutBox = this.removeTransform(layoutBox);\n            }\n            roundBox(layoutBox);\n            return {\n                animationId: this.root.animationId,\n                measuredBox: pageBox,\n                layoutBox,\n                latestValues: {},\n                source: this.id,\n            };\n        }\n        measurePageBox() {\n            const { visualElement } = this.options;\n            if (!visualElement)\n                return createBox();\n            const box = visualElement.measureViewportBox();\n            const wasInScrollRoot = this.scroll?.wasRoot || this.path.some(checkNodeWasScrollRoot);\n            if (!wasInScrollRoot) {\n                // Remove viewport scroll to give page-relative coordinates\n                const { scroll } = this.root;\n                if (scroll) {\n                    translateAxis(box.x, scroll.offset.x);\n                    translateAxis(box.y, scroll.offset.y);\n                }\n            }\n            return box;\n        }\n        removeElementScroll(box) {\n            const boxWithoutScroll = createBox();\n            copyBoxInto(boxWithoutScroll, box);\n            if (this.scroll?.wasRoot) {\n                return boxWithoutScroll;\n            }\n            /**\n             * Performance TODO: Keep a cumulative scroll offset down the tree\n             * rather than loop back up the path.\n             */\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                const { scroll, options } = node;\n                if (node !== this.root && scroll && options.layoutScroll) {\n                    /**\n                     * If this is a new scroll root, we want to remove all previous scrolls\n                     * from the viewport box.\n                     */\n                    if (scroll.wasRoot) {\n                        copyBoxInto(boxWithoutScroll, box);\n                    }\n                    translateAxis(boxWithoutScroll.x, scroll.offset.x);\n                    translateAxis(boxWithoutScroll.y, scroll.offset.y);\n                }\n            }\n            return boxWithoutScroll;\n        }\n        applyTransform(box, transformOnly = false) {\n            const withTransforms = createBox();\n            copyBoxInto(withTransforms, box);\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                if (!transformOnly &&\n                    node.options.layoutScroll &&\n                    node.scroll &&\n                    node !== node.root) {\n                    transformBox(withTransforms, {\n                        x: -node.scroll.offset.x,\n                        y: -node.scroll.offset.y,\n                    });\n                }\n                if (!hasTransform(node.latestValues))\n                    continue;\n                transformBox(withTransforms, node.latestValues);\n            }\n            if (hasTransform(this.latestValues)) {\n                transformBox(withTransforms, this.latestValues);\n            }\n            return withTransforms;\n        }\n        removeTransform(box) {\n            const boxWithoutTransform = createBox();\n            copyBoxInto(boxWithoutTransform, box);\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                if (!node.instance)\n                    continue;\n                if (!hasTransform(node.latestValues))\n                    continue;\n                hasScale(node.latestValues) && node.updateSnapshot();\n                const sourceBox = createBox();\n                const nodeBox = node.measurePageBox();\n                copyBoxInto(sourceBox, nodeBox);\n                removeBoxTransforms(boxWithoutTransform, node.latestValues, node.snapshot ? node.snapshot.layoutBox : undefined, sourceBox);\n            }\n            if (hasTransform(this.latestValues)) {\n                removeBoxTransforms(boxWithoutTransform, this.latestValues);\n            }\n            return boxWithoutTransform;\n        }\n        setTargetDelta(delta) {\n            this.targetDelta = delta;\n            this.root.scheduleUpdateProjection();\n            this.isProjectionDirty = true;\n        }\n        setOptions(options) {\n            this.options = {\n                ...this.options,\n                ...options,\n                crossfade: options.crossfade !== undefined ? options.crossfade : true,\n            };\n        }\n        clearMeasurements() {\n            this.scroll = undefined;\n            this.layout = undefined;\n            this.snapshot = undefined;\n            this.prevTransformTemplateValue = undefined;\n            this.targetDelta = undefined;\n            this.target = undefined;\n            this.isLayoutDirty = false;\n        }\n        forceRelativeParentToResolveTarget() {\n            if (!this.relativeParent)\n                return;\n            /**\n             * If the parent target isn't up-to-date, force it to update.\n             * This is an unfortunate de-optimisation as it means any updating relative\n             * projection will cause all the relative parents to recalculate back\n             * up the tree.\n             */\n            if (this.relativeParent.resolvedRelativeTargetAt !==\n                frameData.timestamp) {\n                this.relativeParent.resolveTargetDelta(true);\n            }\n        }\n        resolveTargetDelta(forceRecalculation = false) {\n            /**\n             * Once the dirty status of nodes has been spread through the tree, we also\n             * need to check if we have a shared node of a different depth that has itself\n             * been dirtied.\n             */\n            const lead = this.getLead();\n            this.isProjectionDirty || (this.isProjectionDirty = lead.isProjectionDirty);\n            this.isTransformDirty || (this.isTransformDirty = lead.isTransformDirty);\n            this.isSharedProjectionDirty || (this.isSharedProjectionDirty = lead.isSharedProjectionDirty);\n            const isShared = Boolean(this.resumingFrom) || this !== lead;\n            /**\n             * We don't use transform for this step of processing so we don't\n             * need to check whether any nodes have changed transform.\n             */\n            const canSkip = !(forceRecalculation ||\n                (isShared && this.isSharedProjectionDirty) ||\n                this.isProjectionDirty ||\n                this.parent?.isProjectionDirty ||\n                this.attemptToResolveRelativeTarget ||\n                this.root.updateBlockedByResize);\n            if (canSkip)\n                return;\n            const { layout, layoutId } = this.options;\n            /**\n             * If we have no layout, we can't perform projection, so early return\n             */\n            if (!this.layout || !(layout || layoutId))\n                return;\n            this.resolvedRelativeTargetAt = frameData.timestamp;\n            /**\n             * If we don't have a targetDelta but do have a layout, we can attempt to resolve\n             * a relativeParent. This will allow a component to perform scale correction\n             * even if no animation has started.\n             */\n            if (!this.targetDelta && !this.relativeTarget) {\n                const relativeParent = this.getClosestProjectingParent();\n                if (relativeParent &&\n                    relativeParent.layout &&\n                    this.animationProgress !== 1) {\n                    this.relativeParent = relativeParent;\n                    this.forceRelativeParentToResolveTarget();\n                    this.relativeTarget = createBox();\n                    this.relativeTargetOrigin = createBox();\n                    calcRelativePosition(this.relativeTargetOrigin, this.layout.layoutBox, relativeParent.layout.layoutBox);\n                    copyBoxInto(this.relativeTarget, this.relativeTargetOrigin);\n                }\n                else {\n                    this.relativeParent = this.relativeTarget = undefined;\n                }\n            }\n            /**\n             * If we have no relative target or no target delta our target isn't valid\n             * for this frame.\n             */\n            if (!this.relativeTarget && !this.targetDelta)\n                return;\n            /**\n             * Lazy-init target data structure\n             */\n            if (!this.target) {\n                this.target = createBox();\n                this.targetWithTransforms = createBox();\n            }\n            /**\n             * If we've got a relative box for this component, resolve it into a target relative to the parent.\n             */\n            if (this.relativeTarget &&\n                this.relativeTargetOrigin &&\n                this.relativeParent &&\n                this.relativeParent.target) {\n                this.forceRelativeParentToResolveTarget();\n                calcRelativeBox(this.target, this.relativeTarget, this.relativeParent.target);\n                /**\n                 * If we've only got a targetDelta, resolve it into a target\n                 */\n            }\n            else if (this.targetDelta) {\n                if (Boolean(this.resumingFrom)) {\n                    // TODO: This is creating a new object every frame\n                    this.target = this.applyTransform(this.layout.layoutBox);\n                }\n                else {\n                    copyBoxInto(this.target, this.layout.layoutBox);\n                }\n                applyBoxDelta(this.target, this.targetDelta);\n            }\n            else {\n                /**\n                 * If no target, use own layout as target\n                 */\n                copyBoxInto(this.target, this.layout.layoutBox);\n            }\n            /**\n             * If we've been told to attempt to resolve a relative target, do so.\n             */\n            if (this.attemptToResolveRelativeTarget) {\n                this.attemptToResolveRelativeTarget = false;\n                const relativeParent = this.getClosestProjectingParent();\n                if (relativeParent &&\n                    Boolean(relativeParent.resumingFrom) ===\n                        Boolean(this.resumingFrom) &&\n                    !relativeParent.options.layoutScroll &&\n                    relativeParent.target &&\n                    this.animationProgress !== 1) {\n                    this.relativeParent = relativeParent;\n                    this.forceRelativeParentToResolveTarget();\n                    this.relativeTarget = createBox();\n                    this.relativeTargetOrigin = createBox();\n                    calcRelativePosition(this.relativeTargetOrigin, this.target, relativeParent.target);\n                    copyBoxInto(this.relativeTarget, this.relativeTargetOrigin);\n                }\n                else {\n                    this.relativeParent = this.relativeTarget = undefined;\n                }\n            }\n            /**\n             * Increase debug counter for resolved target deltas\n             */\n            if (statsBuffer.value) {\n                metrics.calculatedTargetDeltas++;\n            }\n        }\n        getClosestProjectingParent() {\n            if (!this.parent ||\n                hasScale(this.parent.latestValues) ||\n                has2DTranslate(this.parent.latestValues)) {\n                return undefined;\n            }\n            if (this.parent.isProjecting()) {\n                return this.parent;\n            }\n            else {\n                return this.parent.getClosestProjectingParent();\n            }\n        }\n        isProjecting() {\n            return Boolean((this.relativeTarget ||\n                this.targetDelta ||\n                this.options.layoutRoot) &&\n                this.layout);\n        }\n        calcProjection() {\n            const lead = this.getLead();\n            const isShared = Boolean(this.resumingFrom) || this !== lead;\n            let canSkip = true;\n            /**\n             * If this is a normal layout animation and neither this node nor its nearest projecting\n             * is dirty then we can't skip.\n             */\n            if (this.isProjectionDirty || this.parent?.isProjectionDirty) {\n                canSkip = false;\n            }\n            /**\n             * If this is a shared layout animation and this node's shared projection is dirty then\n             * we can't skip.\n             */\n            if (isShared &&\n                (this.isSharedProjectionDirty || this.isTransformDirty)) {\n                canSkip = false;\n            }\n            /**\n             * If we have resolved the target this frame we must recalculate the\n             * projection to ensure it visually represents the internal calculations.\n             */\n            if (this.resolvedRelativeTargetAt === frameData.timestamp) {\n                canSkip = false;\n            }\n            if (canSkip)\n                return;\n            const { layout, layoutId } = this.options;\n            /**\n             * If this section of the tree isn't animating we can\n             * delete our target sources for the following frame.\n             */\n            this.isTreeAnimating = Boolean((this.parent && this.parent.isTreeAnimating) ||\n                this.currentAnimation ||\n                this.pendingAnimation);\n            if (!this.isTreeAnimating) {\n                this.targetDelta = this.relativeTarget = undefined;\n            }\n            if (!this.layout || !(layout || layoutId))\n                return;\n            /**\n             * Reset the corrected box with the latest values from box, as we're then going\n             * to perform mutative operations on it.\n             */\n            copyBoxInto(this.layoutCorrected, this.layout.layoutBox);\n            /**\n             * Record previous tree scales before updating.\n             */\n            const prevTreeScaleX = this.treeScale.x;\n            const prevTreeScaleY = this.treeScale.y;\n            /**\n             * Apply all the parent deltas to this box to produce the corrected box. This\n             * is the layout box, as it will appear on screen as a result of the transforms of its parents.\n             */\n            applyTreeDeltas(this.layoutCorrected, this.treeScale, this.path, isShared);\n            /**\n             * If this layer needs to perform scale correction but doesn't have a target,\n             * use the layout as the target.\n             */\n            if (lead.layout &&\n                !lead.target &&\n                (this.treeScale.x !== 1 || this.treeScale.y !== 1)) {\n                lead.target = lead.layout.layoutBox;\n                lead.targetWithTransforms = createBox();\n            }\n            const { target } = lead;\n            if (!target) {\n                /**\n                 * If we don't have a target to project into, but we were previously\n                 * projecting, we want to remove the stored transform and schedule\n                 * a render to ensure the elements reflect the removed transform.\n                 */\n                if (this.prevProjectionDelta) {\n                    this.createProjectionDeltas();\n                    this.scheduleRender();\n                }\n                return;\n            }\n            if (!this.projectionDelta || !this.prevProjectionDelta) {\n                this.createProjectionDeltas();\n            }\n            else {\n                copyAxisDeltaInto(this.prevProjectionDelta.x, this.projectionDelta.x);\n                copyAxisDeltaInto(this.prevProjectionDelta.y, this.projectionDelta.y);\n            }\n            /**\n             * Update the delta between the corrected box and the target box before user-set transforms were applied.\n             * This will allow us to calculate the corrected borderRadius and boxShadow to compensate\n             * for our layout reprojection, but still allow them to be scaled correctly by the user.\n             * It might be that to simplify this we may want to accept that user-set scale is also corrected\n             * and we wouldn't have to keep and calc both deltas, OR we could support a user setting\n             * to allow people to choose whether these styles are corrected based on just the\n             * layout reprojection or the final bounding box.\n             */\n            calcBoxDelta(this.projectionDelta, this.layoutCorrected, target, this.latestValues);\n            if (this.treeScale.x !== prevTreeScaleX ||\n                this.treeScale.y !== prevTreeScaleY ||\n                !axisDeltaEquals(this.projectionDelta.x, this.prevProjectionDelta.x) ||\n                !axisDeltaEquals(this.projectionDelta.y, this.prevProjectionDelta.y)) {\n                this.hasProjected = true;\n                this.scheduleRender();\n                this.notifyListeners(\"projectionUpdate\", target);\n            }\n            /**\n             * Increase debug counter for recalculated projections\n             */\n            if (statsBuffer.value) {\n                metrics.calculatedProjections++;\n            }\n        }\n        hide() {\n            this.isVisible = false;\n            // TODO: Schedule render\n        }\n        show() {\n            this.isVisible = true;\n            // TODO: Schedule render\n        }\n        scheduleRender(notifyAll = true) {\n            this.options.visualElement?.scheduleRender();\n            if (notifyAll) {\n                const stack = this.getStack();\n                stack && stack.scheduleRender();\n            }\n            if (this.resumingFrom && !this.resumingFrom.instance) {\n                this.resumingFrom = undefined;\n            }\n        }\n        createProjectionDeltas() {\n            this.prevProjectionDelta = createDelta();\n            this.projectionDelta = createDelta();\n            this.projectionDeltaWithTransform = createDelta();\n        }\n        setAnimationOrigin(delta, hasOnlyRelativeTargetChanged = false) {\n            const snapshot = this.snapshot;\n            const snapshotLatestValues = snapshot ? snapshot.latestValues : {};\n            const mixedValues = { ...this.latestValues };\n            const targetDelta = createDelta();\n            if (!this.relativeParent ||\n                !this.relativeParent.options.layoutRoot) {\n                this.relativeTarget = this.relativeTargetOrigin = undefined;\n            }\n            this.attemptToResolveRelativeTarget = !hasOnlyRelativeTargetChanged;\n            const relativeLayout = createBox();\n            const snapshotSource = snapshot ? snapshot.source : undefined;\n            const layoutSource = this.layout ? this.layout.source : undefined;\n            const isSharedLayoutAnimation = snapshotSource !== layoutSource;\n            const stack = this.getStack();\n            const isOnlyMember = !stack || stack.members.length <= 1;\n            const shouldCrossfadeOpacity = Boolean(isSharedLayoutAnimation &&\n                !isOnlyMember &&\n                this.options.crossfade === true &&\n                !this.path.some(hasOpacityCrossfade));\n            this.animationProgress = 0;\n            let prevRelativeTarget;\n            this.mixTargetDelta = (latest) => {\n                const progress = latest / 1000;\n                mixAxisDelta(targetDelta.x, delta.x, progress);\n                mixAxisDelta(targetDelta.y, delta.y, progress);\n                this.setTargetDelta(targetDelta);\n                if (this.relativeTarget &&\n                    this.relativeTargetOrigin &&\n                    this.layout &&\n                    this.relativeParent &&\n                    this.relativeParent.layout) {\n                    calcRelativePosition(relativeLayout, this.layout.layoutBox, this.relativeParent.layout.layoutBox);\n                    mixBox(this.relativeTarget, this.relativeTargetOrigin, relativeLayout, progress);\n                    /**\n                     * If this is an unchanged relative target we can consider the\n                     * projection not dirty.\n                     */\n                    if (prevRelativeTarget &&\n                        boxEquals(this.relativeTarget, prevRelativeTarget)) {\n                        this.isProjectionDirty = false;\n                    }\n                    if (!prevRelativeTarget)\n                        prevRelativeTarget = createBox();\n                    copyBoxInto(prevRelativeTarget, this.relativeTarget);\n                }\n                if (isSharedLayoutAnimation) {\n                    this.animationValues = mixedValues;\n                    mixValues(mixedValues, snapshotLatestValues, this.latestValues, progress, shouldCrossfadeOpacity, isOnlyMember);\n                }\n                this.root.scheduleUpdateProjection();\n                this.scheduleRender();\n                this.animationProgress = progress;\n            };\n            this.mixTargetDelta(this.options.layoutRoot ? 1000 : 0);\n        }\n        startAnimation(options) {\n            this.notifyListeners(\"animationStart\");\n            this.currentAnimation?.stop();\n            this.resumingFrom?.currentAnimation?.stop();\n            if (this.pendingAnimation) {\n                cancelFrame(this.pendingAnimation);\n                this.pendingAnimation = undefined;\n            }\n            /**\n             * Start the animation in the next frame to have a frame with progress 0,\n             * where the target is the same as when the animation started, so we can\n             * calculate the relative positions correctly for instant transitions.\n             */\n            this.pendingAnimation = frame.update(() => {\n                globalProjectionState.hasAnimatedSinceResize = true;\n                activeAnimations.layout++;\n                this.motionValue || (this.motionValue = motionValue(0));\n                this.currentAnimation = animateSingleValue(this.motionValue, [0, 1000], {\n                    ...options,\n                    velocity: 0,\n                    isSync: true,\n                    onUpdate: (latest) => {\n                        this.mixTargetDelta(latest);\n                        options.onUpdate && options.onUpdate(latest);\n                    },\n                    onStop: () => {\n                        activeAnimations.layout--;\n                    },\n                    onComplete: () => {\n                        activeAnimations.layout--;\n                        options.onComplete && options.onComplete();\n                        this.completeAnimation();\n                    },\n                });\n                if (this.resumingFrom) {\n                    this.resumingFrom.currentAnimation = this.currentAnimation;\n                }\n                this.pendingAnimation = undefined;\n            });\n        }\n        completeAnimation() {\n            if (this.resumingFrom) {\n                this.resumingFrom.currentAnimation = undefined;\n                this.resumingFrom.preserveOpacity = undefined;\n            }\n            const stack = this.getStack();\n            stack && stack.exitAnimationComplete();\n            this.resumingFrom =\n                this.currentAnimation =\n                    this.animationValues =\n                        undefined;\n            this.notifyListeners(\"animationComplete\");\n        }\n        finishAnimation() {\n            if (this.currentAnimation) {\n                this.mixTargetDelta && this.mixTargetDelta(animationTarget);\n                this.currentAnimation.stop();\n            }\n            this.completeAnimation();\n        }\n        applyTransformsToTarget() {\n            const lead = this.getLead();\n            let { targetWithTransforms, target, layout, latestValues } = lead;\n            if (!targetWithTransforms || !target || !layout)\n                return;\n            /**\n             * If we're only animating position, and this element isn't the lead element,\n             * then instead of projecting into the lead box we instead want to calculate\n             * a new target that aligns the two boxes but maintains the layout shape.\n             */\n            if (this !== lead &&\n                this.layout &&\n                layout &&\n                shouldAnimatePositionOnly(this.options.animationType, this.layout.layoutBox, layout.layoutBox)) {\n                target = this.target || createBox();\n                const xLength = calcLength(this.layout.layoutBox.x);\n                target.x.min = lead.target.x.min;\n                target.x.max = target.x.min + xLength;\n                const yLength = calcLength(this.layout.layoutBox.y);\n                target.y.min = lead.target.y.min;\n                target.y.max = target.y.min + yLength;\n            }\n            copyBoxInto(targetWithTransforms, target);\n            /**\n             * Apply the latest user-set transforms to the targetBox to produce the targetBoxFinal.\n             * This is the final box that we will then project into by calculating a transform delta and\n             * applying it to the corrected box.\n             */\n            transformBox(targetWithTransforms, latestValues);\n            /**\n             * Update the delta between the corrected box and the final target box, after\n             * user-set transforms are applied to it. This will be used by the renderer to\n             * create a transform style that will reproject the element from its layout layout\n             * into the desired bounding box.\n             */\n            calcBoxDelta(this.projectionDeltaWithTransform, this.layoutCorrected, targetWithTransforms, latestValues);\n        }\n        registerSharedNode(layoutId, node) {\n            if (!this.sharedNodes.has(layoutId)) {\n                this.sharedNodes.set(layoutId, new NodeStack());\n            }\n            const stack = this.sharedNodes.get(layoutId);\n            stack.add(node);\n            const config = node.options.initialPromotionConfig;\n            node.promote({\n                transition: config ? config.transition : undefined,\n                preserveFollowOpacity: config && config.shouldPreserveFollowOpacity\n                    ? config.shouldPreserveFollowOpacity(node)\n                    : undefined,\n            });\n        }\n        isLead() {\n            const stack = this.getStack();\n            return stack ? stack.lead === this : true;\n        }\n        getLead() {\n            const { layoutId } = this.options;\n            return layoutId ? this.getStack()?.lead || this : this;\n        }\n        getPrevLead() {\n            const { layoutId } = this.options;\n            return layoutId ? this.getStack()?.prevLead : undefined;\n        }\n        getStack() {\n            const { layoutId } = this.options;\n            if (layoutId)\n                return this.root.sharedNodes.get(layoutId);\n        }\n        promote({ needsReset, transition, preserveFollowOpacity, } = {}) {\n            const stack = this.getStack();\n            if (stack)\n                stack.promote(this, preserveFollowOpacity);\n            if (needsReset) {\n                this.projectionDelta = undefined;\n                this.needsReset = true;\n            }\n            if (transition)\n                this.setOptions({ transition });\n        }\n        relegate() {\n            const stack = this.getStack();\n            if (stack) {\n                return stack.relegate(this);\n            }\n            else {\n                return false;\n            }\n        }\n        resetSkewAndRotation() {\n            const { visualElement } = this.options;\n            if (!visualElement)\n                return;\n            // If there's no detected skew or rotation values, we can early return without a forced render.\n            let hasDistortingTransform = false;\n            /**\n             * An unrolled check for rotation values. Most elements don't have any rotation and\n             * skipping the nested loop and new object creation is 50% faster.\n             */\n            const { latestValues } = visualElement;\n            if (latestValues.z ||\n                latestValues.rotate ||\n                latestValues.rotateX ||\n                latestValues.rotateY ||\n                latestValues.rotateZ ||\n                latestValues.skewX ||\n                latestValues.skewY) {\n                hasDistortingTransform = true;\n            }\n            // If there's no distorting values, we don't need to do any more.\n            if (!hasDistortingTransform)\n                return;\n            const resetValues = {};\n            if (latestValues.z) {\n                resetDistortingTransform(\"z\", visualElement, resetValues, this.animationValues);\n            }\n            // Check the skew and rotate value of all axes and reset to 0\n            for (let i = 0; i < transformAxes.length; i++) {\n                resetDistortingTransform(`rotate${transformAxes[i]}`, visualElement, resetValues, this.animationValues);\n                resetDistortingTransform(`skew${transformAxes[i]}`, visualElement, resetValues, this.animationValues);\n            }\n            // Force a render of this element to apply the transform with all skews and rotations\n            // set to 0.\n            visualElement.render();\n            // Put back all the values we reset\n            for (const key in resetValues) {\n                visualElement.setStaticValue(key, resetValues[key]);\n                if (this.animationValues) {\n                    this.animationValues[key] = resetValues[key];\n                }\n            }\n            // Schedule a render for the next frame. This ensures we won't visually\n            // see the element with the reset rotate value applied.\n            visualElement.scheduleRender();\n        }\n        applyProjectionStyles(targetStyle, // CSSStyleDeclaration - doesn't allow numbers to be assigned to properties\n        styleProp) {\n            if (!this.instance || this.isSVG)\n                return;\n            if (!this.isVisible) {\n                targetStyle.visibility = \"hidden\";\n                return;\n            }\n            const transformTemplate = this.getTransformTemplate();\n            if (this.needsReset) {\n                this.needsReset = false;\n                targetStyle.visibility = \"\";\n                targetStyle.opacity = \"\";\n                targetStyle.pointerEvents =\n                    resolveMotionValue(styleProp?.pointerEvents) || \"\";\n                targetStyle.transform = transformTemplate\n                    ? transformTemplate(this.latestValues, \"\")\n                    : \"none\";\n                return;\n            }\n            const lead = this.getLead();\n            if (!this.projectionDelta || !this.layout || !lead.target) {\n                if (this.options.layoutId) {\n                    targetStyle.opacity =\n                        this.latestValues.opacity !== undefined\n                            ? this.latestValues.opacity\n                            : 1;\n                    targetStyle.pointerEvents =\n                        resolveMotionValue(styleProp?.pointerEvents) || \"\";\n                }\n                if (this.hasProjected && !hasTransform(this.latestValues)) {\n                    targetStyle.transform = transformTemplate\n                        ? transformTemplate({}, \"\")\n                        : \"none\";\n                    this.hasProjected = false;\n                }\n                return;\n            }\n            targetStyle.visibility = \"\";\n            const valuesToRender = lead.animationValues || lead.latestValues;\n            this.applyTransformsToTarget();\n            let transform = buildProjectionTransform(this.projectionDeltaWithTransform, this.treeScale, valuesToRender);\n            if (transformTemplate) {\n                transform = transformTemplate(valuesToRender, transform);\n            }\n            targetStyle.transform = transform;\n            const { x, y } = this.projectionDelta;\n            targetStyle.transformOrigin = `${x.origin * 100}% ${y.origin * 100}% 0`;\n            if (lead.animationValues) {\n                /**\n                 * If the lead component is animating, assign this either the entering/leaving\n                 * opacity\n                 */\n                targetStyle.opacity =\n                    lead === this\n                        ? valuesToRender.opacity ??\n                            this.latestValues.opacity ??\n                            1\n                        : this.preserveOpacity\n                            ? this.latestValues.opacity\n                            : valuesToRender.opacityExit;\n            }\n            else {\n                /**\n                 * Or we're not animating at all, set the lead component to its layout\n                 * opacity and other components to hidden.\n                 */\n                targetStyle.opacity =\n                    lead === this\n                        ? valuesToRender.opacity !== undefined\n                            ? valuesToRender.opacity\n                            : \"\"\n                        : valuesToRender.opacityExit !== undefined\n                            ? valuesToRender.opacityExit\n                            : 0;\n            }\n            /**\n             * Apply scale correction\n             */\n            for (const key in scaleCorrectors) {\n                if (valuesToRender[key] === undefined)\n                    continue;\n                const { correct, applyTo, isCSSVariable } = scaleCorrectors[key];\n                /**\n                 * Only apply scale correction to the value if we have an\n                 * active projection transform. Otherwise these values become\n                 * vulnerable to distortion if the element changes size without\n                 * a corresponding layout animation.\n                 */\n                const corrected = transform === \"none\"\n                    ? valuesToRender[key]\n                    : correct(valuesToRender[key], lead);\n                if (applyTo) {\n                    const num = applyTo.length;\n                    for (let i = 0; i < num; i++) {\n                        targetStyle[applyTo[i]] = corrected;\n                    }\n                }\n                else {\n                    // If this is a CSS variable, set it directly on the instance.\n                    // Replacing this function from creating styles to setting them\n                    // would be a good place to remove per frame object creation\n                    if (isCSSVariable) {\n                        this.options.visualElement.renderState.vars[key] = corrected;\n                    }\n                    else {\n                        targetStyle[key] = corrected;\n                    }\n                }\n            }\n            /**\n             * Disable pointer events on follow components. This is to ensure\n             * that if a follow component covers a lead component it doesn't block\n             * pointer events on the lead.\n             */\n            if (this.options.layoutId) {\n                targetStyle.pointerEvents =\n                    lead === this\n                        ? resolveMotionValue(styleProp?.pointerEvents) || \"\"\n                        : \"none\";\n            }\n        }\n        clearSnapshot() {\n            this.resumeFrom = this.snapshot = undefined;\n        }\n        // Only run on root\n        resetTree() {\n            this.root.nodes.forEach((node) => node.currentAnimation?.stop());\n            this.root.nodes.forEach(clearMeasurements);\n            this.root.sharedNodes.clear();\n        }\n    };\n}\nfunction updateLayout(node) {\n    node.updateLayout();\n}\nfunction notifyLayoutUpdate(node) {\n    const snapshot = node.resumeFrom?.snapshot || node.snapshot;\n    if (node.isLead() &&\n        node.layout &&\n        snapshot &&\n        node.hasListeners(\"didUpdate\")) {\n        const { layoutBox: layout, measuredBox: measuredLayout } = node.layout;\n        const { animationType } = node.options;\n        const isShared = snapshot.source !== node.layout.source;\n        // TODO Maybe we want to also resize the layout snapshot so we don't trigger\n        // animations for instance if layout=\"size\" and an element has only changed position\n        if (animationType === \"size\") {\n            eachAxis((axis) => {\n                const axisSnapshot = isShared\n                    ? snapshot.measuredBox[axis]\n                    : snapshot.layoutBox[axis];\n                const length = calcLength(axisSnapshot);\n                axisSnapshot.min = layout[axis].min;\n                axisSnapshot.max = axisSnapshot.min + length;\n            });\n        }\n        else if (shouldAnimatePositionOnly(animationType, snapshot.layoutBox, layout)) {\n            eachAxis((axis) => {\n                const axisSnapshot = isShared\n                    ? snapshot.measuredBox[axis]\n                    : snapshot.layoutBox[axis];\n                const length = calcLength(layout[axis]);\n                axisSnapshot.max = axisSnapshot.min + length;\n                /**\n                 * Ensure relative target gets resized and rerendererd\n                 */\n                if (node.relativeTarget && !node.currentAnimation) {\n                    node.isProjectionDirty = true;\n                    node.relativeTarget[axis].max =\n                        node.relativeTarget[axis].min + length;\n                }\n            });\n        }\n        const layoutDelta = createDelta();\n        calcBoxDelta(layoutDelta, layout, snapshot.layoutBox);\n        const visualDelta = createDelta();\n        if (isShared) {\n            calcBoxDelta(visualDelta, node.applyTransform(measuredLayout, true), snapshot.measuredBox);\n        }\n        else {\n            calcBoxDelta(visualDelta, layout, snapshot.layoutBox);\n        }\n        const hasLayoutChanged = !isDeltaZero(layoutDelta);\n        let hasRelativeLayoutChanged = false;\n        if (!node.resumeFrom) {\n            const relativeParent = node.getClosestProjectingParent();\n            /**\n             * If the relativeParent is itself resuming from a different element then\n             * the relative snapshot is not relavent\n             */\n            if (relativeParent && !relativeParent.resumeFrom) {\n                const { snapshot: parentSnapshot, layout: parentLayout } = relativeParent;\n                if (parentSnapshot && parentLayout) {\n                    const relativeSnapshot = createBox();\n                    calcRelativePosition(relativeSnapshot, snapshot.layoutBox, parentSnapshot.layoutBox);\n                    const relativeLayout = createBox();\n                    calcRelativePosition(relativeLayout, layout, parentLayout.layoutBox);\n                    if (!boxEqualsRounded(relativeSnapshot, relativeLayout)) {\n                        hasRelativeLayoutChanged = true;\n                    }\n                    if (relativeParent.options.layoutRoot) {\n                        node.relativeTarget = relativeLayout;\n                        node.relativeTargetOrigin = relativeSnapshot;\n                        node.relativeParent = relativeParent;\n                    }\n                }\n            }\n        }\n        node.notifyListeners(\"didUpdate\", {\n            layout,\n            snapshot,\n            delta: visualDelta,\n            layoutDelta,\n            hasLayoutChanged,\n            hasRelativeLayoutChanged,\n        });\n    }\n    else if (node.isLead()) {\n        const { onExitComplete } = node.options;\n        onExitComplete && onExitComplete();\n    }\n    /**\n     * Clearing transition\n     * TODO: Investigate why this transition is being passed in as {type: false } from Framer\n     * and why we need it at all\n     */\n    node.options.transition = undefined;\n}\nfunction propagateDirtyNodes(node) {\n    /**\n     * Increase debug counter for nodes encountered this frame\n     */\n    if (statsBuffer.value) {\n        metrics.nodes++;\n    }\n    if (!node.parent)\n        return;\n    /**\n     * If this node isn't projecting, propagate isProjectionDirty. It will have\n     * no performance impact but it will allow the next child that *is* projecting\n     * but *isn't* dirty to just check its parent to see if *any* ancestor needs\n     * correcting.\n     */\n    if (!node.isProjecting()) {\n        node.isProjectionDirty = node.parent.isProjectionDirty;\n    }\n    /**\n     * Propagate isSharedProjectionDirty and isTransformDirty\n     * throughout the whole tree. A future revision can take another look at\n     * this but for safety we still recalcualte shared nodes.\n     */\n    node.isSharedProjectionDirty || (node.isSharedProjectionDirty = Boolean(node.isProjectionDirty ||\n        node.parent.isProjectionDirty ||\n        node.parent.isSharedProjectionDirty));\n    node.isTransformDirty || (node.isTransformDirty = node.parent.isTransformDirty);\n}\nfunction cleanDirtyNodes(node) {\n    node.isProjectionDirty =\n        node.isSharedProjectionDirty =\n            node.isTransformDirty =\n                false;\n}\nfunction clearSnapshot(node) {\n    node.clearSnapshot();\n}\nfunction clearMeasurements(node) {\n    node.clearMeasurements();\n}\nfunction clearIsLayoutDirty(node) {\n    node.isLayoutDirty = false;\n}\nfunction resetTransformStyle(node) {\n    const { visualElement } = node.options;\n    if (visualElement && visualElement.getProps().onBeforeLayoutMeasure) {\n        visualElement.notify(\"BeforeLayoutMeasure\");\n    }\n    node.resetTransform();\n}\nfunction finishAnimation(node) {\n    node.finishAnimation();\n    node.targetDelta = node.relativeTarget = node.target = undefined;\n    node.isProjectionDirty = true;\n}\nfunction resolveTargetDelta(node) {\n    node.resolveTargetDelta();\n}\nfunction calcProjection(node) {\n    node.calcProjection();\n}\nfunction resetSkewAndRotation(node) {\n    node.resetSkewAndRotation();\n}\nfunction removeLeadSnapshots(stack) {\n    stack.removeLeadSnapshot();\n}\nfunction mixAxisDelta(output, delta, p) {\n    output.translate = mixNumber(delta.translate, 0, p);\n    output.scale = mixNumber(delta.scale, 1, p);\n    output.origin = delta.origin;\n    output.originPoint = delta.originPoint;\n}\nfunction mixAxis(output, from, to, p) {\n    output.min = mixNumber(from.min, to.min, p);\n    output.max = mixNumber(from.max, to.max, p);\n}\nfunction mixBox(output, from, to, p) {\n    mixAxis(output.x, from.x, to.x, p);\n    mixAxis(output.y, from.y, to.y, p);\n}\nfunction hasOpacityCrossfade(node) {\n    return (node.animationValues && node.animationValues.opacityExit !== undefined);\n}\nconst defaultLayoutTransition = {\n    duration: 0.45,\n    ease: [0.4, 0, 0.1, 1],\n};\nconst userAgentContains = (string) => typeof navigator !== \"undefined\" &&\n    navigator.userAgent &&\n    navigator.userAgent.toLowerCase().includes(string);\n/**\n * Measured bounding boxes must be rounded in Safari and\n * left untouched in Chrome, otherwise non-integer layouts within scaled-up elements\n * can appear to jump.\n */\nconst roundPoint = userAgentContains(\"applewebkit/\") && !userAgentContains(\"chrome/\")\n    ? Math.round\n    : noop;\nfunction roundAxis(axis) {\n    // Round to the nearest .5 pixels to support subpixel layouts\n    axis.min = roundPoint(axis.min);\n    axis.max = roundPoint(axis.max);\n}\nfunction roundBox(box) {\n    roundAxis(box.x);\n    roundAxis(box.y);\n}\nfunction shouldAnimatePositionOnly(animationType, snapshot, layout) {\n    return (animationType === \"position\" ||\n        (animationType === \"preserve-aspect\" &&\n            !isNear(aspectRatio(snapshot), aspectRatio(layout), 0.2)));\n}\nfunction checkNodeWasScrollRoot(node) {\n    return node !== node.root && node.scroll?.wasRoot;\n}\n\nexport { cleanDirtyNodes, createProjectionNode, mixAxis, mixAxisDelta, mixBox, propagateDirtyNodes };\n","import { isSVGElement } from './is-svg-element.mjs';\n\n/**\n * Checks if an element is specifically an SVGSVGElement (the root SVG element)\n * in a way that works across iframes\n */\nfunction isSVGSVGElement(element) {\n    return isSVGElement(element) && element.tagName === \"svg\";\n}\n\nexport { isSVGSVGElement };\n","import { isMotionValue, motionValue } from 'motion-dom';\nimport { animateMotionValue } from '../interfaces/motion-value.mjs';\n\nfunction animateSingleValue(value, keyframes, options) {\n    const motionValue$1 = isMotionValue(value) ? value : motionValue(value);\n    motionValue$1.start(animateMotionValue(\"\", motionValue$1, keyframes, options));\n    return motionValue$1.animation;\n}\n\nexport { animateSingleValue };\n","function buildProjectionTransform(delta, treeScale, latestTransform) {\n    let transform = \"\";\n    /**\n     * The translations we use to calculate are always relative to the viewport coordinate space.\n     * But when we apply scales, we also scale the coordinate space of an element and its children.\n     * For instance if we have a treeScale (the culmination of all parent scales) of 0.5 and we need\n     * to move an element 100 pixels, we actually need to move it 200 in within that scaled space.\n     */\n    const xTranslate = delta.x.translate / treeScale.x;\n    const yTranslate = delta.y.translate / treeScale.y;\n    const zTranslate = latestTransform?.z || 0;\n    if (xTranslate || yTranslate || zTranslate) {\n        transform = `translate3d(${xTranslate}px, ${yTranslate}px, ${zTranslate}px) `;\n    }\n    /**\n     * Apply scale correction for the tree transform.\n     * This will apply scale to the screen-orientated axes.\n     */\n    if (treeScale.x !== 1 || treeScale.y !== 1) {\n        transform += `scale(${1 / treeScale.x}, ${1 / treeScale.y}) `;\n    }\n    if (latestTransform) {\n        const { transformPerspective, rotate, rotateX, rotateY, skewX, skewY } = latestTransform;\n        if (transformPerspective)\n            transform = `perspective(${transformPerspective}px) ${transform}`;\n        if (rotate)\n            transform += `rotate(${rotate}deg) `;\n        if (rotateX)\n            transform += `rotateX(${rotateX}deg) `;\n        if (rotateY)\n            transform += `rotateY(${rotateY}deg) `;\n        if (skewX)\n            transform += `skewX(${skewX}deg) `;\n        if (skewY)\n            transform += `skewY(${skewY}deg) `;\n    }\n    /**\n     * Apply scale to match the size of the element to the size we want it.\n     * This will apply scale to the element-orientated axes.\n     */\n    const elementScaleX = delta.x.scale * treeScale.x;\n    const elementScaleY = delta.y.scale * treeScale.y;\n    if (elementScaleX !== 1 || elementScaleY !== 1) {\n        transform += `scale(${elementScaleX}, ${elementScaleY})`;\n    }\n    return transform || \"none\";\n}\n\nexport { buildProjectionTransform };\n","import { addDomEvent } from '../../events/add-dom-event.mjs';\nimport { createProjectionNode } from './create-projection-node.mjs';\n\nconst DocumentProjectionNode = createProjectionNode({\n    attachResizeListener: (ref, notify) => addDomEvent(ref, \"resize\", notify),\n    measureScroll: () => ({\n        x: document.documentElement.scrollLeft || document.body.scrollLeft,\n        y: document.documentElement.scrollTop || document.body.scrollTop,\n    }),\n    checkIsScrollRoot: () => true,\n});\n\nexport { DocumentProjectionNode };\n","import { createProjectionNode } from './create-projection-node.mjs';\nimport { DocumentProjectionNode } from './DocumentProjectionNode.mjs';\n\nconst rootProjectionNode = {\n    current: undefined,\n};\nconst HTMLProjectionNode = createProjectionNode({\n    measureScroll: (instance) => ({\n        x: instance.scrollLeft,\n        y: instance.scrollTop,\n    }),\n    defaultParent: () => {\n        if (!rootProjectionNode.current) {\n            const documentNode = new DocumentProjectionNode({});\n            documentNode.mount(window);\n            documentNode.setOptions({ layoutScroll: true });\n            rootProjectionNode.current = documentNode;\n        }\n        return rootProjectionNode.current;\n    },\n    resetTransform: (instance, value) => {\n        instance.style.transform = value !== undefined ? value : \"none\";\n    },\n    checkIsScrollRoot: (instance) => Boolean(window.getComputedStyle(instance).position === \"fixed\"),\n});\n\nexport { HTMLProjectionNode, rootProjectionNode };\n","import { DragGesture } from '../../gestures/drag/index.mjs';\nimport { PanGesture } from '../../gestures/pan/index.mjs';\nimport { MeasureLayout } from './layout/MeasureLayout.mjs';\nimport { HTMLProjectionNode } from '../../projection/node/HTMLProjectionNode.mjs';\n\nconst drag = {\n    pan: {\n        Feature: PanGesture,\n    },\n    drag: {\n        Feature: DragGesture,\n        ProjectionNode: HTMLProjectionNode,\n        MeasureLayout,\n    },\n};\n\nexport { drag };\n","import { Feature } from '../../motion/features/Feature.mjs';\nimport { noop } from 'motion-utils';\nimport { VisualElementDragControls } from './VisualElementDragControls.mjs';\n\nclass DragGesture extends Feature {\n    constructor(node) {\n        super(node);\n        this.removeGroupControls = noop;\n        this.removeListeners = noop;\n        this.controls = new VisualElementDragControls(node);\n    }\n    mount() {\n        // If we've been provided a DragControls for manual control over the drag gesture,\n        // subscribe this component to it on mount.\n        const { dragControls } = this.node.getProps();\n        if (dragControls) {\n            this.removeGroupControls = dragControls.subscribe(this.controls);\n        }\n        this.removeListeners = this.controls.addListeners() || noop;\n    }\n    unmount() {\n        this.removeGroupControls();\n        this.removeListeners();\n    }\n}\n\nexport { DragGesture };\n","import { resolveElements } from '../../utils/resolve-elements.mjs';\n\nfunction setupGesture(elementOrSelector, options) {\n    const elements = resolveElements(elementOrSelector);\n    const gestureAbortController = new AbortController();\n    const eventOptions = {\n        passive: true,\n        ...options,\n        signal: gestureAbortController.signal,\n    };\n    const cancel = () => gestureAbortController.abort();\n    return [elements, eventOptions, cancel];\n}\n\nexport { setupGesture };\n","function resolveElements(elementOrSelector, scope, selectorCache) {\n    if (elementOrSelector instanceof EventTarget) {\n        return [elementOrSelector];\n    }\n    else if (typeof elementOrSelector === \"string\") {\n        let root = document;\n        if (scope) {\n            root = scope.current;\n        }\n        const elements = selectorCache?.[elementOrSelector] ??\n            root.querySelectorAll(elementOrSelector);\n        return elements ? Array.from(elements) : [];\n    }\n    return Array.from(elementOrSelector);\n}\n\nexport { resolveElements };\n","import { isDragActive } from './drag/state/is-active.mjs';\nimport { setupGesture } from './utils/setup.mjs';\n\nfunction isValidHover(event) {\n    return !(event.pointerType === \"touch\" || isDragActive());\n}\n/**\n * Create a hover gesture. hover() is different to .addEventListener(\"pointerenter\")\n * in that it has an easier syntax, filters out polyfilled touch events, interoperates\n * with drag gestures, and automatically removes the \"pointerennd\" event listener when the hover ends.\n *\n * @public\n */\nfunction hover(elementOrSelector, onHoverStart, options = {}) {\n    const [elements, eventOptions, cancel] = setupGesture(elementOrSelector, options);\n    const onPointerEnter = (enterEvent) => {\n        if (!isValidHover(enterEvent))\n            return;\n        const { target } = enterEvent;\n        const onHoverEnd = onHoverStart(target, enterEvent);\n        if (typeof onHoverEnd !== \"function\" || !target)\n            return;\n        const onPointerLeave = (leaveEvent) => {\n            if (!isValidHover(leaveEvent))\n                return;\n            onHoverEnd(leaveEvent);\n            target.removeEventListener(\"pointerleave\", onPointerLeave);\n        };\n        target.addEventListener(\"pointerleave\", onPointerLeave, eventOptions);\n    };\n    elements.forEach((element) => {\n        element.addEventListener(\"pointerenter\", onPointerEnter, eventOptions);\n    });\n    return cancel;\n}\n\nexport { hover };\n","import { hover, frame } from 'motion-dom';\nimport { extractEventInfo } from '../events/event-info.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\n\nfunction handleHoverEvent(node, event, lifecycle) {\n    const { props } = node;\n    if (node.animationState && props.whileHover) {\n        node.animationState.setActive(\"whileHover\", lifecycle === \"Start\");\n    }\n    const eventName = (\"onHover\" + lifecycle);\n    const callback = props[eventName];\n    if (callback) {\n        frame.postRender(() => callback(event, extractEventInfo(event)));\n    }\n}\nclass HoverGesture extends Feature {\n    mount() {\n        const { current } = this.node;\n        if (!current)\n            return;\n        this.unmount = hover(current, (_element, startEvent) => {\n            handleHoverEvent(this.node, startEvent, \"Start\");\n            return (endEvent) => handleHoverEvent(this.node, endEvent, \"End\");\n        });\n    }\n    unmount() { }\n}\n\nexport { HoverGesture };\n","/**\n * Recursively traverse up the tree to check whether the provided child node\n * is the parent or a descendant of it.\n *\n * @param parent - Element to find\n * @param child - Element to test against parent\n */\nconst isNodeOrChild = (parent, child) => {\n    if (!child) {\n        return false;\n    }\n    else if (parent === child) {\n        return true;\n    }\n    else {\n        return isNodeOrChild(parent, child.parentElement);\n    }\n};\n\nexport { isNodeOrChild };\n","const focusableElements = new Set([\n    \"BUTTON\",\n    \"INPUT\",\n    \"SELECT\",\n    \"TEXTAREA\",\n    \"A\",\n]);\nfunction isElementKeyboardAccessible(element) {\n    return (focusableElements.has(element.tagName) ||\n        element.tabIndex !== -1);\n}\n\nexport { isElementKeyboardAccessible };\n","const isPressing = new WeakSet();\n\nexport { isPressing };\n","import { isPressing } from './state.mjs';\n\n/**\n * Filter out events that are not \"Enter\" keys.\n */\nfunction filterEvents(callback) {\n    return (event) => {\n        if (event.key !== \"Enter\")\n            return;\n        callback(event);\n    };\n}\nfunction firePointerEvent(target, type) {\n    target.dispatchEvent(new PointerEvent(\"pointer\" + type, { isPrimary: true, bubbles: true }));\n}\nconst enableKeyboardPress = (focusEvent, eventOptions) => {\n    const element = focusEvent.currentTarget;\n    if (!element)\n        return;\n    const handleKeydown = filterEvents(() => {\n        if (isPressing.has(element))\n            return;\n        firePointerEvent(element, \"down\");\n        const handleKeyup = filterEvents(() => {\n            firePointerEvent(element, \"up\");\n        });\n        const handleBlur = () => firePointerEvent(element, \"cancel\");\n        element.addEventListener(\"keyup\", handleKeyup, eventOptions);\n        element.addEventListener(\"blur\", handleBlur, eventOptions);\n    });\n    element.addEventListener(\"keydown\", handleKeydown, eventOptions);\n    /**\n     * Add an event listener that fires on blur to remove the keydown events.\n     */\n    element.addEventListener(\"blur\", () => element.removeEventListener(\"keydown\", handleKeydown), eventOptions);\n};\n\nexport { enableKeyboardPress };\n","import { isHTMLElement } from '../../utils/is-html-element.mjs';\nimport { isDragActive } from '../drag/state/is-active.mjs';\nimport { isNodeOrChild } from '../utils/is-node-or-child.mjs';\nimport { isPrimaryPointer } from '../utils/is-primary-pointer.mjs';\nimport { setupGesture } from '../utils/setup.mjs';\nimport { isElementKeyboardAccessible } from './utils/is-keyboard-accessible.mjs';\nimport { enableKeyboardPress } from './utils/keyboard.mjs';\nimport { isPressing } from './utils/state.mjs';\n\n/**\n * Filter out events that are not primary pointer events, or are triggering\n * while a Motion gesture is active.\n */\nfunction isValidPressEvent(event) {\n    return isPrimaryPointer(event) && !isDragActive();\n}\n/**\n * Create a press gesture.\n *\n * Press is different to `\"pointerdown\"`, `\"pointerup\"` in that it\n * automatically filters out secondary pointer events like right\n * click and multitouch.\n *\n * It also adds accessibility support for keyboards, where\n * an element with a press gesture will receive focus and\n *  trigger on Enter `\"keydown\"` and `\"keyup\"` events.\n *\n * This is different to a browser's `\"click\"` event, which does\n * respond to keyboards but only for the `\"click\"` itself, rather\n * than the press start and end/cancel. The element also needs\n * to be focusable for this to work, whereas a press gesture will\n * make an element focusable by default.\n *\n * @public\n */\nfunction press(targetOrSelector, onPressStart, options = {}) {\n    const [targets, eventOptions, cancelEvents] = setupGesture(targetOrSelector, options);\n    const startPress = (startEvent) => {\n        const target = startEvent.currentTarget;\n        if (!isValidPressEvent(startEvent))\n            return;\n        isPressing.add(target);\n        const onPressEnd = onPressStart(target, startEvent);\n        const onPointerEnd = (endEvent, success) => {\n            window.removeEventListener(\"pointerup\", onPointerUp);\n            window.removeEventListener(\"pointercancel\", onPointerCancel);\n            if (isPressing.has(target)) {\n                isPressing.delete(target);\n            }\n            if (!isValidPressEvent(endEvent)) {\n                return;\n            }\n            if (typeof onPressEnd === \"function\") {\n                onPressEnd(endEvent, { success });\n            }\n        };\n        const onPointerUp = (upEvent) => {\n            onPointerEnd(upEvent, target === window ||\n                target === document ||\n                options.useGlobalTarget ||\n                isNodeOrChild(target, upEvent.target));\n        };\n        const onPointerCancel = (cancelEvent) => {\n            onPointerEnd(cancelEvent, false);\n        };\n        window.addEventListener(\"pointerup\", onPointerUp, eventOptions);\n        window.addEventListener(\"pointercancel\", onPointerCancel, eventOptions);\n    };\n    targets.forEach((target) => {\n        const pointerDownTarget = options.useGlobalTarget ? window : target;\n        pointerDownTarget.addEventListener(\"pointerdown\", startPress, eventOptions);\n        if (isHTMLElement(target)) {\n            target.addEventListener(\"focus\", (event) => enableKeyboardPress(event, eventOptions));\n            if (!isElementKeyboardAccessible(target) &&\n                !target.hasAttribute(\"tabindex\")) {\n                target.tabIndex = 0;\n            }\n        }\n    });\n    return cancelEvents;\n}\n\nexport { press };\n","import { press, frame } from 'motion-dom';\nimport { extractEventInfo } from '../events/event-info.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\n\nfunction handlePressEvent(node, event, lifecycle) {\n    const { props } = node;\n    if (node.current instanceof HTMLButtonElement && node.current.disabled) {\n        return;\n    }\n    if (node.animationState && props.whileTap) {\n        node.animationState.setActive(\"whileTap\", lifecycle === \"Start\");\n    }\n    const eventName = (\"onTap\" + (lifecycle === \"End\" ? \"\" : lifecycle));\n    const callback = props[eventName];\n    if (callback) {\n        frame.postRender(() => callback(event, extractEventInfo(event)));\n    }\n}\nclass PressGesture extends Feature {\n    mount() {\n        const { current } = this.node;\n        if (!current)\n            return;\n        this.unmount = press(current, (_element, startEvent) => {\n            handlePressEvent(this.node, startEvent, \"Start\");\n            return (endEvent, { success }) => handlePressEvent(this.node, endEvent, success ? \"End\" : \"Cancel\");\n        }, { useGlobalTarget: this.node.props.globalTapTarget });\n    }\n    unmount() { }\n}\n\nexport { PressGesture };\n","/**\n * Map an IntersectionHandler callback to an element. We only ever make one handler for one\n * element, so even though these handlers might all be triggered by different\n * observers, we can keep them in the same map.\n */\nconst observerCallbacks = new WeakMap();\n/**\n * Multiple observers can be created for multiple element/document roots. Each with\n * different settings. So here we store dictionaries of observers to each root,\n * using serialised settings (threshold/margin) as lookup keys.\n */\nconst observers = new WeakMap();\nconst fireObserverCallback = (entry) => {\n    const callback = observerCallbacks.get(entry.target);\n    callback && callback(entry);\n};\nconst fireAllObserverCallbacks = (entries) => {\n    entries.forEach(fireObserverCallback);\n};\nfunction initIntersectionObserver({ root, ...options }) {\n    const lookupRoot = root || document;\n    /**\n     * If we don't have an observer lookup map for this root, create one.\n     */\n    if (!observers.has(lookupRoot)) {\n        observers.set(lookupRoot, {});\n    }\n    const rootObservers = observers.get(lookupRoot);\n    const key = JSON.stringify(options);\n    /**\n     * If we don't have an observer for this combination of root and settings,\n     * create one.\n     */\n    if (!rootObservers[key]) {\n        rootObservers[key] = new IntersectionObserver(fireAllObserverCallbacks, { root, ...options });\n    }\n    return rootObservers[key];\n}\nfunction observeIntersection(element, options, callback) {\n    const rootInteresectionObserver = initIntersectionObserver(options);\n    observerCallbacks.set(element, callback);\n    rootInteresectionObserver.observe(element);\n    return () => {\n        observerCallbacks.delete(element);\n        rootInteresectionObserver.unobserve(element);\n    };\n}\n\nexport { observeIntersection };\n","import { Feature } from '../Feature.mjs';\nimport { observeIntersection } from './observers.mjs';\n\nconst thresholdNames = {\n    some: 0,\n    all: 1,\n};\nclass InViewFeature extends Feature {\n    constructor() {\n        super(...arguments);\n        this.hasEnteredView = false;\n        this.isInView = false;\n    }\n    startObserver() {\n        this.unmount();\n        const { viewport = {} } = this.node.getProps();\n        const { root, margin: rootMargin, amount = \"some\", once } = viewport;\n        const options = {\n            root: root ? root.current : undefined,\n            rootMargin,\n            threshold: typeof amount === \"number\" ? amount : thresholdNames[amount],\n        };\n        const onIntersectionUpdate = (entry) => {\n            const { isIntersecting } = entry;\n            /**\n             * If there's been no change in the viewport state, early return.\n             */\n            if (this.isInView === isIntersecting)\n                return;\n            this.isInView = isIntersecting;\n            /**\n             * Handle hasEnteredView. If this is only meant to run once, and\n             * element isn't visible, early return. Otherwise set hasEnteredView to true.\n             */\n            if (once && !isIntersecting && this.hasEnteredView) {\n                return;\n            }\n            else if (isIntersecting) {\n                this.hasEnteredView = true;\n            }\n            if (this.node.animationState) {\n                this.node.animationState.setActive(\"whileInView\", isIntersecting);\n            }\n            /**\n             * Use the latest committed props rather than the ones in scope\n             * when this observer is created\n             */\n            const { onViewportEnter, onViewportLeave } = this.node.getProps();\n            const callback = isIntersecting ? onViewportEnter : onViewportLeave;\n            callback && callback(entry);\n        };\n        return observeIntersection(this.node.current, options, onIntersectionUpdate);\n    }\n    mount() {\n        this.startObserver();\n    }\n    update() {\n        if (typeof IntersectionObserver === \"undefined\")\n            return;\n        const { props, prevProps } = this.node;\n        const hasOptionsChanged = [\"amount\", \"margin\", \"root\"].some(hasViewportOptionChanged(props, prevProps));\n        if (hasOptionsChanged) {\n            this.startObserver();\n        }\n    }\n    unmount() { }\n}\nfunction hasViewportOptionChanged({ viewport = {} }, { viewport: prevViewport = {} } = {}) {\n    return (name) => viewport[name] !== prevViewport[name];\n}\n\nexport { InViewFeature };\n","import { HoverGesture } from '../../gestures/hover.mjs';\nimport { FocusGesture } from '../../gestures/focus.mjs';\nimport { PressGesture } from '../../gestures/press.mjs';\nimport { InViewFeature } from './viewport/index.mjs';\n\nconst gestureAnimations = {\n    inView: {\n        Feature: InViewFeature,\n    },\n    tap: {\n        Feature: PressGesture,\n    },\n    focus: {\n        Feature: FocusGesture,\n    },\n    hover: {\n        Feature: HoverGesture,\n    },\n};\n\nexport { gestureAnimations };\n","import { createDomVisualElement } from '../../dom/create-visual-element.mjs';\nimport { createMotionProxy } from '../create-proxy.mjs';\nimport { featureBundle } from './feature-bundle.mjs';\n\nconst motion = /*@__PURE__*/ createMotionProxy(featureBundle, createDomVisualElement);\n\nexport { motion };\n","import { animations } from '../../../motion/features/animations.mjs';\nimport { drag } from '../../../motion/features/drag.mjs';\nimport { gestureAnimations } from '../../../motion/features/gestures.mjs';\nimport { layout } from '../../../motion/features/layout.mjs';\n\nconst featureBundle = {\n    ...animations,\n    ...gestureAnimations,\n    ...drag,\n    ...layout,\n};\n\nexport { featureBundle };\n","import { pipe } from 'motion-utils';\nimport { addDomEvent } from '../events/add-dom-event.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\n\nclass FocusGesture extends Feature {\n    constructor() {\n        super(...arguments);\n        this.isActive = false;\n    }\n    onFocus() {\n        let isFocusVisible = false;\n        /**\n         * If this element doesn't match focus-visible then don't\n         * apply whileHover. But, if matches throws that focus-visible\n         * is not a valid selector then in that browser outline styles will be applied\n         * to the element by default and we want to match that behaviour with whileFocus.\n         */\n        try {\n            isFocusVisible = this.node.current.matches(\":focus-visible\");\n        }\n        catch (e) {\n            isFocusVisible = true;\n        }\n        if (!isFocusVisible || !this.node.animationState)\n            return;\n        this.node.animationState.setActive(\"whileFocus\", true);\n        this.isActive = true;\n    }\n    onBlur() {\n        if (!this.isActive || !this.node.animationState)\n            return;\n        this.node.animationState.setActive(\"whileFocus\", false);\n        this.isActive = false;\n    }\n    mount() {\n        this.unmount = pipe(addDomEvent(this.node.current, \"focus\", () => this.onFocus()), addDomEvent(this.node.current, \"blur\", () => this.onBlur()));\n    }\n    unmount() { }\n}\n\nexport { FocusGesture };\n","import { HTMLProjectionNode } from '../../projection/node/HTMLProjectionNode.mjs';\nimport { MeasureLayout } from './layout/MeasureLayout.mjs';\n\nconst layout = {\n    layout: {\n        ProjectionNode: HTMLProjectionNode,\n        MeasureLayout,\n    },\n};\n\nexport { layout };\n","import * as React from \"react\";\nfunction EllipsisHorizontalIcon({\n  title,\n  titleId,\n  ...props\n}, svgRef) {\n  return /*#__PURE__*/React.createElement(\"svg\", Object.assign({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    fill: \"none\",\n    viewBox: \"0 0 24 24\",\n    strokeWidth: 1.5,\n    stroke: \"currentColor\",\n    \"aria-hidden\": \"true\",\n    \"data-slot\": \"icon\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, /*#__PURE__*/React.createElement(\"path\", {\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    d: \"M6.75 12a.75.75 0 1 1-1.5 0 .75.75 0 0 1 1.5 0ZM12.75 12a.75.75 0 1 1-1.5 0 .75.75 0 0 1 1.5 0ZM18.75 12a.75.75 0 1 1-1.5 0 .75.75 0 0 1 1.5 0Z\"\n  }));\n}\nconst ForwardRef = /*#__PURE__*/ React.forwardRef(EllipsisHorizontalIcon);\nexport default ForwardRef;","import * as React from \"react\";\nfunction HashtagIcon({\n  title,\n  titleId,\n  ...props\n}, svgRef) {\n  return /*#__PURE__*/React.createElement(\"svg\", Object.assign({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    fill: \"none\",\n    viewBox: \"0 0 24 24\",\n    strokeWidth: 1.5,\n    stroke: \"currentColor\",\n    \"aria-hidden\": \"true\",\n    \"data-slot\": \"icon\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, /*#__PURE__*/React.createElement(\"path\", {\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    d: \"M5.25 8.25h15m-16.5 7.5h15m-1.8-13.5-3.9 19.5m-2.1-19.5-3.9 19.5\"\n  }));\n}\nconst ForwardRef = /*#__PURE__*/ React.forwardRef(HashtagIcon);\nexport default ForwardRef;","import * as React from \"react\";\nfunction BookmarkIcon({\n  title,\n  titleId,\n  ...props\n}, svgRef) {\n  return /*#__PURE__*/React.createElement(\"svg\", Object.assign({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    fill: \"none\",\n    viewBox: \"0 0 24 24\",\n    strokeWidth: 1.5,\n    stroke: \"currentColor\",\n    \"aria-hidden\": \"true\",\n    \"data-slot\": \"icon\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, /*#__PURE__*/React.createElement(\"path\", {\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    d: \"M17.593 3.322c1.1.128 1.907 1.077 1.907 2.185V21L12 17.25 4.5 21V5.507c0-1.108.806-2.057 1.907-2.185a48.507 48.507 0 0 1 11.186 0Z\"\n  }));\n}\nconst ForwardRef = /*#__PURE__*/ React.forwardRef(BookmarkIcon);\nexport default ForwardRef;","import * as React from \"react\";\nfunction MagnifyingGlassIcon({\n  title,\n  titleId,\n  ...props\n}, svgRef) {\n  return /*#__PURE__*/React.createElement(\"svg\", Object.assign({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    fill: \"none\",\n    viewBox: \"0 0 24 24\",\n    strokeWidth: 1.5,\n    stroke: \"currentColor\",\n    \"aria-hidden\": \"true\",\n    \"data-slot\": \"icon\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, /*#__PURE__*/React.createElement(\"path\", {\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    d: \"m21 21-5.197-5.197m0 0A7.5 7.5 0 1 0 5.196 5.196a7.5 7.5 0 0 0 10.607 10.607Z\"\n  }));\n}\nconst ForwardRef = /*#__PURE__*/ React.forwardRef(MagnifyingGlassIcon);\nexport default ForwardRef;","import * as React from \"react\";\nfunction CalendarIcon({\n  title,\n  titleId,\n  ...props\n}, svgRef) {\n  return /*#__PURE__*/React.createElement(\"svg\", Object.assign({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    fill: \"none\",\n    viewBox: \"0 0 24 24\",\n    strokeWidth: 1.5,\n    stroke: \"currentColor\",\n    \"aria-hidden\": \"true\",\n    \"data-slot\": \"icon\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, /*#__PURE__*/React.createElement(\"path\", {\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    d: \"M6.75 3v2.25M17.25 3v2.25M3 18.75V7.5a2.25 2.25 0 0 1 2.25-2.25h13.5A2.25 2.25 0 0 1 21 7.5v11.25m-18 0A2.25 2.25 0 0 0 5.25 21h13.5A2.25 2.25 0 0 0 21 18.75m-18 0v-7.5A2.25 2.25 0 0 1 5.25 9h13.5A2.25 2.25 0 0 1 21 11.25v7.5\"\n  }));\n}\nconst ForwardRef = /*#__PURE__*/ React.forwardRef(CalendarIcon);\nexport default ForwardRef;","import * as React from \"react\";\nfunction FunnelIcon({\n  title,\n  titleId,\n  ...props\n}, svgRef) {\n  return /*#__PURE__*/React.createElement(\"svg\", Object.assign({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    fill: \"none\",\n    viewBox: \"0 0 24 24\",\n    strokeWidth: 1.5,\n    stroke: \"currentColor\",\n    \"aria-hidden\": \"true\",\n    \"data-slot\": \"icon\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, /*#__PURE__*/React.createElement(\"path\", {\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    d: \"M12 3c2.755 0 5.455.232 8.083.678.533.09.917.556.917 1.096v1.044a2.25 2.25 0 0 1-.659 1.591l-5.432 5.432a2.25 2.25 0 0 0-.659 1.591v2.927a2.25 2.25 0 0 1-1.244 2.013L9.75 21v-6.568a2.25 2.25 0 0 0-.659-1.591L3.659 7.409A2.25 2.25 0 0 1 3 5.818V4.774c0-.54.384-1.006.917-1.096A48.32 48.32 0 0 1 12 3Z\"\n  }));\n}\nconst ForwardRef = /*#__PURE__*/ React.forwardRef(FunnelIcon);\nexport default ForwardRef;","function isObject(value) {\n    return typeof value === \"object\" && value !== null;\n}\n\nexport { isObject };\n","import * as React from \"react\";\nfunction ListBulletIcon({\n  title,\n  titleId,\n  ...props\n}, svgRef) {\n  return /*#__PURE__*/React.createElement(\"svg\", Object.assign({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    fill: \"none\",\n    viewBox: \"0 0 24 24\",\n    strokeWidth: 1.5,\n    stroke: \"currentColor\",\n    \"aria-hidden\": \"true\",\n    \"data-slot\": \"icon\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, /*#__PURE__*/React.createElement(\"path\", {\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    d: \"M8.25 6.75h12M8.25 12h12m-12 5.25h12M3.75 6.75h.007v.008H3.75V6.75Zm.375 0a.375.375 0 1 1-.75 0 .375.375 0 0 1 .75 0ZM3.75 12h.007v.008H3.75V12Zm.375 0a.375.375 0 1 1-.75 0 .375.375 0 0 1 .75 0Zm-.375 5.25h.007v.008H3.75v-.008Zm.375 0a.375.375 0 1 1-.75 0 .375.375 0 0 1 .75 0Z\"\n  }));\n}\nconst ForwardRef = /*#__PURE__*/ React.forwardRef(ListBulletIcon);\nexport default ForwardRef;","import * as React from \"react\";\nfunction PlusIcon({\n  title,\n  titleId,\n  ...props\n}, svgRef) {\n  return /*#__PURE__*/React.createElement(\"svg\", Object.assign({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    fill: \"none\",\n    viewBox: \"0 0 24 24\",\n    strokeWidth: 1.5,\n    stroke: \"currentColor\",\n    \"aria-hidden\": \"true\",\n    \"data-slot\": \"icon\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, /*#__PURE__*/React.createElement(\"path\", {\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    d: \"M12 4.5v15m7.5-7.5h-15\"\n  }));\n}\nconst ForwardRef = /*#__PURE__*/ React.forwardRef(PlusIcon);\nexport default ForwardRef;","import { isObject } from 'motion-utils';\n\n/**\n * Checks if an element is an HTML element in a way\n * that works across iframes\n */\nfunction isHTMLElement(element) {\n    return isObject(element) && \"offsetHeight\" in element;\n}\n\nexport { isHTMLElement };\n","import { useContext, useId, useEffect, useCallback } from 'react';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\n\n/**\n * When a component is the child of `AnimatePresence`, it can use `usePresence`\n * to access information about whether it's still present in the React tree.\n *\n * ```jsx\n * import { usePresence } from \"framer-motion\"\n *\n * export const Component = () => {\n *   const [isPresent, safeToRemove] = usePresence()\n *\n *   useEffect(() => {\n *     !isPresent && setTimeout(safeToRemove, 1000)\n *   }, [isPresent])\n *\n *   return <div />\n * }\n * ```\n *\n * If `isPresent` is `false`, it means that a component has been removed the tree, but\n * `AnimatePresence` won't really remove it until `safeToRemove` has been called.\n *\n * @public\n */\nfunction usePresence(subscribe = true) {\n    const context = useContext(PresenceContext);\n    if (context === null)\n        return [true, null];\n    const { isPresent, onExitComplete, register } = context;\n    // It's safe to call the following hooks conditionally (after an early return) because the context will always\n    // either be null or non-null for the lifespan of the component.\n    const id = useId();\n    useEffect(() => {\n        if (subscribe) {\n            return register(id);\n        }\n    }, [subscribe]);\n    const safeToRemove = useCallback(() => subscribe && onExitComplete && onExitComplete(id), [id, onExitComplete, subscribe]);\n    return !isPresent && onExitComplete ? [false, safeToRemove] : [true];\n}\n/**\n * Similar to `usePresence`, except `useIsPresent` simply returns whether or not the component is present.\n * There is no `safeToRemove` function.\n *\n * ```jsx\n * import { useIsPresent } from \"framer-motion\"\n *\n * export const Component = () => {\n *   const isPresent = useIsPresent()\n *\n *   useEffect(() => {\n *     !isPresent && console.log(\"I've been removed!\")\n *   }, [isPresent])\n *\n *   return <div />\n * }\n * ```\n *\n * @public\n */\nfunction useIsPresent() {\n    return isPresent(useContext(PresenceContext));\n}\nfunction isPresent(context) {\n    return context === null ? true : context.isPresent;\n}\n\nexport { isPresent, useIsPresent, usePresence };\n","import * as React from \"react\";\nfunction TrashIcon({\n  title,\n  titleId,\n  ...props\n}, svgRef) {\n  return /*#__PURE__*/React.createElement(\"svg\", Object.assign({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    fill: \"none\",\n    viewBox: \"0 0 24 24\",\n    strokeWidth: 1.5,\n    stroke: \"currentColor\",\n    \"aria-hidden\": \"true\",\n    \"data-slot\": \"icon\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, /*#__PURE__*/React.createElement(\"path\", {\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    d: \"m14.74 9-.346 9m-4.788 0L9.26 9m9.968-3.21c.342.052.682.107 1.022.166m-1.022-.165L18.16 19.673a2.25 2.25 0 0 1-2.244 2.077H8.084a2.25 2.25 0 0 1-2.244-2.077L4.772 5.79m14.456 0a48.108 48.108 0 0 0-3.478-.397m-12 .562c.34-.059.68-.114 1.022-.165m0 0a48.11 48.11 0 0 1 3.478-.397m7.5 0v-.916c0-1.18-.91-2.164-2.09-2.201a51.964 51.964 0 0 0-3.32 0c-1.18.037-2.09 1.022-2.09 2.201v.916m7.5 0a48.667 48.667 0 0 0-7.5 0\"\n  }));\n}\nconst ForwardRef = /*#__PURE__*/ React.forwardRef(TrashIcon);\nexport default ForwardRef;","import * as React from \"react\";\nfunction CheckIcon({\n  title,\n  titleId,\n  ...props\n}, svgRef) {\n  return /*#__PURE__*/React.createElement(\"svg\", Object.assign({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    fill: \"none\",\n    viewBox: \"0 0 24 24\",\n    strokeWidth: 1.5,\n    stroke: \"currentColor\",\n    \"aria-hidden\": \"true\",\n    \"data-slot\": \"icon\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, /*#__PURE__*/React.createElement(\"path\", {\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    d: \"m4.5 12.75 6 6 9-13.5\"\n  }));\n}\nconst ForwardRef = /*#__PURE__*/ React.forwardRef(CheckIcon);\nexport default ForwardRef;","\"use client\";\nimport { createContext } from 'react';\n\n/**\n * @public\n */\nconst PresenceContext = \n/* @__PURE__ */ createContext(null);\n\nexport { PresenceContext };\n","\"use client\";\nimport { createContext } from 'react';\n\nconst LayoutGroupContext = createContext({});\n\nexport { LayoutGroupContext };\n","import * as React from \"react\";\nfunction FolderOpenIcon({\n  title,\n  titleId,\n  ...props\n}, svgRef) {\n  return /*#__PURE__*/React.createElement(\"svg\", Object.assign({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    fill: \"none\",\n    viewBox: \"0 0 24 24\",\n    strokeWidth: 1.5,\n    stroke: \"currentColor\",\n    \"aria-hidden\": \"true\",\n    \"data-slot\": \"icon\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, /*#__PURE__*/React.createElement(\"path\", {\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    d: \"M3.75 9.776c.112-.017.227-.026.344-.026h15.812c.117 0 .232.009.344.026m-16.5 0a2.25 2.25 0 0 0-1.883 2.542l.857 6a2.25 2.25 0 0 0 2.227 1.932H19.05a2.25 2.25 0 0 0 2.227-1.932l.857-6a2.25 2.25 0 0 0-1.883-2.542m-16.5 0V6A2.25 2.25 0 0 1 6 3.75h3.879a1.5 1.5 0 0 1 1.06.44l2.122 2.12a1.5 1.5 0 0 0 1.06.44H18A2.25 2.25 0 0 1 20.25 9v.776\"\n  }));\n}\nconst ForwardRef = /*#__PURE__*/ React.forwardRef(FolderOpenIcon);\nexport default ForwardRef;"],"names":["useIsomorphicLayoutEffect","isBrowser","useLayoutEffect","useEffect","TagIcon","_ref","svgRef","title","titleId","props","React","Object","assign","xmlns","fill","viewBox","strokeWidth","stroke","ref","id","strokeLinecap","strokeLinejoin","d","MotionConfigContext","createContext","transformPagePoint","p","isStatic","reducedMotion","DocumentTextIcon","PencilIcon","PopChildMeasure","getSnapshotBeforeUpdate","prevProps","element","this","childRef","current","isPresent","parent","offsetParent","parentWidth","isHTMLElement","offsetWidth","size","sizeRef","height","offsetHeight","width","top","offsetTop","left","offsetLeft","right","componentDidUpdate","render","children","PopChild","anchorX","root","useId","useRef","nonce","useContext","useInsertionEffect","x","dataset","motionPopId","style","document","createElement","head","appendChild","sheet","insertRule","removeChild","contains","jsx","PresenceChild","initial","onExitComplete","custom","presenceAffectsLayout","mode","presenceChildren","useConstant","newChildrenMap","isReusedContext","context","useMemo","childId","set","isComplete","values","register","delete","forEach","_","key","PresenceContext","Provider","value","Map","getChildKey","child","onlyElements","filtered","Children","isValidElement","push","AnimatePresence","propagate","isParentPresent","safeToRemove","usePresence","presentChildren","presentKeys","map","isInitialRender","pendingPresentChildren","exitComplete","diffedChildren","setDiffedChildren","useState","renderedChildren","setRenderedChildren","i","length","includes","get","join","exitingChildren","nextChildren","splice","forceRender","LayoutGroupContext","Fragment","undefined","onExit","has","isEveryExitComplete","isExitComplete","window","Squares2X2Icon","init","transformPropOrder","transformProps","Set","radToDeg","rad","Math","PI","rotate","v","angle","atan2","rebaseAngle","matrix2dParsers","y","translateX","translateY","scaleX","scaleY","scale","abs","rotateZ","skewX","atan","skewY","skew","sqrt","matrix3dParsers","z","translateZ","rotateX","rotateY","defaultTransformValue","name","parseValueFromTransform","transform","matrix3dMatch","match","parsers","matrix2dMatch","valueParser","split","convertTransformToNumber","parseFloat","trim","checkStringStartsWith","token","startsWith","isCSSVariableName","startsAsVariableToken","isCSSVariableToken","singleCssVariableRegex","test","convertBoundingBoxToBox","bottom","min","max","mixNumber","from","to","progress","isIdentityScale","hasScale","hasTransform","has2DTranslate","is2DTranslate","scalePoint","point","originPoint","applyPointDelta","translate","boxScale","applyAxisDelta","axis","arguments","applyBoxDelta","box","TREE_SCALE_SNAP_MIN","TREE_SCALE_SNAP_MAX","translateAxis","distance","transformAxis","axisTranslate","axisScale","axisOrigin","transformBox","originX","originY","measureViewportBox","instance","transformPoint","topLeft","bottomRight","transformBoxPoints","getBoundingClientRect","positionalKeys","clamp","number","parse","alpha","default","createUnitType","unit","endsWith","degrees","percent","px","vh","vw","progressPercentage","testValueType","type","dimensionValueTypes","findDimensionValueType","find","isNumericalString","splitCSSVariableRegex","getVariableValue","depth","fallback","exec","token1","token2","parseCSSVariable","resolved","getComputedStyle","getPropertyValue","trimmed","isNumOrPxType","transformKeys","nonTranslationalTransformKeys","filter","positionalValues","_ref2","paddingLeft","paddingRight","_ref3","_ref4","paddingTop","paddingBottom","_bbox","_ref5","_ref6","_ref7","_ref8","_ref9","_ref0","_ref1","_ref10","noop","any","MotionGlobalConfig","stepsOrder","statsBuffer","addProjectionMetrics","createRenderBatcher","scheduleNextBatch","allowKeepAlive","runNextFrame","useDefaultElapsed","state","delta","timestamp","isProcessing","flagRunNextFrame","steps","reduce","acc","stepName","thisFrame","nextFrame","flushNextFrame","toKeepAlive","WeakSet","latestFrameData","numCalls","triggerCallback","callback","step","schedule","queue","add","cancel","process","frameData","frameloop","clear","createRenderStep","setup","read","resolveKeyframes","preUpdate","update","preRender","postRender","processBatch","useManualTiming","performance","now","keepAlive","immediate","frame","cancelFrame","frameSteps","requestAnimationFrame","toResolve","isScheduled","anyNeedsMeasurement","isForced","measureAllKeyframes","resolversToMeasure","Array","resolver","needsMeasurement","elementsToMeasure","transformsToRestore","removedTransforms","visualElement","getValue","removeNonTranslationalTransform","measureInitialState","restore","measureEndState","suspendedScrollY","scrollTo","complete","readAllKeyframes","readKeyframes","KeyframeResolver","constructor","unresolvedKeyframes","onComplete","motionValue","isAsync","scheduleResolve","currentValue","finalKeyframe","valueAsRead","readValue","keyframes","fillWildcards","setFinalKeyframe","renderEndStyles","isForcedComplete","resume","isZeroValueString","isNone","sanitize","round","floatRegex","singleColorRegex","isColorString","testProp","Boolean","isNullish","prototype","hasOwnProperty","call","splitColor","aName","bName","cName","a","b","c","rgbUnit","clampRgbUnit","rgba","red","green","blue","alpha$1","hex","r","g","substring","parseInt","hsla","hue","saturation","lightness","color","getAnimatableNone","parsed","colorRegex","NUMBER_TOKEN","COLOR_TOKEN","complexRegex","analyseComplexValue","originalValue","toString","indexes","var","types","replace","parsedValue","parseComplexValue","createTransformer","source","numSections","output","convertNumbersToZero","complex","isNaN","transformer","maxDefaults","applyDefaultFilter","slice","defaultValue","functionRegex","functions","int","numberValueTypes","borderWidth","borderTopWidth","borderRightWidth","borderBottomWidth","borderLeftWidth","borderRadius","radius","borderTopLeftRadius","borderTopRightRadius","borderBottomRightRadius","borderBottomLeftRadius","maxWidth","maxHeight","padding","margin","marginTop","marginRight","marginBottom","marginLeft","backgroundPositionX","backgroundPositionY","scaleZ","perspective","transformPerspective","opacity","originZ","zIndex","fillOpacity","strokeOpacity","numOctaves","defaultValueTypes","backgroundColor","outlineColor","borderColor","borderTopColor","borderRightColor","borderBottomColor","borderLeftColor","WebkitFilter","getDefaultValueType","defaultValueType","invalidTemplates","DOMKeyframesResolver","super","keyframe","resolveNoneKeyframes","origin","target","originType","targetType","noneKeyframeIndexes","animatableTemplate","noneIndex","makeNoneKeyframesAnimatable","pageYOffset","measuredOrigin","measureKeyframe","jump","finalKeyframeIndex","unsetTransformName","unsetTransformValue","isMotionValue","getVelocity","clearTime","time","newTime","queueMicrotask","addUniqueItem","arr","item","indexOf","removeItem","index","SubscriptionManager","subscriptions","handler","notify","numSubscriptions","getSize","velocityPerSecond","velocity","frameDuration","collectMotionValues","MotionValue","_this","options","canTrackVelocity","events","updateAndNotify","currentTime","updatedAt","setPrevFrameValue","prev","setCurrent","change","dependents","dependent","dirty","renderRequest","hasAnimated","owner","prevFrameValue","prevUpdatedAt","onChange","subscription","on","eventName","unsubscribe","stop","clearListeners","eventManagers","attach","passiveEffect","stopPassiveEffect","setWithVelocity","endAnimation","addDependent","removeDependent","getPrevious","start","startAnimation","Promise","resolve","animation","animationStart","then","animationComplete","clearAnimation","animationCancel","isAnimating","destroy","valueTypes","microtask","cancelMicrotask","featureProps","exit","drag","focus","hover","tap","pan","inView","layout","featureDefinitions","isEnabled","some","createBox","prefersReducedMotion","hasReducedMotionListener","visualElementStore","WeakMap","isAnimationControls","isVariantLabel","isArray","variantPriorityOrder","variantProps","isControllingVariants","animate","isVariantNode","variants","getValueState","resolveVariantFromProps","definition","propEventHandlers","VisualElement","scrapeMotionValuesFromProps","_props","_prevProps","_visualElement","presenceContext","reducedMotionConfig","blockInitialAnimation","visualState","shouldReduceMotion","features","valueSubscriptions","prevMotionValues","propEventSubscriptions","notifyUpdate","latestValues","triggerBuild","renderInstance","renderState","projection","renderScheduledAt","scheduleRender","baseTarget","initialValues","variantChildren","manuallyAnimateOnMount","willChange","initialMotionValues","mount","removeFromVariantTree","addVariantChild","bindToMotionValue","matchMedia","motionMediaQuery","setReducedMotionPreferences","matches","addEventListener","initPrefersReducedMotion","unmount","remove","feature","isMounted","valueIsTransform","onBindTransform","removeOnChange","latestValue","onUpdate","isTransformDirty","removeOnRenderRequest","removeSyncCheck","MotionCheckAppearSync","sortNodePosition","other","sortInstanceNodePosition","updateFeatures","featureDefinition","Feature","FeatureConstructor","build","measureInstanceViewportBox","getStaticValue","setStaticValue","transformTemplate","prevPresenceContext","listener","next","nextValue","prevValue","addValue","hasValue","existingValue","liveStyle","removeValue","updateMotionValuesFromProps","handleChildMotionValue","getProps","getVariant","getDefaultTransition","transition","getTransformPagePoint","getClosestVariantNode","closestVariantNode","removeValueFromRenderState","getBaseTargetFromProps","readValueFromInstance","setBaseTarget","getBaseTarget","valueFromInitial","variant","_len","args","_key","scheduleRenderMicrotask","DOMVisualElement","compareDocumentPosition","vars","childSubscription","latest","textContent","getValueAsType","translateAlias","numTransforms","buildHTMLStyles","transformOrigin","hasTransformOrigin","valueAsType","transformString","transformIsDefault","valueIsDefault","buildTransform","renderHTML","styleProp","elementStyle","applyProjectionStyles","setProperty","scaleCorrectors","isForcedMotionValue","layoutId","newValues","HTMLVisualElement","isProjecting","readTransformValue","computedStyle","camelToDash","str","toLowerCase","dashKeys","offset","array","camelKeys","buildSVGAttrs","isSVGTag","attrX","attrY","attrScale","pathLength","pathSpacing","pathOffset","attrs","spacing","useDashCase","keys","buildSVGPath","camelCaseAttributes","tag","scrapeMotionValuesFromProps$1","charAt","toUpperCase","SVGVisualElement","defaultType","getAttribute","_styleProp","setAttribute","renderSVG","tagName","lowercaseSVGElements","isSVGComponent","Component","createDomVisualElement","allowProjection","LazyContext","strict","MotionContext","useCreateMotionContext","inherit","getCurrentTreeVariants","variantLabelsAsDependency","prop","createHtmlRenderState","copyRawValuesOnly","useStyle","useInitialMotionValues","useHTMLProps","htmlProps","dragListener","draggable","userSelect","WebkitUserSelect","WebkitTouchCallout","touchAction","tabIndex","onTap","onTapStart","whileTap","createSvgRenderState","useSVGProps","_isStatic","visualProps","rawStyles","validMotionProps","isValidMotionProp","shouldForward","isValidProp","require","useRender","forwardMotionProps","filteredProps","isDom","filterProps","elementProps","resolveMotionValue","makeLatestValues","scrapeMotionValues","motionValues","isControllingVariants$1","isVariantNode$1","isInitialAnimationBlocked","variantToSet","list","transitionEnd","valueTarget","makeUseVisualState","config","make","createRenderState","makeState","useHTMLVisualState","useSVGVisualState","motionComponentSymbol","Symbol","for","isRefObject","useMotionRef","externalRef","useCallback","onMount","optimizedAppearDataAttribute","SwitchLayoutGroupContext","useVisualElement","createVisualElement","ProjectionNodeConstructor","lazyContext","visualElementRef","renderer","initialLayoutGroupConfig","initialPromotionConfig","dragConstraints","layoutScroll","layoutRoot","layoutCrossfade","getClosestProjectingNode","setOptions","alwaysMeasureLayout","animationType","crossfade","createProjectionNode","optimisedAppearId","wantsHandoff","MotionHandoffIsComplete","MotionHasOptimisedAnimation","MotionIsMounted","animationState","animateChanges","MotionHandoffMarkAsComplete","createMotionComponent","preloadedFeatures","loadFeatures","useVisualState","MotionDOMComponent","MeasureLayout","configAndProps","useLayoutId","useStrictMode","layoutProjection","combined","ProjectionNode","getProjectionFunctionality","jsxs","displayName","ForwardRefMotionComponent","forwardRef","layoutGroupId","createMotionProxy","Proxy","componentCache","factory","deprecatedFactoryFunction","_target","resolveVariant","getValueTransition","isKeyframesTarget","setMotionValue","resolveFinalValueInKeyframes","addValueToWillChange","WillChange","newWillChange","getOptimisedAppearId","combineFunctions","pipe","transformers","secondsToMilliseconds","seconds","millisecondsToSeconds","milliseconds","activeAnimations","mainThread","waapi","hueToRgb","q","t","mixImmediate","mixLinearColor","fromExpo","expo","colorTypes","asRGBA","model","hslaToRgba","mixColor","fromRGBA","toRGBA","blended","invisibleValues","mixNumber$1","getMixer","mixComplex","mixArray","mixObject","numValues","blendValue","template","originStats","targetStats","mixVisibility","orderedOrigin","pointers","originIndex","originValue","matchOrder","mix","mixer","frameloopDriver","passTimestamp","generateLinearEasing","easing","duration","resolution","points","numPoints","maxGeneratorDuration","calcGeneratorDuration","generator","done","Infinity","calcGeneratorVelocity","resolveValue","prevT","springDefaults","stiffness","damping","mass","bounce","visualDuration","restSpeed","granular","restDelta","minDuration","maxDuration","minDamping","maxDamping","safeMin","findSpring","envelope","derivative","dampingRatio","undampedFreq","exponentialDecay","calcAngularFreq","exp","e","pow","f","initialGuess","result","rootIterations","approximateRoot","durationKeys","physicsKeys","isSpringType","spring","optionsOrVisualDuration","isResolvedFromDuration","springOptions","derived","getSpringOptions","initialVelocity","initialDelta","undampedAngularFreq","isGranularScale","resolveSpring","angularFreq","sin","cos","dampedAngularFreq","freqForT","sinh","cosh","calculatedDuration","currentVelocity","isBelowVelocityThreshold","isBelowDisplacementThreshold","toTransition","inertia","power","timeConstant","bounceDamping","bounceStiffness","modifyTarget","nearestBoundary","amplitude","ideal","calcDelta","calcLatest","applyFriction","timeReachedBoundary","spring$1","checkCatchBoundary","hasUpdatedFrame","applyToOptions","generatorOptions","ease","createGeneratorEasing","calcBezier","a1","a2","cubicBezier","mX1","mY1","mX2","mY2","getTForX","aX","lowerBound","upperBound","currentX","currentT","binarySubdivide","easeIn","easeOut","easeInOut","mirrorEasing","reverseEasing","backOut","backIn","backInOut","anticipate","circIn","acos","circOut","circInOut","isBezierDefinition","easingLookup","linear","easingDefinitionToFunction","x1","y1","x2","y2","toFromDifference","interpolate","input","isClamp","inputLength","isZeroDeltaRange","reverse","mixers","customMixer","mixerFactory","numMixers","easingFunction","createMixers","interpolator","progressInRange","defaultOffset","remaining","offsetProgress","fillOffset","keyframeValues","times","easingFunctions","isEasingArray","absoluteTimes","o","convertOffsetToTimes","mapTimeToKeyframe","isNotNull","getFinalKeyframe","repeat","repeatType","speed","resolvedKeyframes","transitionTypeMap","decay","tween","replaceTransitionType","WithPromise","updateFinished","finished","_finished","notifyFinished","onResolve","onReject","percentToProgress","JSAnimation","startTime","isStopped","holdTime","playbackSpeed","tick","teardown","onStop","initAnimation","play","autoplay","pause","repeatDelay","keyframes$1","generatorFactory","mixKeyframes","mirroredGenerator","resolvedDuration","totalDuration","updateTime","animationTime","sample","delay","timeWithoutDelay","isInDelayPhase","elapsed","frameGenerator","currentIteration","floor","iterationProgress","isAnimationFinished","finish","reject","driver","newSpeed","hasChanged","onPlay","onCancel","stopDriver","sampleTime","attachTimeline","timeline","allowFlatten","observe","memo","supportsScrollTimeline","ScrollTimeline","supportsFlags","memoSupports","supportsFlag","memoized","supportsLinearEasing","cubicBezierAsString","supportedWaapiEasing","mapEasingToNativeEasing","segmentEasing","startWaapiAnimation","valueName","pseudoElement","keyframeOptions","iterations","direction","finally","isGenerator","NativeAnimation","finishedTime","isPseudoElement","applyGeneratorOptions","onfinish","updateMotionValue","isCSSVar","setStyle","commitStyles","effect","getComputedTiming","Number","playbackRate","playState","newStartTime","updateTiming","unsupportedEasingFunctions","replaceStringEasing","NativeAnimationExtended","sampleAnimation","isAnimatable","acceleratedValues","supportsWaapi","Element","AsyncMotionValueAnimation","_animation","stopTimeline","keyframeResolver","createdAt","optionsWithDefaults","KeyframeResolver$1","forced","onKeyframesResolved","sync","isHandoff","resolvedAt","originKeyframe","targetKeyframe","isOriginAnimatable","isTargetAnimatable","hasKeyframesChanged","canAnimate","instantAnimations","resolvedOptions","subject","HTMLElement","supportsBrowserAnimation","catch","pendingTimeline","_onReject","underDampedSpring","keyframesTransition","valueKey","animateMotionValue","valueTransition","when","_delay","delayChildren","staggerChildren","staggerDirection","isTransitionDefined","shouldSkip","skipAnimations","isSync","shouldBlockAnimation","protectedKeys","needsAnimating","shouldBlock","animateTarget","targetAndTransition","transitionOverride","animations","animationTypeState","getState","MotionHandoffAnimation","appearId","all","setTarget","animateVariant","getAnimation","getChildAnimations","forwardDelay","numChildren","maxStaggerDuration","delayIsFunction","generateStaggerDuration","sort","sortByTreeOrder","animateChildren","first","last","shallowCompare","prevLength","numVariantProps","getVariantContext","reversePriorityOrder","numAnimationTypes","animateList","resolvedDefinition","animateVisualElement","createAnimationState","createState","buildResolvedTypeValues","changedActiveType","removedKeys","encounteredKeys","removedVariantIndex","typeState","propIsVariant","activeDelta","isActive","isInherited","prevProp","variantDidChange","checkVariantsDidChange","shouldAnimateType","handledRemovedValues","definitionList","resolvedValues","prevResolvedValues","allKeys","markToAnimate","valueHasChanged","fallbackAnimation","initialTransition","fallbackTarget","shouldAnimate","setActive","setAnimateFunction","makeAnimator","reset","createTypeState","whileInView","whileHover","whileDrag","whileFocus","node","updateAnimationControlsSubscription","unmountControls","subscribe","prevAnimate","prevIsPresent","exitAnimation","isDragging","isDragActive","addDomEvent","passive","removeEventListener","isPrimaryPointer","event","pointerType","button","isPrimary","extractEventInfo","pageX","pageY","addPointerEvent","addPointerInfo","calcLength","calcAxisDelta","calcBoxDelta","calcRelativeAxis","relative","calcRelativeAxisPosition","calcRelativePosition","eachAxis","getContextWindow","ownerDocument","defaultView","PanSession","handlers","contextWindow","dragSnapToOrigin","distanceThreshold","startEvent","lastMoveEvent","lastMoveEventInfo","updatePoint","info","getPanInfo","history","isPanStarted","isDistancePastThreshold","xDelta","yDelta","distance2D","onStart","onMove","handlePointerMove","handlePointerUp","end","onEnd","onSessionEnd","resumeAnimation","panInfo","initialInfo","onSessionStart","removeListeners","updateHandlers","subtractPoint","lastDevicePoint","startDevicePoint","timeDelta","timestampedPoint","lastPoint","calcRelativeAxisConstraints","calcViewportAxisConstraints","layoutAxis","constraintsAxis","defaultElastic","resolveAxisElastic","dragElastic","minLabel","maxLabel","resolvePointElastic","label","elementDragControls","VisualElementDragControls","openDragLock","currentDirection","constraints","hasMutatedConstraints","elastic","latestPointerEvent","latestPanInfo","originEvent","snapToCursor","panSession","pauseAnimation","stopAnimation","dragPropagation","onDragStart","resolveConstraints","isAnimationBlocked","getAxisMotionValue","measuredAxis","layoutBox","dragDirectionLock","onDirectionLock","onDrag","lockThreshold","getCurrentDirection","updateAxis","getAnimationState","finalEvent","finalPanInfo","onDragEnd","_point","shouldDrag","axisValue","applyConstraints","measure","prevConstraints","resolveRefConstraints","calcRelativeConstraints","resolveDragElastic","relativeConstraints","rebaseAxisConstraints","onMeasureDragConstraints","constraintsElement","constraintsBox","rootProjectionNode","viewportBox","scroll","measurePageBox","measuredConstraints","calcViewportConstraints","userConstraints","convertBoxToBoundingBox","dragMomentum","dragTransition","onDragTransitionEnd","momentumAnimations","startAxisValueAnimation","dragKey","externalMotionValue","scalePositionWithinConstraints","boxProgress","sourceLength","targetLength","calcOrigin","updateScroll","updateLayout","addListeners","stopPointerListener","measureDragConstraints","stopMeasureLayoutListener","stopResizeListener","stopLayoutUpdateListener","hasLayoutChanged","asyncHandler","globalProjectionState","hasAnimatedSinceResize","hasEverUpdated","pixelsToPercent","pixels","correctBorderRadius","correct","correctBoxShadow","treeScale","projectionDelta","original","shadow","xScale","yScale","averageScale","hasTakenAnySnapshot","MeasureLayoutWithContext","componentDidMount","layoutGroup","switchLayoutGroup","correctors","isCSSVariable","addScaleCorrector","defaultScaleCorrectors","group","didUpdate","layoutDependency","willUpdate","promote","relegate","stack","getStack","members","currentAnimation","isLead","componentWillUnmount","promoteContext","scheduleCheckAfterUnmount","deregister","applyTo","boxShadow","isSVGElement","isObject","compareByDepth","FlatTree","isDirty","timeout","checkElapsed","borders","numBorders","asNumber","isPx","getRadius","radiusName","easeCrossfadeIn","compress","easeCrossfadeOut","copyAxisInto","originAxis","copyBoxInto","originBox","copyAxisDeltaInto","originDelta","removePointDelta","removeAxisTransforms","transforms","sourceAxis","scaleKey","originKey","removeAxisDelta","xKeys","yKeys","removeBoxTransforms","sourceBox","isAxisDeltaZero","isDeltaZero","axisEquals","axisEqualsRounded","boxEqualsRounded","aspectRatio","axisDeltaEquals","NodeStack","prevLead","lead","indexOfNode","findIndex","member","preserveFollowOpacity","show","resumeFrom","preserveOpacity","snapshot","animationValues","isUpdating","isLayoutDirty","hide","exitAnimationComplete","resumingFrom","removeLeadSnapshot","metrics","nodes","calculatedTargetDeltas","calculatedProjections","transformAxes","resetDistortingTransform","sharedAnimationValues","cancelTreeOptimisedTransformAnimations","projectionNode","hasCheckedOptimisedAppear","MotionCancelOptimisedAnimation","attachResizeListener","defaultParent","measureScroll","checkIsScrollRoot","resetTransform","animationId","animationCommitId","isTreeAnimating","isProjectionDirty","isSharedProjectionDirty","updateManuallyBlocked","updateBlockedByResize","isSVG","needsReset","shouldResetTransform","eventHandlers","hasTreeAnimated","updateScheduled","scheduleUpdate","projectionUpdateScheduled","checkUpdateFailed","clearAllSnapshots","updateProjection","propagateDirtyNodes","resolveTargetDelta","calcProjection","cleanDirtyNodes","resolvedRelativeTargetAt","hasProjected","isVisible","animationProgress","sharedNodes","path","notifyListeners","subscriptionManager","hasListeners","cancelDelay","innerWidth","resizeUnblockUpdate","newInnerWidth","finishAnimation","registerSharedNode","hasRelativeLayoutChanged","newLayout","isTreeAnimationBlocked","relativeTarget","layoutTransition","defaultLayoutTransition","onLayoutAnimationStart","onLayoutAnimationComplete","hasTargetChanged","targetLayout","hasOnlyRelativeTargetChanged","animationOptions","setAnimationOrigin","blockUpdate","unblockUpdate","isUpdateBlocked","startUpdate","resetSkewAndRotation","getTransformTemplate","shouldNotifyListeners","prevTransformTemplateValue","updateSnapshot","clearMeasurements","clearIsLayoutDirty","resetTransformStyle","notifyLayoutUpdate","clearSnapshot","removeLeadSnapshots","scheduleUpdateProjection","measuredBox","prevLayout","layoutCorrected","phase","isRoot","wasRoot","isResetRequested","hasProjection","transformTemplateValue","transformTemplateHasChanged","removeTransform","pageBox","removeElementScroll","roundAxis","checkNodeWasScrollRoot","boxWithoutScroll","applyTransform","transformOnly","withTransforms","boxWithoutTransform","setTargetDelta","targetDelta","forceRelativeParentToResolveTarget","relativeParent","forceRecalculation","getLead","isShared","attemptToResolveRelativeTarget","getClosestProjectingParent","relativeTargetOrigin","targetWithTransforms","canSkip","pendingAnimation","prevTreeScaleX","prevTreeScaleY","treePath","isSharedTransition","treeLength","display","applyTreeDeltas","prevProjectionDelta","createProjectionDeltas","notifyAll","projectionDeltaWithTransform","snapshotLatestValues","mixedValues","relativeLayout","isSharedLayoutAnimation","isOnlyMember","shouldCrossfadeOpacity","hasOpacityCrossfade","prevRelativeTarget","mixTargetDelta","mixAxisDelta","mixAxis","follow","opacityExit","borderLabel","followRadius","leadRadius","mixValues","motionValue$1","animateSingleValue","completeAnimation","applyTransformsToTarget","shouldAnimatePositionOnly","xLength","yLength","shouldPreserveFollowOpacity","getPrevLead","hasDistortingTransform","resetValues","targetStyle","visibility","pointerEvents","valuesToRender","latestTransform","xTranslate","yTranslate","zTranslate","elementScaleX","elementScaleY","buildProjectionTransform","corrected","num","resetTree","measuredLayout","axisSnapshot","layoutDelta","visualDelta","parentSnapshot","parentLayout","relativeSnapshot","onBeforeLayoutMeasure","userAgentContains","string","navigator","userAgent","roundPoint","maxDistance","DocumentProjectionNode","documentElement","scrollLeft","body","scrollTop","HTMLProjectionNode","documentNode","position","removePointerDownListener","onPointerDown","pointerDownEvent","session","createPanHandlers","onPanSessionStart","onPanStart","onPan","onPanEnd","removeGroupControls","controls","dragControls","setupGesture","elementOrSelector","elements","scope","selectorCache","EventTarget","querySelectorAll","resolveElements","gestureAbortController","AbortController","signal","abort","isValidHover","handleHoverEvent","lifecycle","isNodeOrChild","parentElement","focusableElements","isPressing","filterEvents","firePointerEvent","dispatchEvent","PointerEvent","bubbles","isValidPressEvent","press","targetOrSelector","onPressStart","targets","eventOptions","cancelEvents","startPress","currentTarget","onPressEnd","onPointerEnd","endEvent","success","onPointerUp","onPointerCancel","upEvent","useGlobalTarget","cancelEvent","enableKeyboardPress","focusEvent","handleKeydown","handleKeyup","handleBlur","hasAttribute","handlePressEvent","HTMLButtonElement","disabled","observerCallbacks","observers","fireObserverCallback","entry","fireAllObserverCallbacks","entries","observeIntersection","rootInteresectionObserver","lookupRoot","rootObservers","JSON","stringify","IntersectionObserver","initIntersectionObserver","unobserve","thresholdNames","motion","hasEnteredView","isInView","startObserver","viewport","rootMargin","amount","once","threshold","isIntersecting","onViewportEnter","onViewportLeave","hasOptionsChanged","prevViewport","hasViewportOptionChanged","_element","globalTapTarget","onFocus","isFocusVisible","onBlur","onHoverStart","onPointerEnter","enterEvent","onHoverEnd","onPointerLeave","leaveEvent","EllipsisHorizontalIcon","HashtagIcon","BookmarkIcon","MagnifyingGlassIcon","CalendarIcon","FunnelIcon","ListBulletIcon","PlusIcon","TrashIcon","CheckIcon","FolderOpenIcon"],"sourceRoot":""}