{"version":3,"file":"static/js/249.0200d6e2.chunk.js","mappings":"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","sources":["components/Signup.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { authAPI, handleAPIError } from \"../services/api\";\nimport { useAuth } from \"../contexts/AuthContext\";\n\nconst Signup = ({ onSignupSuccess, onSwitchToLogin }) => {\n  const navigate = useNavigate();\n  const { verifyEmail, resendVerificationCode } = useAuth();\n  const [formData, setFormData] = useState({\n    email: \"\",\n    password: \"\",\n    confirmPassword: \"\",\n    fullname: \"\",\n  });\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(\"\");\n  const [showVerification, setShowVerification] = useState(false);\n  const [verificationCode, setVerificationCode] = useState(\"\");\n  const [countdown, setCountdown] = useState(0);\n  const [resendLoading, setResendLoading] = useState(false);\n\n  useEffect(() => {\n    if (countdown > 0) {\n      const timer = setTimeout(() => setCountdown(countdown - 1), 1000);\n      return () => clearTimeout(timer);\n    }\n  }, [countdown]);\n\n  const handleInputChange = (e) => {\n    const { name, value } = e.target;\n    setFormData((prev) => ({\n      ...prev,\n      [name]: value,\n    }));\n  };\n\n  const validateForm = () => {\n    if (formData.password !== formData.confirmPassword) {\n      setError(\"비밀번호가 일치하지 않습니다\");\n      return false;\n    }\n    if (formData.password.length < 8) {\n      setError(\"비밀번호는 8자 이상이어야 합니다\");\n      return false;\n    }\n    return true;\n  };\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    setError(\"\");\n\n    if (!validateForm()) {\n      return;\n    }\n\n    setLoading(true);\n\n    try {\n      const signupData = {\n        email: formData.email,\n        password: formData.password,\n        fullname: formData.fullname,\n      };\n\n      const response = await authAPI.signup(signupData);\n      console.log(\"회원가입 성공:\", response);\n\n      // 회원가입 성공 시 인증 코드 입력 화면 표시\n      setShowVerification(true);\n      setCountdown(180); // 3분 카운트다운 시작\n      setError(\"\");\n    } catch (error) {\n      const apiError = handleAPIError(error);\n      setError(apiError.message);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const handleVerification = async (e) => {\n    e.preventDefault();\n    setError(\"\");\n    setLoading(true);\n\n    try {\n      await verifyEmail({\n        email: formData.email,\n        code: verificationCode,\n      });\n\n      console.log(\"이메일 인증 성공\");\n      \n      if (onSignupSuccess) {\n        onSignupSuccess({ \n          message: \"회원가입이 완료되었습니다! 로그인해주세요.\" \n        }, formData.email);\n      } else {\n        navigate('/login');\n      }\n    } catch (error) {\n      const apiError = handleAPIError(error);\n      setError(apiError.message);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const handleResendCode = async () => {\n    setResendLoading(true);\n    setError(\"\");\n\n    try {\n      await resendVerificationCode(formData.email);\n      setCountdown(180); // 3분 카운트다운 재시작\n      setError(\"\");\n      alert(\"인증 코드가 다시 전송되었습니다.\");\n    } catch (error) {\n      const apiError = handleAPIError(error);\n      setError(apiError.message);\n    } finally {\n      setResendLoading(false);\n    }\n  };\n\n  const formatTime = (seconds) => {\n    const mins = Math.floor(seconds / 60);\n    const secs = seconds % 60;\n    return `${mins}:${secs.toString().padStart(2, '0')}`;\n  };\n\n  return (\n    <div className=\"min-h-screen flex items-center justify-center py-12 px-4 sm:px-6 lg:px-8\">\n      <div className=\"max-w-md w-full space-y-8\">\n        <div>\n          <h2 className=\"mt-6 text-center text-3xl font-extrabold text-gray-900 dark:text-white\">\n            회원가입\n          </h2>\n          <p className=\"mt-2 text-center text-sm text-gray-600 dark:text-gray-300\">\n            TITLE-NOMICS AI 제목 생성 시스템\n          </p>\n        </div>\n\n        {!showVerification ? (\n          <form className=\"mt-8 space-y-6\" onSubmit={handleSubmit}>\n            <div className=\"space-y-4\">\n              <div>\n                <label\n                  htmlFor=\"fullname\"\n                  className=\"block text-sm font-medium text-gray-700 dark:text-gray-300\"\n                >\n                  이름\n                </label>\n                <input\n                  id=\"fullname\"\n                  name=\"fullname\"\n                  type=\"text\"\n                  value={formData.fullname}\n                  onChange={handleInputChange}\n                  className=\"mt-1 appearance-none relative block w-full px-3 py-2 border border-gray-300 dark:border-gray-600 placeholder-gray-500 dark:placeholder-gray-400 text-gray-900 dark:text-white bg-white dark:bg-gray-700 rounded-md focus:outline-none focus:ring-blue-500 focus:border-blue-500 focus:z-10 sm:text-sm transition-colors duration-200\"\n                  placeholder=\"이름 (선택사항)\"\n                />\n              </div>\n\n              <div>\n                <label\n                  htmlFor=\"email\"\n                  className=\"block text-sm font-medium text-gray-700 dark:text-gray-300\"\n                >\n                  이메일 *\n                </label>\n                <input\n                  id=\"email\"\n                  name=\"email\"\n                  type=\"email\"\n                  required\n                  value={formData.email}\n                  onChange={handleInputChange}\n                  className=\"mt-1 appearance-none relative block w-full px-3 py-2 border border-gray-300 dark:border-gray-600 placeholder-gray-500 dark:placeholder-gray-400 text-gray-900 dark:text-white bg-white dark:bg-gray-700 rounded-md focus:outline-none focus:ring-blue-500 focus:border-blue-500 focus:z-10 sm:text-sm transition-colors duration-200\"\n                  placeholder=\"이메일 주소\"\n                />\n              </div>\n\n              <div>\n                <label\n                  htmlFor=\"password\"\n                  className=\"block text-sm font-medium text-gray-700 dark:text-gray-300\"\n                >\n                  비밀번호 *\n                </label>\n                <input\n                  id=\"password\"\n                  name=\"password\"\n                  type=\"password\"\n                  required\n                  value={formData.password}\n                  onChange={handleInputChange}\n                  className=\"mt-1 appearance-none relative block w-full px-3 py-2 border border-gray-300 dark:border-gray-600 placeholder-gray-500 dark:placeholder-gray-400 text-gray-900 dark:text-white bg-white dark:bg-gray-700 rounded-md focus:outline-none focus:ring-blue-500 focus:border-blue-500 focus:z-10 sm:text-sm transition-colors duration-200\"\n                  placeholder=\"비밀번호 (8자 이상, 대소문자, 숫자, 특수문자 포함)\"\n                />\n              </div>\n\n              <div>\n                <label\n                  htmlFor=\"confirmPassword\"\n                  className=\"block text-sm font-medium text-gray-700 dark:text-gray-300\"\n                >\n                  비밀번호 확인 *\n                </label>\n                <input\n                  id=\"confirmPassword\"\n                  name=\"confirmPassword\"\n                  type=\"password\"\n                  required\n                  value={formData.confirmPassword}\n                  onChange={handleInputChange}\n                  className=\"mt-1 appearance-none relative block w-full px-3 py-2 border border-gray-300 dark:border-gray-600 placeholder-gray-500 dark:placeholder-gray-400 text-gray-900 dark:text-white bg-white dark:bg-gray-700 rounded-md focus:outline-none focus:ring-blue-500 focus:border-blue-500 focus:z-10 sm:text-sm transition-colors duration-200\"\n                  placeholder=\"비밀번호 확인\"\n                />\n              </div>\n            </div>\n\n            {error && (\n              <div className=\"bg-red-50 dark:bg-red-900 border border-red-200 dark:border-red-700 text-red-700 dark:text-red-300 px-4 py-3 rounded relative\">\n                {error}\n              </div>\n            )}\n\n            <div>\n              <button\n                type=\"submit\"\n                disabled={loading}\n                className=\"group relative w-full flex justify-center py-2 px-4 border border-transparent text-sm font-medium rounded-md text-white bg-blue-600 hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500 disabled:opacity-50 disabled:cursor-not-allowed\"\n              >\n                {loading ? \"가입 중...\" : \"회원가입\"}\n              </button>\n            </div>\n\n            <div className=\"text-center space-y-2\">\n              <button\n                type=\"button\"\n                onClick={onSwitchToLogin || (() => navigate('/login'))}\n                className=\"text-blue-600 hover:text-blue-500 dark:text-blue-400 dark:hover:text-blue-300 text-sm transition-colors duration-200\"\n              >\n                이미 계정이 있으신가요? 로그인\n              </button>\n            </div>\n          </form>\n        ) : (\n          <form className=\"mt-8 space-y-6\" onSubmit={handleVerification}>\n            <div className=\"text-center mb-6\">\n              <div className=\"bg-green-50 dark:bg-green-900 border border-green-200 dark:border-green-700 text-green-700 dark:text-green-300 px-4 py-3 rounded mb-4\">\n                <p className=\"font-medium\">이메일이 전송되었습니다!</p>\n                <p className=\"text-sm mt-1\">{formData.email}로 인증 코드를 보냈습니다.</p>\n              </div>\n              {countdown > 0 && (\n                <div className=\"text-lg font-semibold text-gray-700 dark:text-gray-300\">\n                  남은 시간: <span className=\"text-blue-600 dark:text-blue-400\">{formatTime(countdown)}</span>\n                </div>\n              )}\n            </div>\n\n            <div className=\"space-y-4\">\n              <div>\n                <label\n                  htmlFor=\"verificationCode\"\n                  className=\"block text-sm font-medium text-gray-700 dark:text-gray-300\"\n                >\n                  인증 코드\n                </label>\n                <input\n                  id=\"verificationCode\"\n                  name=\"verificationCode\"\n                  type=\"text\"\n                  required\n                  value={verificationCode}\n                  onChange={(e) => setVerificationCode(e.target.value)}\n                  className=\"mt-1 appearance-none relative block w-full px-3 py-2 border border-gray-300 dark:border-gray-600 placeholder-gray-500 dark:placeholder-gray-400 text-gray-900 dark:text-white bg-white dark:bg-gray-700 rounded-md focus:outline-none focus:ring-blue-500 focus:border-blue-500 focus:z-10 sm:text-sm transition-colors duration-200\"\n                  placeholder=\"6자리 인증 코드 입력\"\n                  maxLength=\"6\"\n                />\n              </div>\n            </div>\n\n            {error && (\n              <div className=\"bg-red-50 dark:bg-red-900 border border-red-200 dark:border-red-700 text-red-700 dark:text-red-300 px-4 py-3 rounded relative\">\n                {error}\n              </div>\n            )}\n\n            <div className=\"space-y-3\">\n              <button\n                type=\"submit\"\n                disabled={loading || !verificationCode}\n                className=\"group relative w-full flex justify-center py-2 px-4 border border-transparent text-sm font-medium rounded-md text-white bg-blue-600 hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500 disabled:opacity-50 disabled:cursor-not-allowed\"\n              >\n                {loading ? \"확인 중...\" : \"인증 확인\"}\n              </button>\n\n              <button\n                type=\"button\"\n                onClick={handleResendCode}\n                disabled={resendLoading || countdown > 120}\n                className=\"group relative w-full flex justify-center py-2 px-4 border border-gray-300 dark:border-gray-600 text-sm font-medium rounded-md text-gray-700 dark:text-gray-300 bg-white dark:bg-gray-700 hover:bg-gray-50 dark:hover:bg-gray-600 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500 disabled:opacity-50 disabled:cursor-not-allowed\"\n              >\n                {resendLoading ? \"전송 중...\" : \"인증 코드 다시 받기\"}\n                {countdown > 120 && <span className=\"ml-2\">({120 - (180 - countdown)}초 후 가능)</span>}\n              </button>\n            </div>\n\n            <div className=\"text-center\">\n              <button\n                type=\"button\"\n                onClick={() => {\n                  setShowVerification(false);\n                  setVerificationCode(\"\");\n                  setCountdown(0);\n                  setError(\"\");\n                }}\n                className=\"text-gray-600 hover:text-gray-500 dark:text-gray-400 dark:hover:text-gray-300 text-sm transition-colors duration-200\"\n              >\n                이전 단계로 돌아가기\n              </button>\n            </div>\n          </form>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default Signup;\n"],"names":["_ref","onSignupSuccess","onSwitchToLogin","navigate","useNavigate","verifyEmail","resendVerificationCode","useAuth","formData","setFormData","useState","email","password","confirmPassword","fullname","loading","setLoading","error","setError","showVerification","setShowVerification","verificationCode","setVerificationCode","countdown","setCountdown","resendLoading","setResendLoading","useEffect","timer","setTimeout","clearTimeout","handleInputChange","e","name","value","target","prev","_jsx","className","children","_jsxs","onSubmit","async","preventDefault","code","console","log","message","apiError","handleAPIError","seconds","Math","floor","toString","padStart","htmlFor","id","type","required","onChange","placeholder","maxLength","disabled","onClick","alert","length","signupData","response","authAPI","signup"],"sourceRoot":""}