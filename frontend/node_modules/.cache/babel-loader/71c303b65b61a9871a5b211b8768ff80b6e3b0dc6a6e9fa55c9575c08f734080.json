{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useState, useCallback } from \"react\";\nimport { aiAPI, handleAPIError } from \"../services/api\";\nimport { toast } from \"react-hot-toast\";\nexport const useAI = () => {\n  _s();\n  const [isGenerating, setIsGenerating] = useState(false);\n  const [generatedTitles, setGeneratedTitles] = useState([]);\n  const [error, setError] = useState(null);\n\n  // 제목 생성\n  const generateTitle = useCallback(async (projectId, content) => {\n    try {\n      setIsGenerating(true);\n      setError(null);\n      const result = await aiAPI.generateTitle(projectId, content);\n\n      // 생성된 제목을 배열에 추가\n      const newTitle = {\n        id: Date.now(),\n        content: result.title,\n        timestamp: new Date(),\n        original: content\n      };\n      setGeneratedTitles(prev => [newTitle, ...prev]);\n      toast.success(\"제목이 생성되었습니다\");\n      return result;\n    } catch (error) {\n      const errorInfo = handleAPIError(error);\n      setError(errorInfo.message);\n      toast.error(errorInfo.message);\n      throw error;\n    } finally {\n      setIsGenerating(false);\n    }\n  }, []);\n\n  // 제목 목록 초기화\n  const clearTitles = useCallback(() => {\n    setGeneratedTitles([]);\n    setError(null);\n  }, []);\n\n  // 제목 복사\n  const copyTitle = useCallback(async title => {\n    try {\n      await navigator.clipboard.writeText(title);\n      toast.success(\"제목이 복사되었습니다\");\n    } catch (error) {\n      toast.error(\"복사에 실패했습니다\");\n    }\n  }, []);\n  return {\n    isGenerating,\n    generatedTitles,\n    error,\n    generateTitle,\n    clearTitles,\n    copyTitle\n  };\n};\n_s(useAI, \"JZXoShah2vea1lARz8g2MNeZxhA=\");","map":{"version":3,"names":["useState","useCallback","aiAPI","handleAPIError","toast","useAI","_s","isGenerating","setIsGenerating","generatedTitles","setGeneratedTitles","error","setError","generateTitle","projectId","content","result","newTitle","id","Date","now","title","timestamp","original","prev","success","errorInfo","message","clearTitles","copyTitle","navigator","clipboard","writeText"],"sources":["/Users/yeong-gwang/Documents/work/서울경제신문/ai_제목달기/frontend/src/hooks/useAI.js"],"sourcesContent":["import { useState, useCallback } from \"react\";\nimport { aiAPI, handleAPIError } from \"../services/api\";\nimport { toast } from \"react-hot-toast\";\n\nexport const useAI = () => {\n  const [isGenerating, setIsGenerating] = useState(false);\n  const [generatedTitles, setGeneratedTitles] = useState([]);\n  const [error, setError] = useState(null);\n\n  // 제목 생성\n  const generateTitle = useCallback(async (projectId, content) => {\n    try {\n      setIsGenerating(true);\n      setError(null);\n\n      const result = await aiAPI.generateTitle(projectId, content);\n\n      // 생성된 제목을 배열에 추가\n      const newTitle = {\n        id: Date.now(),\n        content: result.title,\n        timestamp: new Date(),\n        original: content,\n      };\n\n      setGeneratedTitles((prev) => [newTitle, ...prev]);\n      toast.success(\"제목이 생성되었습니다\");\n\n      return result;\n    } catch (error) {\n      const errorInfo = handleAPIError(error);\n      setError(errorInfo.message);\n      toast.error(errorInfo.message);\n      throw error;\n    } finally {\n      setIsGenerating(false);\n    }\n  }, []);\n\n  // 제목 목록 초기화\n  const clearTitles = useCallback(() => {\n    setGeneratedTitles([]);\n    setError(null);\n  }, []);\n\n  // 제목 복사\n  const copyTitle = useCallback(async (title) => {\n    try {\n      await navigator.clipboard.writeText(title);\n      toast.success(\"제목이 복사되었습니다\");\n    } catch (error) {\n      toast.error(\"복사에 실패했습니다\");\n    }\n  }, []);\n\n  return {\n    isGenerating,\n    generatedTitles,\n    error,\n    generateTitle,\n    clearTitles,\n    copyTitle,\n  };\n};\n"],"mappings":";AAAA,SAASA,QAAQ,EAAEC,WAAW,QAAQ,OAAO;AAC7C,SAASC,KAAK,EAAEC,cAAc,QAAQ,iBAAiB;AACvD,SAASC,KAAK,QAAQ,iBAAiB;AAEvC,OAAO,MAAMC,KAAK,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACzB,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGR,QAAQ,CAAC,KAAK,CAAC;EACvD,MAAM,CAACS,eAAe,EAAEC,kBAAkB,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EAC1D,MAAM,CAACW,KAAK,EAAEC,QAAQ,CAAC,GAAGZ,QAAQ,CAAC,IAAI,CAAC;;EAExC;EACA,MAAMa,aAAa,GAAGZ,WAAW,CAAC,OAAOa,SAAS,EAAEC,OAAO,KAAK;IAC9D,IAAI;MACFP,eAAe,CAAC,IAAI,CAAC;MACrBI,QAAQ,CAAC,IAAI,CAAC;MAEd,MAAMI,MAAM,GAAG,MAAMd,KAAK,CAACW,aAAa,CAACC,SAAS,EAAEC,OAAO,CAAC;;MAE5D;MACA,MAAME,QAAQ,GAAG;QACfC,EAAE,EAAEC,IAAI,CAACC,GAAG,CAAC,CAAC;QACdL,OAAO,EAAEC,MAAM,CAACK,KAAK;QACrBC,SAAS,EAAE,IAAIH,IAAI,CAAC,CAAC;QACrBI,QAAQ,EAAER;MACZ,CAAC;MAEDL,kBAAkB,CAAEc,IAAI,IAAK,CAACP,QAAQ,EAAE,GAAGO,IAAI,CAAC,CAAC;MACjDpB,KAAK,CAACqB,OAAO,CAAC,aAAa,CAAC;MAE5B,OAAOT,MAAM;IACf,CAAC,CAAC,OAAOL,KAAK,EAAE;MACd,MAAMe,SAAS,GAAGvB,cAAc,CAACQ,KAAK,CAAC;MACvCC,QAAQ,CAACc,SAAS,CAACC,OAAO,CAAC;MAC3BvB,KAAK,CAACO,KAAK,CAACe,SAAS,CAACC,OAAO,CAAC;MAC9B,MAAMhB,KAAK;IACb,CAAC,SAAS;MACRH,eAAe,CAAC,KAAK,CAAC;IACxB;EACF,CAAC,EAAE,EAAE,CAAC;;EAEN;EACA,MAAMoB,WAAW,GAAG3B,WAAW,CAAC,MAAM;IACpCS,kBAAkB,CAAC,EAAE,CAAC;IACtBE,QAAQ,CAAC,IAAI,CAAC;EAChB,CAAC,EAAE,EAAE,CAAC;;EAEN;EACA,MAAMiB,SAAS,GAAG5B,WAAW,CAAC,MAAOoB,KAAK,IAAK;IAC7C,IAAI;MACF,MAAMS,SAAS,CAACC,SAAS,CAACC,SAAS,CAACX,KAAK,CAAC;MAC1CjB,KAAK,CAACqB,OAAO,CAAC,aAAa,CAAC;IAC9B,CAAC,CAAC,OAAOd,KAAK,EAAE;MACdP,KAAK,CAACO,KAAK,CAAC,YAAY,CAAC;IAC3B;EACF,CAAC,EAAE,EAAE,CAAC;EAEN,OAAO;IACLJ,YAAY;IACZE,eAAe;IACfE,KAAK;IACLE,aAAa;IACbe,WAAW;IACXC;EACF,CAAC;AACH,CAAC;AAACvB,EAAA,CA3DWD,KAAK","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}