{"ast":null,"code":"var _jsxFileName = \"/Users/yeong-gwang/Documents/work/\\u1109\\u1165\\u110B\\u116E\\u11AF\\u1100\\u1167\\u11BC\\u110C\\u1166\\u1109\\u1175\\u11AB\\u1106\\u116E\\u11AB/ai_\\u110C\\u1166\\u1106\\u1169\\u11A8\\u1103\\u1161\\u11AF\\u1100\\u1175/frontend/src/components/prompts/PromptCard.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef, useEffect } from \"react\";\nimport { PencilIcon, TrashIcon, EyeIcon, EyeSlashIcon, Cog6ToothIcon, DocumentTextIcon, SparklesIcon, EllipsisHorizontalIcon, CheckIcon, XMarkIcon } from \"@heroicons/react/24/outline\";\nimport { AVAILABLE_MODELS, promptCardAPI } from \"../../services/api\";\nimport { toast } from \"react-hot-toast\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PromptCard = ({\n  card,\n  onEdit,\n  onToggle,\n  onDelete,\n  isCurrentStep = false,\n  isExecuted = false,\n  isExecuting = false,\n  stepNumber = 0,\n  hideDeleteButton = false,\n  // 삭제 버튼 숨김 옵션 추가\n  projectId,\n  // 프로젝트 ID 추가\n  enableInlineEdit = false // 인라인 편집 기능 활성화 옵션\n}) => {\n  _s();\n  const [isEditing, setIsEditing] = useState(false);\n  const [editingContent, setEditingContent] = useState(\"\");\n  const [originalContent, setOriginalContent] = useState(\"\");\n  const [isSaving, setIsSaving] = useState(false);\n  const [promptContent, setPromptContent] = useState(\"\");\n  const textareaRef = useRef(null);\n  const saveTimeoutRef = useRef(null);\n\n  // 프롬프트 내용 로드\n  useEffect(() => {\n    if (enableInlineEdit && card.s3Key && projectId) {\n      loadPromptContent();\n    }\n  }, [card.s3Key, projectId, enableInlineEdit]);\n  const loadPromptContent = async () => {\n    try {\n      // S3에서 프롬프트 내용 로드하는 API 호출\n      const response = await promptCardAPI.getPromptContent(projectId, card.promptId || card.id);\n      setPromptContent(response.content || \"프롬프트 내용을 불러올 수 없습니다.\");\n    } catch (error) {\n      console.error(\"프롬프트 내용 로드 실패:\", error);\n      setPromptContent(\"프롬프트 내용을 불러올 수 없습니다.\");\n    }\n  };\n\n  // 인라인 편집 시작\n  const startInlineEdit = () => {\n    if (!enableInlineEdit) return;\n    setOriginalContent(promptContent);\n    setEditingContent(promptContent);\n    setIsEditing(true);\n  };\n\n  // 편집 취소\n  const cancelEdit = () => {\n    setEditingContent(originalContent);\n    setIsEditing(false);\n    if (saveTimeoutRef.current) {\n      clearTimeout(saveTimeoutRef.current);\n    }\n  };\n\n  // 편집 저장\n  const saveEdit = async () => {\n    if (editingContent === originalContent) {\n      setIsEditing(false);\n      return;\n    }\n    setIsSaving(true);\n    try {\n      await promptCardAPI.updatePromptCard(projectId, card.promptId || card.id, {\n        promptText: editingContent\n      });\n      setPromptContent(editingContent);\n      setIsEditing(false);\n      toast.success(\"프롬프트가 수정되었습니다\");\n    } catch (error) {\n      console.error(\"프롬프트 수정 실패:\", error);\n      toast.error(\"프롬프트 수정에 실패했습니다\");\n      setEditingContent(originalContent);\n    } finally {\n      setIsSaving(false);\n    }\n  };\n\n  // 2초 자동 저장\n  const handleContentChange = value => {\n    setEditingContent(value);\n    if (saveTimeoutRef.current) {\n      clearTimeout(saveTimeoutRef.current);\n    }\n    saveTimeoutRef.current = setTimeout(() => {\n      if (value !== originalContent) {\n        saveEdit();\n      }\n    }, 2000);\n  };\n\n  // 키보드 이벤트 처리\n  const handleKeyDown = e => {\n    if (e.key === 'Escape') {\n      cancelEdit();\n    } else if (e.key === 'Enter' && (e.ctrlKey || e.metaKey)) {\n      saveEdit();\n    }\n  };\n\n  // 텍스트 영역 자동 크기 조절\n  useEffect(() => {\n    if (isEditing && textareaRef.current) {\n      textareaRef.current.focus();\n      textareaRef.current.style.height = 'auto';\n      textareaRef.current.style.height = `${textareaRef.current.scrollHeight}px`;\n    }\n  }, [isEditing]);\n  useEffect(() => {\n    if (isEditing && textareaRef.current) {\n      textareaRef.current.style.height = 'auto';\n      textareaRef.current.style.height = `${textareaRef.current.scrollHeight}px`;\n    }\n  }, [editingContent]);\n  const getModelDisplayName = modelId => {\n    const model = AVAILABLE_MODELS.find(m => m.id === modelId);\n    return model ? model.name : modelId;\n  };\n  const handleToggleClick = async () => {\n    try {\n      await onToggle(card.promptId || card.id, !card.enabled);\n    } catch (error) {\n      console.error(\"카드 토글 실패:\", error);\n    }\n  };\n  const handleEdit = () => {\n    onEdit(card);\n  };\n  const getCardStyles = () => {\n    let baseStyles = \"relative bg-white border border-gray-200 rounded-lg p-3 transition-all duration-200 hover:border-gray-300 group\";\n    if (isCurrentStep) {\n      baseStyles += \" ring-2 ring-blue-400 border-blue-200 bg-blue-50\";\n    } else if (isExecuted) {\n      baseStyles += \" ring-1 ring-green-400 border-green-200 bg-green-50\";\n    } else if (card.enabled) {\n      baseStyles += \" hover:ring-1 hover:ring-gray-300\";\n    } else {\n      baseStyles += \" bg-gray-50 opacity-60 hover:opacity-80\";\n    }\n    return baseStyles;\n  };\n  const getCategoryInfo = categoryId => {\n    const categories = {\n      instruction: {\n        name: \"역할 및 목표\",\n        color: \"bg-slate-100/80 text-slate-700 border-slate-200/80\",\n        icon: \"\"\n      },\n      knowledge: {\n        name: \"지식 베이스\",\n        color: \"bg-slate-100/80 text-slate-700 border-slate-200/80\",\n        icon: \"\"\n      },\n      secondary: {\n        name: \"CoT (사고 과정)\",\n        color: \"bg-slate-100/80 text-slate-700 border-slate-200/80\",\n        icon: \"\"\n      },\n      style_guide: {\n        name: \"스타일 가이드\",\n        color: \"bg-slate-100/80 text-slate-700 border-slate-200/80\",\n        icon: \"\"\n      },\n      validation: {\n        name: \"ReAct (추론+행동)\",\n        color: \"bg-slate-100/80 text-slate-700 border-slate-200/80\",\n        icon: \"\"\n      },\n      enhancement: {\n        name: \"품질 검증\",\n        color: \"bg-slate-100/80 text-slate-700 border-slate-200/80\",\n        icon: \"\"\n      }\n    };\n    return categories[categoryId] || {\n      name: categoryId,\n      color: \"bg-slate-100/80 text-slate-700 border-slate-200/80\",\n      icon: \"\"\n    };\n  };\n  const categoryInfo = getCategoryInfo(card.category);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: getCardStyles(),\n    children: [isExecuting && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"absolute -top-1 -right-1 z-10\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex items-center justify-center w-5 h-5 bg-blue-500 text-white rounded-full\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"animate-spin rounded-full h-2 w-2 border border-t-transparent border-white\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 222,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 221,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 220,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex items-start justify-between mb-2\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex items-center gap-2 flex-1 min-w-0\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `inline-flex items-center px-2 py-1 rounded text-xs font-medium border ${categoryInfo.color}`,\n          children: /*#__PURE__*/_jsxDEV(\"span\", {\n            children: categoryInfo.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 232,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 231,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 229,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex items-center gap-1 opacity-0 group-hover:opacity-100 transition-opacity duration-200\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleToggleClick,\n          className: `p-1.5 rounded transition-colors ${card.enabled ? \"text-green-600 hover:bg-green-50\" : \"text-gray-400 hover:bg-gray-100\"}`,\n          title: card.enabled ? \"비활성화\" : \"활성화\",\n          children: card.enabled ? /*#__PURE__*/_jsxDEV(EyeIcon, {\n            className: \"h-3 w-3\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 249,\n            columnNumber: 15\n          }, this) : /*#__PURE__*/_jsxDEV(EyeSlashIcon, {\n            className: \"h-3 w-3\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 251,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 239,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleEdit,\n          className: \"p-1.5 text-gray-600 hover:bg-blue-50 hover:text-blue-600 rounded transition-colors\",\n          title: \"\\uD3B8\\uC9D1\",\n          children: /*#__PURE__*/_jsxDEV(PencilIcon, {\n            className: \"h-3 w-3\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 261,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 256,\n          columnNumber: 11\n        }, this), !hideDeleteButton && /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => onDelete(card.promptId || card.id),\n          className: \"p-1.5 text-gray-400 hover:bg-red-50 hover:text-red-600 rounded transition-colors\",\n          title: \"\\uC0AD\\uC81C\",\n          children: /*#__PURE__*/_jsxDEV(TrashIcon, {\n            className: \"h-3 w-3\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 271,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 266,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 237,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 228,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"text-xs text-gray-500 leading-relaxed mb-2\",\n      children: card.description || categoryInfo.description || \"프롬프트 설명이 없습니다.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 278,\n      columnNumber: 7\n    }, this), (card.isCoT || card.isReAct) && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex gap-1 mb-2\",\n      children: [card.isCoT && /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"inline-flex items-center px-2 py-0.5 bg-purple-50 text-purple-700 rounded text-xs font-medium\",\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"CoT\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 287,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 286,\n        columnNumber: 13\n      }, this), card.isReAct && /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"inline-flex items-center px-2 py-0.5 bg-orange-50 text-orange-700 rounded text-xs font-medium\",\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"ReAct\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 292,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 291,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 284,\n      columnNumber: 9\n    }, this), isExecuted && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mt-2 flex items-center text-green-600 text-xs bg-green-50 p-2 rounded border border-green-200\",\n      children: [/*#__PURE__*/_jsxDEV(SparklesIcon, {\n        className: \"h-3 w-3 mr-1\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 302,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: \"\\uC2E4\\uD589 \\uC644\\uB8CC\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 303,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 301,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 217,\n    columnNumber: 5\n  }, this);\n};\n_s(PromptCard, \"4t+1c+BXbu5E4ZnMF/J58NuWXaU=\");\n_c = PromptCard;\nexport default PromptCard;\nvar _c;\n$RefreshReg$(_c, \"PromptCard\");","map":{"version":3,"names":["React","useState","useRef","useEffect","PencilIcon","TrashIcon","EyeIcon","EyeSlashIcon","Cog6ToothIcon","DocumentTextIcon","SparklesIcon","EllipsisHorizontalIcon","CheckIcon","XMarkIcon","AVAILABLE_MODELS","promptCardAPI","toast","jsxDEV","_jsxDEV","PromptCard","card","onEdit","onToggle","onDelete","isCurrentStep","isExecuted","isExecuting","stepNumber","hideDeleteButton","projectId","enableInlineEdit","_s","isEditing","setIsEditing","editingContent","setEditingContent","originalContent","setOriginalContent","isSaving","setIsSaving","promptContent","setPromptContent","textareaRef","saveTimeoutRef","s3Key","loadPromptContent","response","getPromptContent","promptId","id","content","error","console","startInlineEdit","cancelEdit","current","clearTimeout","saveEdit","updatePromptCard","promptText","success","handleContentChange","value","setTimeout","handleKeyDown","e","key","ctrlKey","metaKey","focus","style","height","scrollHeight","getModelDisplayName","modelId","model","find","m","name","handleToggleClick","enabled","handleEdit","getCardStyles","baseStyles","getCategoryInfo","categoryId","categories","instruction","color","icon","knowledge","secondary","style_guide","validation","enhancement","categoryInfo","category","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","title","description","isCoT","isReAct","_c","$RefreshReg$"],"sources":["/Users/yeong-gwang/Documents/work/서울경제신문/ai_제목달기/frontend/src/components/prompts/PromptCard.js"],"sourcesContent":["import React, { useState, useRef, useEffect } from \"react\";\nimport {\n  PencilIcon,\n  TrashIcon,\n  EyeIcon,\n  EyeSlashIcon,\n  Cog6ToothIcon,\n  DocumentTextIcon,\n  SparklesIcon,\n  EllipsisHorizontalIcon,\n  CheckIcon,\n  XMarkIcon,\n} from \"@heroicons/react/24/outline\";\nimport { AVAILABLE_MODELS, promptCardAPI } from \"../../services/api\";\nimport { toast } from \"react-hot-toast\";\n\nconst PromptCard = ({\n  card,\n  onEdit,\n  onToggle,\n  onDelete,\n  isCurrentStep = false,\n  isExecuted = false,\n  isExecuting = false,\n  stepNumber = 0,\n  hideDeleteButton = false, // 삭제 버튼 숨김 옵션 추가\n  projectId, // 프로젝트 ID 추가\n  enableInlineEdit = false, // 인라인 편집 기능 활성화 옵션\n}) => {\n  const [isEditing, setIsEditing] = useState(false);\n  const [editingContent, setEditingContent] = useState(\"\");\n  const [originalContent, setOriginalContent] = useState(\"\");\n  const [isSaving, setIsSaving] = useState(false);\n  const [promptContent, setPromptContent] = useState(\"\");\n  const textareaRef = useRef(null);\n  const saveTimeoutRef = useRef(null);\n\n  // 프롬프트 내용 로드\n  useEffect(() => {\n    if (enableInlineEdit && card.s3Key && projectId) {\n      loadPromptContent();\n    }\n  }, [card.s3Key, projectId, enableInlineEdit]);\n\n  const loadPromptContent = async () => {\n    try {\n      // S3에서 프롬프트 내용 로드하는 API 호출\n      const response = await promptCardAPI.getPromptContent(projectId, card.promptId || card.id);\n      setPromptContent(response.content || \"프롬프트 내용을 불러올 수 없습니다.\");\n    } catch (error) {\n      console.error(\"프롬프트 내용 로드 실패:\", error);\n      setPromptContent(\"프롬프트 내용을 불러올 수 없습니다.\");\n    }\n  };\n\n  // 인라인 편집 시작\n  const startInlineEdit = () => {\n    if (!enableInlineEdit) return;\n    \n    setOriginalContent(promptContent);\n    setEditingContent(promptContent);\n    setIsEditing(true);\n  };\n\n  // 편집 취소\n  const cancelEdit = () => {\n    setEditingContent(originalContent);\n    setIsEditing(false);\n    if (saveTimeoutRef.current) {\n      clearTimeout(saveTimeoutRef.current);\n    }\n  };\n\n  // 편집 저장\n  const saveEdit = async () => {\n    if (editingContent === originalContent) {\n      setIsEditing(false);\n      return;\n    }\n\n    setIsSaving(true);\n    try {\n      await promptCardAPI.updatePromptCard(projectId, card.promptId || card.id, {\n        promptText: editingContent\n      });\n      \n      setPromptContent(editingContent);\n      setIsEditing(false);\n      toast.success(\"프롬프트가 수정되었습니다\");\n    } catch (error) {\n      console.error(\"프롬프트 수정 실패:\", error);\n      toast.error(\"프롬프트 수정에 실패했습니다\");\n      setEditingContent(originalContent);\n    } finally {\n      setIsSaving(false);\n    }\n  };\n\n  // 2초 자동 저장\n  const handleContentChange = (value) => {\n    setEditingContent(value);\n    \n    if (saveTimeoutRef.current) {\n      clearTimeout(saveTimeoutRef.current);\n    }\n    \n    saveTimeoutRef.current = setTimeout(() => {\n      if (value !== originalContent) {\n        saveEdit();\n      }\n    }, 2000);\n  };\n\n  // 키보드 이벤트 처리\n  const handleKeyDown = (e) => {\n    if (e.key === 'Escape') {\n      cancelEdit();\n    } else if (e.key === 'Enter' && (e.ctrlKey || e.metaKey)) {\n      saveEdit();\n    }\n  };\n\n  // 텍스트 영역 자동 크기 조절\n  useEffect(() => {\n    if (isEditing && textareaRef.current) {\n      textareaRef.current.focus();\n      textareaRef.current.style.height = 'auto';\n      textareaRef.current.style.height = `${textareaRef.current.scrollHeight}px`;\n    }\n  }, [isEditing]);\n\n  useEffect(() => {\n    if (isEditing && textareaRef.current) {\n      textareaRef.current.style.height = 'auto';\n      textareaRef.current.style.height = `${textareaRef.current.scrollHeight}px`;\n    }\n  }, [editingContent]);\n  const getModelDisplayName = (modelId) => {\n    const model = AVAILABLE_MODELS.find((m) => m.id === modelId);\n    return model ? model.name : modelId;\n  };\n\n  const handleToggleClick = async () => {\n    try {\n      await onToggle(card.promptId || card.id, !card.enabled);\n    } catch (error) {\n      console.error(\"카드 토글 실패:\", error);\n    }\n  };\n\n  const handleEdit = () => {\n    onEdit(card);\n  };\n\n  const getCardStyles = () => {\n    let baseStyles =\n      \"relative bg-white border border-gray-200 rounded-lg p-3 transition-all duration-200 hover:border-gray-300 group\";\n\n    if (isCurrentStep) {\n      baseStyles += \" ring-2 ring-blue-400 border-blue-200 bg-blue-50\";\n    } else if (isExecuted) {\n      baseStyles += \" ring-1 ring-green-400 border-green-200 bg-green-50\";\n    } else if (card.enabled) {\n      baseStyles += \" hover:ring-1 hover:ring-gray-300\";\n    } else {\n      baseStyles += \" bg-gray-50 opacity-60 hover:opacity-80\";\n    }\n\n    return baseStyles;\n  };\n\n  const getCategoryInfo = (categoryId) => {\n    const categories = {\n      instruction: { \n        name: \"역할 및 목표\", \n        color: \"bg-slate-100/80 text-slate-700 border-slate-200/80\",\n        icon: \"\" \n      },\n      knowledge: {\n        name: \"지식 베이스\",\n        color: \"bg-slate-100/80 text-slate-700 border-slate-200/80\", \n        icon: \"\"\n      },\n      secondary: { \n        name: \"CoT (사고 과정)\", \n        color: \"bg-slate-100/80 text-slate-700 border-slate-200/80\",\n        icon: \"\"\n      },\n      style_guide: {\n        name: \"스타일 가이드\",\n        color: \"bg-slate-100/80 text-slate-700 border-slate-200/80\",\n        icon: \"\"\n      },\n      validation: { \n        name: \"ReAct (추론+행동)\", \n        color: \"bg-slate-100/80 text-slate-700 border-slate-200/80\",\n        icon: \"\"\n      },\n      enhancement: { \n        name: \"품질 검증\", \n        color: \"bg-slate-100/80 text-slate-700 border-slate-200/80\",\n        icon: \"\"\n      },\n    };\n    return (\n      categories[categoryId] || {\n        name: categoryId,\n        color: \"bg-slate-100/80 text-slate-700 border-slate-200/80\",\n        icon: \"\"\n      }\n    );\n  };\n\n  const categoryInfo = getCategoryInfo(card.category);\n\n  return (\n    <div className={getCardStyles()}>\n      {/* 실행 상태 표시 */}\n      {isExecuting && (\n        <div className=\"absolute -top-1 -right-1 z-10\">\n          <div className=\"flex items-center justify-center w-5 h-5 bg-blue-500 text-white rounded-full\">\n            <div className=\"animate-spin rounded-full h-2 w-2 border border-t-transparent border-white\"></div>\n          </div>\n        </div>\n      )}\n\n      {/* 카드 헤더 */}\n      <div className=\"flex items-start justify-between mb-2\">\n        <div className=\"flex items-center gap-2 flex-1 min-w-0\">\n          {/* 아이콘과 카테고리 */}\n          <div className={`inline-flex items-center px-2 py-1 rounded text-xs font-medium border ${categoryInfo.color}`}>\n            <span>{categoryInfo.name}</span>\n          </div>\n        </div>\n\n        {/* 액션 버튼들 */}\n        <div className=\"flex items-center gap-1 opacity-0 group-hover:opacity-100 transition-opacity duration-200\">\n          {/* 활성화/비활성화 토글 */}\n          <button\n            onClick={handleToggleClick}\n            className={`p-1.5 rounded transition-colors ${\n              card.enabled\n                ? \"text-green-600 hover:bg-green-50\"\n                : \"text-gray-400 hover:bg-gray-100\"\n            }`}\n            title={card.enabled ? \"비활성화\" : \"활성화\"}\n          >\n            {card.enabled ? (\n              <EyeIcon className=\"h-3 w-3\" />\n            ) : (\n              <EyeSlashIcon className=\"h-3 w-3\" />\n            )}\n          </button>\n\n          {/* 편집 버튼 */}\n          <button\n            onClick={handleEdit}\n            className=\"p-1.5 text-gray-600 hover:bg-blue-50 hover:text-blue-600 rounded transition-colors\"\n            title=\"편집\"\n          >\n            <PencilIcon className=\"h-3 w-3\" />\n          </button>\n\n          {/* 삭제 버튼 - hideDeleteButton이 true면 숨김 */}\n          {!hideDeleteButton && (\n            <button\n              onClick={() => onDelete(card.promptId || card.id)}\n              className=\"p-1.5 text-gray-400 hover:bg-red-50 hover:text-red-600 rounded transition-colors\"\n              title=\"삭제\"\n            >\n              <TrashIcon className=\"h-3 w-3\" />\n            </button>\n          )}\n        </div>\n      </div>\n\n      {/* 프롬프트 설명 */}\n      <div className=\"text-xs text-gray-500 leading-relaxed mb-2\">\n        {card.description || categoryInfo.description || \"프롬프트 설명이 없습니다.\"}\n      </div>\n\n      {/* 특수 기능 표시 */}\n      {(card.isCoT || card.isReAct) && (\n        <div className=\"flex gap-1 mb-2\">\n          {card.isCoT && (\n            <span className=\"inline-flex items-center px-2 py-0.5 bg-purple-50 text-purple-700 rounded text-xs font-medium\">\n              <span>CoT</span>\n            </span>\n          )}\n          {card.isReAct && (\n            <span className=\"inline-flex items-center px-2 py-0.5 bg-orange-50 text-orange-700 rounded text-xs font-medium\">\n              <span>ReAct</span>\n            </span>\n          )}\n        </div>\n      )}\n\n\n      {/* 실행 완료 표시 */}\n      {isExecuted && (\n        <div className=\"mt-2 flex items-center text-green-600 text-xs bg-green-50 p-2 rounded border border-green-200\">\n          <SparklesIcon className=\"h-3 w-3 mr-1\" />\n          <span>실행 완료</span>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default PromptCard;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}