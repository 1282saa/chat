{"ast":null,"code":"import React,{useState,useEffect,useRef}from'react';import{PaperAirplaneIcon,ClipboardDocumentIcon,CheckCircleIcon,UserIcon,CpuChipIcon}from'@heroicons/react/24/outline';import{toast}from'react-hot-toast';import{generateAPI}from'../services/api';import{jsx as _jsx,jsxs as _jsxs,Fragment as _Fragment}from\"react/jsx-runtime\";const ChatInterface=_ref=>{let{projectId,projectName}=_ref;const[messages,setMessages]=useState([]);const[inputMessage,setInputMessage]=useState('');const[isLoading,setIsLoading]=useState(false);const[copiedMessage,setCopiedMessage]=useState(null);const messagesEndRef=useRef(null);const inputRef=useRef(null);// 대화 세션 초기화\nuseEffect(()=>{const welcomeMessage={id:Date.now(),type:'ai',content:`안녕하세요! 저는 ${projectName}의 AI 제목 작가입니다. 🎯\\n\\n기사 내용을 입력해주시면 다양한 스타일의 제목을 제안해드릴게요. 제목을 수정하거나 다른 스타일로 바꾸고 싶으시면 언제든 말씀해주세요!`,timestamp:new Date()};setMessages([welcomeMessage]);},[projectName]);// 메시지 추가 시 스크롤 하단으로\nuseEffect(()=>{scrollToBottom();},[messages]);const scrollToBottom=()=>{var _messagesEndRef$curre;(_messagesEndRef$curre=messagesEndRef.current)===null||_messagesEndRef$curre===void 0?void 0:_messagesEndRef$curre.scrollIntoView({behavior:\"smooth\"});};// 메시지 전송\nconst handleSendMessage=async()=>{if(!inputMessage.trim()||isLoading)return;const userMessage={id:Date.now(),type:'user',content:inputMessage,timestamp:new Date()};setMessages(prev=>[...prev,userMessage]);const currentInput=inputMessage;setInputMessage('');setIsLoading(true);try{// 대화 컨텍스트 생성 (최근 5개 메시지)\nconst recentMessages=messages.slice(-5);const conversationContext=recentMessages.map(msg=>`${msg.type==='user'?'Human':'Assistant'}: ${msg.content}`).join('\\n\\n');const contextualInput=recentMessages.length>0?`[이전 대화 컨텍스트]\\n${conversationContext}\\n\\n[새로운 요청]\\nHuman: ${currentInput}`:currentInput;const result=await generateAPI.generateTitle(projectId,contextualInput,null// onProgress callback\n);const aiMessage={id:Date.now()+1,type:'ai',content:result.result,timestamp:new Date(),debug:result.debug};setMessages(prev=>[...prev,aiMessage]);}catch(error){console.error('메시지 전송 실패:',error);const errorMessage={id:Date.now()+1,type:'ai',content:'죄송합니다. 메시지 처리 중 오류가 발생했습니다. 다시 시도해주세요.',timestamp:new Date(),isError:true};setMessages(prev=>[...prev,errorMessage]);toast.error('메시지 전송에 실패했습니다.');}finally{setIsLoading(false);}};// Enter 키로 전송\nconst handleKeyPress=e=>{if(e.key==='Enter'&&!e.shiftKey){e.preventDefault();handleSendMessage();}};// 텍스트 복사\nconst copyToClipboard=(text,messageId)=>{// 제목만 추출 (• 로 시작하는 라인들)\nconst titles=text.match(/• ([^\\n]+)/g);const textToCopy=titles?titles.map(t=>t.replace('• ','')).join('\\n'):text;navigator.clipboard.writeText(textToCopy).then(()=>{setCopiedMessage(messageId);toast.success('클립보드에 복사되었습니다!');setTimeout(()=>setCopiedMessage(null),2000);}).catch(()=>{toast.error('복사에 실패했습니다.');});};return/*#__PURE__*/_jsxs(\"div\",{className:\"flex flex-col h-full bg-white rounded-lg shadow-sm border border-gray-200\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center justify-between p-4 border-b border-gray-200 bg-gray-50 rounded-t-lg\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center\",children:[/*#__PURE__*/_jsx(CpuChipIcon,{className:\"h-6 w-6 text-blue-600 mr-2\"}),/*#__PURE__*/_jsx(\"h3\",{className:\"text-lg font-semibold text-gray-900\",children:\"AI \\uC81C\\uBAA9 \\uC791\\uAC00\"}),/*#__PURE__*/_jsxs(\"span\",{className:\"ml-2 text-sm text-gray-500\",children:[\"\\u2022 \",projectName]})]}),/*#__PURE__*/_jsx(\"button\",{onClick:()=>setMessages(messages.slice(0,1))// 첫 번째 환영 메시지만 남기기\n,className:\"text-sm text-gray-500 hover:text-gray-700 px-3 py-1 rounded-md hover:bg-gray-200 transition-colors\",children:\"\\uB300\\uD654 \\uCD08\\uAE30\\uD654\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"flex-1 overflow-y-auto p-4 space-y-4 min-h-0\",children:[messages.map(message=>/*#__PURE__*/_jsx(\"div\",{className:`flex ${message.type==='user'?'justify-end':'justify-start'}`,children:/*#__PURE__*/_jsxs(\"div\",{className:`flex max-w-[80%] ${message.type==='user'?'flex-row-reverse':'flex-row'}`,children:[/*#__PURE__*/_jsx(\"div\",{className:`flex-shrink-0 ${message.type==='user'?'ml-3':'mr-3'}`,children:/*#__PURE__*/_jsx(\"div\",{className:`w-8 h-8 rounded-full flex items-center justify-center ${message.type==='user'?'bg-blue-600 text-white':'bg-gray-200 text-gray-600'}`,children:message.type==='user'?/*#__PURE__*/_jsx(UserIcon,{className:\"w-5 h-5\"}):/*#__PURE__*/_jsx(CpuChipIcon,{className:\"w-5 h-5\"})})}),/*#__PURE__*/_jsxs(\"div\",{className:`rounded-lg px-4 py-3 ${message.type==='user'?'bg-blue-600 text-white':message.isError?'bg-red-50 text-red-900 border border-red-200':'bg-gray-100 text-gray-900'}`,children:[/*#__PURE__*/_jsx(\"div\",{className:\"whitespace-pre-wrap text-sm leading-relaxed\",children:message.content}),message.type==='ai'&&!message.isError&&/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center justify-between mt-3 pt-2 border-t border-gray-200\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"text-xs text-gray-500\",children:message.timestamp.toLocaleTimeString('ko-KR',{hour:'2-digit',minute:'2-digit'})}),/*#__PURE__*/_jsx(\"button\",{onClick:()=>copyToClipboard(message.content,message.id),className:\"flex items-center text-xs text-gray-500 hover:text-gray-700 px-2 py-1 rounded hover:bg-gray-200 transition-colors\",children:copiedMessage===message.id?/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(CheckCircleIcon,{className:\"w-3 h-3 mr-1 text-green-600\"}),\"\\uBCF5\\uC0AC\\uB428\"]}):/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(ClipboardDocumentIcon,{className:\"w-3 h-3 mr-1\"}),\"\\uBCF5\\uC0AC\"]})})]}),message.debug&&/*#__PURE__*/_jsxs(\"details\",{className:\"mt-2 text-xs\",children:[/*#__PURE__*/_jsx(\"summary\",{className:\"text-gray-500 cursor-pointer hover:text-gray-700\",children:\"\\uD83D\\uDD0D \\uB514\\uBC84\\uADF8 \\uC815\\uBCF4\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"mt-1 p-2 bg-white rounded border text-gray-600 space-y-1\",children:[/*#__PURE__*/_jsxs(\"div\",{children:[\"\\uD504\\uB86C\\uD504\\uD2B8 \\uC218: \",message.debug.promptCount||0,\"\\uAC1C\"]}),/*#__PURE__*/_jsxs(\"div\",{children:[\"\\uAE30\\uBCF8 \\uAC00\\uC774\\uB4DC\\uB77C\\uC778: \",message.debug.usedDefaultGuidelines?'사용':'미사용']}),message.debug.promptTitles&&/*#__PURE__*/_jsxs(\"div\",{children:[\"\\uC801\\uC6A9\\uB41C \\uD504\\uB86C\\uD504\\uD2B8: \",message.debug.promptTitles.join(', ')]})]})]})]})]})},message.id)),isLoading&&/*#__PURE__*/_jsxs(\"div\",{className:\"flex justify-start\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"flex mr-3\",children:/*#__PURE__*/_jsx(\"div\",{className:\"w-8 h-8 rounded-full bg-gray-200 flex items-center justify-center\",children:/*#__PURE__*/_jsx(CpuChipIcon,{className:\"w-5 h-5 text-gray-600\"})})}),/*#__PURE__*/_jsx(\"div\",{className:\"bg-gray-100 rounded-lg px-4 py-3\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center space-x-1\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"w-2 h-2 bg-gray-400 rounded-full animate-bounce\"}),/*#__PURE__*/_jsx(\"div\",{className:\"w-2 h-2 bg-gray-400 rounded-full animate-bounce\",style:{animationDelay:'0.1s'}}),/*#__PURE__*/_jsx(\"div\",{className:\"w-2 h-2 bg-gray-400 rounded-full animate-bounce\",style:{animationDelay:'0.2s'}})]})})]}),/*#__PURE__*/_jsx(\"div\",{ref:messagesEndRef})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"border-t border-gray-200 p-4\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-end space-x-3\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"flex-1\",children:/*#__PURE__*/_jsx(\"textarea\",{ref:inputRef,value:inputMessage,onChange:e=>setInputMessage(e.target.value),onKeyPress:handleKeyPress,placeholder:\"\\uAE30\\uC0AC \\uB0B4\\uC6A9\\uC744 \\uC785\\uB825\\uD558\\uAC70\\uB098 \\uC81C\\uBAA9 \\uC218\\uC815 \\uC694\\uCCAD\\uC744 \\uD574\\uC8FC\\uC138\\uC694...\",className:\"w-full p-3 border border-gray-300 rounded-lg resize-none focus:ring-2 focus:ring-blue-500 focus:border-transparent\",rows:\"3\",disabled:isLoading})}),/*#__PURE__*/_jsx(\"button\",{onClick:handleSendMessage,disabled:!inputMessage.trim()||isLoading,className:\"bg-blue-600 text-white p-3 rounded-lg hover:bg-blue-700 disabled:bg-gray-300 disabled:cursor-not-allowed transition-colors\",children:/*#__PURE__*/_jsx(PaperAirplaneIcon,{className:\"w-5 h-5\"})})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center justify-between mt-2 text-xs text-gray-500\",children:[/*#__PURE__*/_jsx(\"span\",{children:\"Shift + Enter\\uB85C \\uC904\\uBC14\\uAFC8, Enter\\uB85C \\uC804\\uC1A1\"}),/*#__PURE__*/_jsxs(\"span\",{children:[inputMessage.length,\"/2000\"]})]})]})]});};export default ChatInterface;","map":{"version":3,"names":["React","useState","useEffect","useRef","PaperAirplaneIcon","ClipboardDocumentIcon","CheckCircleIcon","UserIcon","CpuChipIcon","toast","generateAPI","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","ChatInterface","_ref","projectId","projectName","messages","setMessages","inputMessage","setInputMessage","isLoading","setIsLoading","copiedMessage","setCopiedMessage","messagesEndRef","inputRef","welcomeMessage","id","Date","now","type","content","timestamp","scrollToBottom","_messagesEndRef$curre","current","scrollIntoView","behavior","handleSendMessage","trim","userMessage","prev","currentInput","recentMessages","slice","conversationContext","map","msg","join","contextualInput","length","result","generateTitle","aiMessage","debug","error","console","errorMessage","isError","handleKeyPress","e","key","shiftKey","preventDefault","copyToClipboard","text","messageId","titles","match","textToCopy","t","replace","navigator","clipboard","writeText","then","success","setTimeout","catch","className","children","onClick","message","toLocaleTimeString","hour","minute","promptCount","usedDefaultGuidelines","promptTitles","style","animationDelay","ref","value","onChange","target","onKeyPress","placeholder","rows","disabled"],"sources":["/Users/yeong-gwang/Documents/work/서울경제신문/ai_제목달기/frontend/src/components/ChatInterface.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\nimport { \n  PaperAirplaneIcon, \n  ClipboardDocumentIcon,\n  CheckCircleIcon,\n  UserIcon,\n  CpuChipIcon \n} from '@heroicons/react/24/outline';\nimport { toast } from 'react-hot-toast';\nimport { generateAPI } from '../services/api';\n\nconst ChatInterface = ({ projectId, projectName }) => {\n  const [messages, setMessages] = useState([]);\n  const [inputMessage, setInputMessage] = useState('');\n  const [isLoading, setIsLoading] = useState(false);\n  const [copiedMessage, setCopiedMessage] = useState(null);\n  const messagesEndRef = useRef(null);\n  const inputRef = useRef(null);\n\n  // 대화 세션 초기화\n  useEffect(() => {\n    const welcomeMessage = {\n      id: Date.now(),\n      type: 'ai',\n      content: `안녕하세요! 저는 ${projectName}의 AI 제목 작가입니다. 🎯\\n\\n기사 내용을 입력해주시면 다양한 스타일의 제목을 제안해드릴게요. 제목을 수정하거나 다른 스타일로 바꾸고 싶으시면 언제든 말씀해주세요!`,\n      timestamp: new Date()\n    };\n    setMessages([welcomeMessage]);\n  }, [projectName]);\n\n  // 메시지 추가 시 스크롤 하단으로\n  useEffect(() => {\n    scrollToBottom();\n  }, [messages]);\n\n  const scrollToBottom = () => {\n    messagesEndRef.current?.scrollIntoView({ behavior: \"smooth\" });\n  };\n\n  // 메시지 전송\n  const handleSendMessage = async () => {\n    if (!inputMessage.trim() || isLoading) return;\n\n    const userMessage = {\n      id: Date.now(),\n      type: 'user',\n      content: inputMessage,\n      timestamp: new Date()\n    };\n\n    setMessages(prev => [...prev, userMessage]);\n    const currentInput = inputMessage;\n    setInputMessage('');\n    setIsLoading(true);\n\n    try {\n      // 대화 컨텍스트 생성 (최근 5개 메시지)\n      const recentMessages = messages.slice(-5);\n      const conversationContext = recentMessages\n        .map(msg => `${msg.type === 'user' ? 'Human' : 'Assistant'}: ${msg.content}`)\n        .join('\\n\\n');\n\n      const contextualInput = recentMessages.length > 0 \n        ? `[이전 대화 컨텍스트]\\n${conversationContext}\\n\\n[새로운 요청]\\nHuman: ${currentInput}`\n        : currentInput;\n\n      const result = await generateAPI.generateTitle(\n        projectId,\n        contextualInput,\n        null // onProgress callback\n      );\n\n      const aiMessage = {\n        id: Date.now() + 1,\n        type: 'ai',\n        content: result.result,\n        timestamp: new Date(),\n        debug: result.debug\n      };\n\n      setMessages(prev => [...prev, aiMessage]);\n\n    } catch (error) {\n      console.error('메시지 전송 실패:', error);\n      const errorMessage = {\n        id: Date.now() + 1,\n        type: 'ai',\n        content: '죄송합니다. 메시지 처리 중 오류가 발생했습니다. 다시 시도해주세요.',\n        timestamp: new Date(),\n        isError: true\n      };\n      setMessages(prev => [...prev, errorMessage]);\n      toast.error('메시지 전송에 실패했습니다.');\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  // Enter 키로 전송\n  const handleKeyPress = (e) => {\n    if (e.key === 'Enter' && !e.shiftKey) {\n      e.preventDefault();\n      handleSendMessage();\n    }\n  };\n\n  // 텍스트 복사\n  const copyToClipboard = (text, messageId) => {\n    // 제목만 추출 (• 로 시작하는 라인들)\n    const titles = text.match(/• ([^\\n]+)/g);\n    const textToCopy = titles ? titles.map(t => t.replace('• ', '')).join('\\n') : text;\n    \n    navigator.clipboard.writeText(textToCopy)\n      .then(() => {\n        setCopiedMessage(messageId);\n        toast.success('클립보드에 복사되었습니다!');\n        setTimeout(() => setCopiedMessage(null), 2000);\n      })\n      .catch(() => {\n        toast.error('복사에 실패했습니다.');\n      });\n  };\n\n  return (\n    <div className=\"flex flex-col h-full bg-white rounded-lg shadow-sm border border-gray-200\">\n      {/* 채팅 헤더 */}\n      <div className=\"flex items-center justify-between p-4 border-b border-gray-200 bg-gray-50 rounded-t-lg\">\n        <div className=\"flex items-center\">\n          <CpuChipIcon className=\"h-6 w-6 text-blue-600 mr-2\" />\n          <h3 className=\"text-lg font-semibold text-gray-900\">AI 제목 작가</h3>\n          <span className=\"ml-2 text-sm text-gray-500\">• {projectName}</span>\n        </div>\n        <button\n          onClick={() => setMessages(messages.slice(0, 1))} // 첫 번째 환영 메시지만 남기기\n          className=\"text-sm text-gray-500 hover:text-gray-700 px-3 py-1 rounded-md hover:bg-gray-200 transition-colors\"\n        >\n          대화 초기화\n        </button>\n      </div>\n\n      {/* 메시지 영역 */}\n      <div className=\"flex-1 overflow-y-auto p-4 space-y-4 min-h-0\">\n        {messages.map((message) => (\n          <div\n            key={message.id}\n            className={`flex ${message.type === 'user' ? 'justify-end' : 'justify-start'}`}\n          >\n            <div className={`flex max-w-[80%] ${message.type === 'user' ? 'flex-row-reverse' : 'flex-row'}`}>\n              {/* 아바타 */}\n              <div className={`flex-shrink-0 ${message.type === 'user' ? 'ml-3' : 'mr-3'}`}>\n                <div className={`w-8 h-8 rounded-full flex items-center justify-center ${\n                  message.type === 'user' \n                    ? 'bg-blue-600 text-white' \n                    : 'bg-gray-200 text-gray-600'\n                }`}>\n                  {message.type === 'user' ? (\n                    <UserIcon className=\"w-5 h-5\" />\n                  ) : (\n                    <CpuChipIcon className=\"w-5 h-5\" />\n                  )}\n                </div>\n              </div>\n\n              {/* 메시지 버블 */}\n              <div className={`rounded-lg px-4 py-3 ${\n                message.type === 'user'\n                  ? 'bg-blue-600 text-white'\n                  : message.isError\n                  ? 'bg-red-50 text-red-900 border border-red-200'\n                  : 'bg-gray-100 text-gray-900'\n              }`}>\n                <div className=\"whitespace-pre-wrap text-sm leading-relaxed\">\n                  {message.content}\n                </div>\n                \n                {/* AI 메시지에 복사 버튼 추가 */}\n                {message.type === 'ai' && !message.isError && (\n                  <div className=\"flex items-center justify-between mt-3 pt-2 border-t border-gray-200\">\n                    <span className=\"text-xs text-gray-500\">\n                      {message.timestamp.toLocaleTimeString('ko-KR', {\n                        hour: '2-digit',\n                        minute: '2-digit'\n                      })}\n                    </span>\n                    <button\n                      onClick={() => copyToClipboard(message.content, message.id)}\n                      className=\"flex items-center text-xs text-gray-500 hover:text-gray-700 px-2 py-1 rounded hover:bg-gray-200 transition-colors\"\n                    >\n                      {copiedMessage === message.id ? (\n                        <>\n                          <CheckCircleIcon className=\"w-3 h-3 mr-1 text-green-600\" />\n                          복사됨\n                        </>\n                      ) : (\n                        <>\n                          <ClipboardDocumentIcon className=\"w-3 h-3 mr-1\" />\n                          복사\n                        </>\n                      )}\n                    </button>\n                  </div>\n                )}\n\n                {/* 디버그 정보 (개발 모드) */}\n                {message.debug && (\n                  <details className=\"mt-2 text-xs\">\n                    <summary className=\"text-gray-500 cursor-pointer hover:text-gray-700\">\n                      🔍 디버그 정보\n                    </summary>\n                    <div className=\"mt-1 p-2 bg-white rounded border text-gray-600 space-y-1\">\n                      <div>프롬프트 수: {message.debug.promptCount || 0}개</div>\n                      <div>기본 가이드라인: {message.debug.usedDefaultGuidelines ? '사용' : '미사용'}</div>\n                      {message.debug.promptTitles && (\n                        <div>적용된 프롬프트: {message.debug.promptTitles.join(', ')}</div>\n                      )}\n                    </div>\n                  </details>\n                )}\n              </div>\n            </div>\n          </div>\n        ))}\n\n        {/* 로딩 인디케이터 */}\n        {isLoading && (\n          <div className=\"flex justify-start\">\n            <div className=\"flex mr-3\">\n              <div className=\"w-8 h-8 rounded-full bg-gray-200 flex items-center justify-center\">\n                <CpuChipIcon className=\"w-5 h-5 text-gray-600\" />\n              </div>\n            </div>\n            <div className=\"bg-gray-100 rounded-lg px-4 py-3\">\n              <div className=\"flex items-center space-x-1\">\n                <div className=\"w-2 h-2 bg-gray-400 rounded-full animate-bounce\"></div>\n                <div className=\"w-2 h-2 bg-gray-400 rounded-full animate-bounce\" style={{animationDelay: '0.1s'}}></div>\n                <div className=\"w-2 h-2 bg-gray-400 rounded-full animate-bounce\" style={{animationDelay: '0.2s'}}></div>\n              </div>\n            </div>\n          </div>\n        )}\n\n        <div ref={messagesEndRef} />\n      </div>\n\n      {/* 입력 영역 */}\n      <div className=\"border-t border-gray-200 p-4\">\n        <div className=\"flex items-end space-x-3\">\n          <div className=\"flex-1\">\n            <textarea\n              ref={inputRef}\n              value={inputMessage}\n              onChange={(e) => setInputMessage(e.target.value)}\n              onKeyPress={handleKeyPress}\n              placeholder=\"기사 내용을 입력하거나 제목 수정 요청을 해주세요...\"\n              className=\"w-full p-3 border border-gray-300 rounded-lg resize-none focus:ring-2 focus:ring-blue-500 focus:border-transparent\"\n              rows=\"3\"\n              disabled={isLoading}\n            />\n          </div>\n          <button\n            onClick={handleSendMessage}\n            disabled={!inputMessage.trim() || isLoading}\n            className=\"bg-blue-600 text-white p-3 rounded-lg hover:bg-blue-700 disabled:bg-gray-300 disabled:cursor-not-allowed transition-colors\"\n          >\n            <PaperAirplaneIcon className=\"w-5 h-5\" />\n          </button>\n        </div>\n        \n        <div className=\"flex items-center justify-between mt-2 text-xs text-gray-500\">\n          <span>Shift + Enter로 줄바꿈, Enter로 전송</span>\n          <span>{inputMessage.length}/2000</span>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default ChatInterface;"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,QAAQ,CAAEC,SAAS,CAAEC,MAAM,KAAQ,OAAO,CAC1D,OACEC,iBAAiB,CACjBC,qBAAqB,CACrBC,eAAe,CACfC,QAAQ,CACRC,WAAW,KACN,6BAA6B,CACpC,OAASC,KAAK,KAAQ,iBAAiB,CACvC,OAASC,WAAW,KAAQ,iBAAiB,CAAC,OAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,CAAAC,QAAA,IAAAC,SAAA,yBAE9C,KAAM,CAAAC,aAAa,CAAGC,IAAA,EAAgC,IAA/B,CAAEC,SAAS,CAAEC,WAAY,CAAC,CAAAF,IAAA,CAC/C,KAAM,CAACG,QAAQ,CAAEC,WAAW,CAAC,CAAGrB,QAAQ,CAAC,EAAE,CAAC,CAC5C,KAAM,CAACsB,YAAY,CAAEC,eAAe,CAAC,CAAGvB,QAAQ,CAAC,EAAE,CAAC,CACpD,KAAM,CAACwB,SAAS,CAAEC,YAAY,CAAC,CAAGzB,QAAQ,CAAC,KAAK,CAAC,CACjD,KAAM,CAAC0B,aAAa,CAAEC,gBAAgB,CAAC,CAAG3B,QAAQ,CAAC,IAAI,CAAC,CACxD,KAAM,CAAA4B,cAAc,CAAG1B,MAAM,CAAC,IAAI,CAAC,CACnC,KAAM,CAAA2B,QAAQ,CAAG3B,MAAM,CAAC,IAAI,CAAC,CAE7B;AACAD,SAAS,CAAC,IAAM,CACd,KAAM,CAAA6B,cAAc,CAAG,CACrBC,EAAE,CAAEC,IAAI,CAACC,GAAG,CAAC,CAAC,CACdC,IAAI,CAAE,IAAI,CACVC,OAAO,CAAE,aAAahB,WAAW,iGAAiG,CAClIiB,SAAS,CAAE,GAAI,CAAAJ,IAAI,CAAC,CACtB,CAAC,CACDX,WAAW,CAAC,CAACS,cAAc,CAAC,CAAC,CAC/B,CAAC,CAAE,CAACX,WAAW,CAAC,CAAC,CAEjB;AACAlB,SAAS,CAAC,IAAM,CACdoC,cAAc,CAAC,CAAC,CAClB,CAAC,CAAE,CAACjB,QAAQ,CAAC,CAAC,CAEd,KAAM,CAAAiB,cAAc,CAAGA,CAAA,GAAM,KAAAC,qBAAA,CAC3B,CAAAA,qBAAA,CAAAV,cAAc,CAACW,OAAO,UAAAD,qBAAA,iBAAtBA,qBAAA,CAAwBE,cAAc,CAAC,CAAEC,QAAQ,CAAE,QAAS,CAAC,CAAC,CAChE,CAAC,CAED;AACA,KAAM,CAAAC,iBAAiB,CAAG,KAAAA,CAAA,GAAY,CACpC,GAAI,CAACpB,YAAY,CAACqB,IAAI,CAAC,CAAC,EAAInB,SAAS,CAAE,OAEvC,KAAM,CAAAoB,WAAW,CAAG,CAClBb,EAAE,CAAEC,IAAI,CAACC,GAAG,CAAC,CAAC,CACdC,IAAI,CAAE,MAAM,CACZC,OAAO,CAAEb,YAAY,CACrBc,SAAS,CAAE,GAAI,CAAAJ,IAAI,CAAC,CACtB,CAAC,CAEDX,WAAW,CAACwB,IAAI,EAAI,CAAC,GAAGA,IAAI,CAAED,WAAW,CAAC,CAAC,CAC3C,KAAM,CAAAE,YAAY,CAAGxB,YAAY,CACjCC,eAAe,CAAC,EAAE,CAAC,CACnBE,YAAY,CAAC,IAAI,CAAC,CAElB,GAAI,CACF;AACA,KAAM,CAAAsB,cAAc,CAAG3B,QAAQ,CAAC4B,KAAK,CAAC,CAAC,CAAC,CAAC,CACzC,KAAM,CAAAC,mBAAmB,CAAGF,cAAc,CACvCG,GAAG,CAACC,GAAG,EAAI,GAAGA,GAAG,CAACjB,IAAI,GAAK,MAAM,CAAG,OAAO,CAAG,WAAW,KAAKiB,GAAG,CAAChB,OAAO,EAAE,CAAC,CAC5EiB,IAAI,CAAC,MAAM,CAAC,CAEf,KAAM,CAAAC,eAAe,CAAGN,cAAc,CAACO,MAAM,CAAG,CAAC,CAC7C,iBAAiBL,mBAAmB,wBAAwBH,YAAY,EAAE,CAC1EA,YAAY,CAEhB,KAAM,CAAAS,MAAM,CAAG,KAAM,CAAA9C,WAAW,CAAC+C,aAAa,CAC5CtC,SAAS,CACTmC,eAAe,CACf,IAAK;AACP,CAAC,CAED,KAAM,CAAAI,SAAS,CAAG,CAChB1B,EAAE,CAAEC,IAAI,CAACC,GAAG,CAAC,CAAC,CAAG,CAAC,CAClBC,IAAI,CAAE,IAAI,CACVC,OAAO,CAAEoB,MAAM,CAACA,MAAM,CACtBnB,SAAS,CAAE,GAAI,CAAAJ,IAAI,CAAC,CAAC,CACrB0B,KAAK,CAAEH,MAAM,CAACG,KAChB,CAAC,CAEDrC,WAAW,CAACwB,IAAI,EAAI,CAAC,GAAGA,IAAI,CAAEY,SAAS,CAAC,CAAC,CAE3C,CAAE,MAAOE,KAAK,CAAE,CACdC,OAAO,CAACD,KAAK,CAAC,YAAY,CAAEA,KAAK,CAAC,CAClC,KAAM,CAAAE,YAAY,CAAG,CACnB9B,EAAE,CAAEC,IAAI,CAACC,GAAG,CAAC,CAAC,CAAG,CAAC,CAClBC,IAAI,CAAE,IAAI,CACVC,OAAO,CAAE,wCAAwC,CACjDC,SAAS,CAAE,GAAI,CAAAJ,IAAI,CAAC,CAAC,CACrB8B,OAAO,CAAE,IACX,CAAC,CACDzC,WAAW,CAACwB,IAAI,EAAI,CAAC,GAAGA,IAAI,CAAEgB,YAAY,CAAC,CAAC,CAC5CrD,KAAK,CAACmD,KAAK,CAAC,iBAAiB,CAAC,CAChC,CAAC,OAAS,CACRlC,YAAY,CAAC,KAAK,CAAC,CACrB,CACF,CAAC,CAED;AACA,KAAM,CAAAsC,cAAc,CAAIC,CAAC,EAAK,CAC5B,GAAIA,CAAC,CAACC,GAAG,GAAK,OAAO,EAAI,CAACD,CAAC,CAACE,QAAQ,CAAE,CACpCF,CAAC,CAACG,cAAc,CAAC,CAAC,CAClBzB,iBAAiB,CAAC,CAAC,CACrB,CACF,CAAC,CAED;AACA,KAAM,CAAA0B,eAAe,CAAGA,CAACC,IAAI,CAAEC,SAAS,GAAK,CAC3C;AACA,KAAM,CAAAC,MAAM,CAAGF,IAAI,CAACG,KAAK,CAAC,aAAa,CAAC,CACxC,KAAM,CAAAC,UAAU,CAAGF,MAAM,CAAGA,MAAM,CAACrB,GAAG,CAACwB,CAAC,EAAIA,CAAC,CAACC,OAAO,CAAC,IAAI,CAAE,EAAE,CAAC,CAAC,CAACvB,IAAI,CAAC,IAAI,CAAC,CAAGiB,IAAI,CAElFO,SAAS,CAACC,SAAS,CAACC,SAAS,CAACL,UAAU,CAAC,CACtCM,IAAI,CAAC,IAAM,CACVpD,gBAAgB,CAAC2C,SAAS,CAAC,CAC3B9D,KAAK,CAACwE,OAAO,CAAC,gBAAgB,CAAC,CAC/BC,UAAU,CAAC,IAAMtD,gBAAgB,CAAC,IAAI,CAAC,CAAE,IAAI,CAAC,CAChD,CAAC,CAAC,CACDuD,KAAK,CAAC,IAAM,CACX1E,KAAK,CAACmD,KAAK,CAAC,aAAa,CAAC,CAC5B,CAAC,CAAC,CACN,CAAC,CAED,mBACE9C,KAAA,QAAKsE,SAAS,CAAC,2EAA2E,CAAAC,QAAA,eAExFvE,KAAA,QAAKsE,SAAS,CAAC,wFAAwF,CAAAC,QAAA,eACrGvE,KAAA,QAAKsE,SAAS,CAAC,mBAAmB,CAAAC,QAAA,eAChCzE,IAAA,CAACJ,WAAW,EAAC4E,SAAS,CAAC,4BAA4B,CAAE,CAAC,cACtDxE,IAAA,OAAIwE,SAAS,CAAC,qCAAqC,CAAAC,QAAA,CAAC,8BAAQ,CAAI,CAAC,cACjEvE,KAAA,SAAMsE,SAAS,CAAC,4BAA4B,CAAAC,QAAA,EAAC,SAAE,CAACjE,WAAW,EAAO,CAAC,EAChE,CAAC,cACNR,IAAA,WACE0E,OAAO,CAAEA,CAAA,GAAMhE,WAAW,CAACD,QAAQ,CAAC4B,KAAK,CAAC,CAAC,CAAE,CAAC,CAAC,CAAG;AAAA,CAClDmC,SAAS,CAAC,oGAAoG,CAAAC,QAAA,CAC/G,iCAED,CAAQ,CAAC,EACN,CAAC,cAGNvE,KAAA,QAAKsE,SAAS,CAAC,8CAA8C,CAAAC,QAAA,EAC1DhE,QAAQ,CAAC8B,GAAG,CAAEoC,OAAO,eACpB3E,IAAA,QAEEwE,SAAS,CAAE,QAAQG,OAAO,CAACpD,IAAI,GAAK,MAAM,CAAG,aAAa,CAAG,eAAe,EAAG,CAAAkD,QAAA,cAE/EvE,KAAA,QAAKsE,SAAS,CAAE,oBAAoBG,OAAO,CAACpD,IAAI,GAAK,MAAM,CAAG,kBAAkB,CAAG,UAAU,EAAG,CAAAkD,QAAA,eAE9FzE,IAAA,QAAKwE,SAAS,CAAE,iBAAiBG,OAAO,CAACpD,IAAI,GAAK,MAAM,CAAG,MAAM,CAAG,MAAM,EAAG,CAAAkD,QAAA,cAC3EzE,IAAA,QAAKwE,SAAS,CAAE,yDACdG,OAAO,CAACpD,IAAI,GAAK,MAAM,CACnB,wBAAwB,CACxB,2BAA2B,EAC9B,CAAAkD,QAAA,CACAE,OAAO,CAACpD,IAAI,GAAK,MAAM,cACtBvB,IAAA,CAACL,QAAQ,EAAC6E,SAAS,CAAC,SAAS,CAAE,CAAC,cAEhCxE,IAAA,CAACJ,WAAW,EAAC4E,SAAS,CAAC,SAAS,CAAE,CACnC,CACE,CAAC,CACH,CAAC,cAGNtE,KAAA,QAAKsE,SAAS,CAAE,wBACdG,OAAO,CAACpD,IAAI,GAAK,MAAM,CACnB,wBAAwB,CACxBoD,OAAO,CAACxB,OAAO,CACf,8CAA8C,CAC9C,2BAA2B,EAC9B,CAAAsB,QAAA,eACDzE,IAAA,QAAKwE,SAAS,CAAC,6CAA6C,CAAAC,QAAA,CACzDE,OAAO,CAACnD,OAAO,CACb,CAAC,CAGLmD,OAAO,CAACpD,IAAI,GAAK,IAAI,EAAI,CAACoD,OAAO,CAACxB,OAAO,eACxCjD,KAAA,QAAKsE,SAAS,CAAC,sEAAsE,CAAAC,QAAA,eACnFzE,IAAA,SAAMwE,SAAS,CAAC,uBAAuB,CAAAC,QAAA,CACpCE,OAAO,CAAClD,SAAS,CAACmD,kBAAkB,CAAC,OAAO,CAAE,CAC7CC,IAAI,CAAE,SAAS,CACfC,MAAM,CAAE,SACV,CAAC,CAAC,CACE,CAAC,cACP9E,IAAA,WACE0E,OAAO,CAAEA,CAAA,GAAMjB,eAAe,CAACkB,OAAO,CAACnD,OAAO,CAAEmD,OAAO,CAACvD,EAAE,CAAE,CAC5DoD,SAAS,CAAC,mHAAmH,CAAAC,QAAA,CAE5H1D,aAAa,GAAK4D,OAAO,CAACvD,EAAE,cAC3BlB,KAAA,CAAAE,SAAA,EAAAqE,QAAA,eACEzE,IAAA,CAACN,eAAe,EAAC8E,SAAS,CAAC,6BAA6B,CAAE,CAAC,qBAE7D,EAAE,CAAC,cAEHtE,KAAA,CAAAE,SAAA,EAAAqE,QAAA,eACEzE,IAAA,CAACP,qBAAqB,EAAC+E,SAAS,CAAC,cAAc,CAAE,CAAC,eAEpD,EAAE,CACH,CACK,CAAC,EACN,CACN,CAGAG,OAAO,CAAC5B,KAAK,eACZ7C,KAAA,YAASsE,SAAS,CAAC,cAAc,CAAAC,QAAA,eAC/BzE,IAAA,YAASwE,SAAS,CAAC,kDAAkD,CAAAC,QAAA,CAAC,8CAEtE,CAAS,CAAC,cACVvE,KAAA,QAAKsE,SAAS,CAAC,0DAA0D,CAAAC,QAAA,eACvEvE,KAAA,QAAAuE,QAAA,EAAK,mCAAQ,CAACE,OAAO,CAAC5B,KAAK,CAACgC,WAAW,EAAI,CAAC,CAAC,QAAC,EAAK,CAAC,cACpD7E,KAAA,QAAAuE,QAAA,EAAK,+CAAU,CAACE,OAAO,CAAC5B,KAAK,CAACiC,qBAAqB,CAAG,IAAI,CAAG,KAAK,EAAM,CAAC,CACxEL,OAAO,CAAC5B,KAAK,CAACkC,YAAY,eACzB/E,KAAA,QAAAuE,QAAA,EAAK,+CAAU,CAACE,OAAO,CAAC5B,KAAK,CAACkC,YAAY,CAACxC,IAAI,CAAC,IAAI,CAAC,EAAM,CAC5D,EACE,CAAC,EACC,CACV,EACE,CAAC,EACH,CAAC,EA3EDkC,OAAO,CAACvD,EA4EV,CACN,CAAC,CAGDP,SAAS,eACRX,KAAA,QAAKsE,SAAS,CAAC,oBAAoB,CAAAC,QAAA,eACjCzE,IAAA,QAAKwE,SAAS,CAAC,WAAW,CAAAC,QAAA,cACxBzE,IAAA,QAAKwE,SAAS,CAAC,mEAAmE,CAAAC,QAAA,cAChFzE,IAAA,CAACJ,WAAW,EAAC4E,SAAS,CAAC,uBAAuB,CAAE,CAAC,CAC9C,CAAC,CACH,CAAC,cACNxE,IAAA,QAAKwE,SAAS,CAAC,kCAAkC,CAAAC,QAAA,cAC/CvE,KAAA,QAAKsE,SAAS,CAAC,6BAA6B,CAAAC,QAAA,eAC1CzE,IAAA,QAAKwE,SAAS,CAAC,iDAAiD,CAAM,CAAC,cACvExE,IAAA,QAAKwE,SAAS,CAAC,iDAAiD,CAACU,KAAK,CAAE,CAACC,cAAc,CAAE,MAAM,CAAE,CAAM,CAAC,cACxGnF,IAAA,QAAKwE,SAAS,CAAC,iDAAiD,CAACU,KAAK,CAAE,CAACC,cAAc,CAAE,MAAM,CAAE,CAAM,CAAC,EACrG,CAAC,CACH,CAAC,EACH,CACN,cAEDnF,IAAA,QAAKoF,GAAG,CAAEnE,cAAe,CAAE,CAAC,EACzB,CAAC,cAGNf,KAAA,QAAKsE,SAAS,CAAC,8BAA8B,CAAAC,QAAA,eAC3CvE,KAAA,QAAKsE,SAAS,CAAC,0BAA0B,CAAAC,QAAA,eACvCzE,IAAA,QAAKwE,SAAS,CAAC,QAAQ,CAAAC,QAAA,cACrBzE,IAAA,aACEoF,GAAG,CAAElE,QAAS,CACdmE,KAAK,CAAE1E,YAAa,CACpB2E,QAAQ,CAAGjC,CAAC,EAAKzC,eAAe,CAACyC,CAAC,CAACkC,MAAM,CAACF,KAAK,CAAE,CACjDG,UAAU,CAAEpC,cAAe,CAC3BqC,WAAW,CAAC,yIAAgC,CAC5CjB,SAAS,CAAC,oHAAoH,CAC9HkB,IAAI,CAAC,GAAG,CACRC,QAAQ,CAAE9E,SAAU,CACrB,CAAC,CACC,CAAC,cACNb,IAAA,WACE0E,OAAO,CAAE3C,iBAAkB,CAC3B4D,QAAQ,CAAE,CAAChF,YAAY,CAACqB,IAAI,CAAC,CAAC,EAAInB,SAAU,CAC5C2D,SAAS,CAAC,4HAA4H,CAAAC,QAAA,cAEtIzE,IAAA,CAACR,iBAAiB,EAACgF,SAAS,CAAC,SAAS,CAAE,CAAC,CACnC,CAAC,EACN,CAAC,cAENtE,KAAA,QAAKsE,SAAS,CAAC,8DAA8D,CAAAC,QAAA,eAC3EzE,IAAA,SAAAyE,QAAA,CAAM,kEAA6B,CAAM,CAAC,cAC1CvE,KAAA,SAAAuE,QAAA,EAAO9D,YAAY,CAACgC,MAAM,CAAC,OAAK,EAAM,CAAC,EACpC,CAAC,EACH,CAAC,EACH,CAAC,CAEV,CAAC,CAED,cAAe,CAAAtC,aAAa","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}