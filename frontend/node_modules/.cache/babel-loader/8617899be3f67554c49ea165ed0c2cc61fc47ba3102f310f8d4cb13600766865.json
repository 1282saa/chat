{"ast":null,"code":"var _jsxFileName = \"/Users/yeong-gwang/Documents/work/\\u1109\\u1165\\u110B\\u116E\\u11AF\\u1100\\u1167\\u11BC\\u110C\\u1166\\u1109\\u1175\\u11AB\\u1106\\u116E\\u11AB/ai_\\u110C\\u1166\\u1106\\u1169\\u11A8\\u1103\\u1161\\u11AF\\u1100\\u1175/frontend/src/components/PromptCardManager.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useCallback } from \"react\";\nimport { toast } from \"react-hot-toast\";\nimport { PlusIcon, Bars3Icon, ChatBubbleLeftRightIcon, TrashIcon } from \"@heroicons/react/24/outline\";\nimport { promptCardAPI, handleAPIError } from \"../services/api\";\nimport ChatInterface from \"./ChatInterface\";\nimport PromptCard from \"./prompts/PromptCard\";\nimport PromptEditForm from \"./prompts/PromptEditForm\";\nimport { SidebarSkeleton } from \"./SkeletonLoader\";\n\n// AI 워크플로우 기반 프롬프트 템플릿\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst FIXED_PROMPT_CATEGORIES = [{\n  id: \"instruction\",\n  name: \"역할 및 목표\",\n  order: 1,\n  color: \"bg-slate-100/80 text-slate-700 border-slate-200/80\",\n  icon: \"\",\n  description: \"AI의 역할, 정체성, 핵심 목표를 명확히 정의합니다\",\n  defaultContent: \"당신은 전문적인 기사 제목 생성 AI입니다.\\n목표: 독자의 관심을 끌고 정확한 정보를 전달하는 제목 생성\",\n  placeholder: \"AI의 역할과 주요 목표를 구체적으로 작성하세요...\"\n}, {\n  id: \"knowledge\",\n  name: \"지식 베이스\",\n  order: 2,\n  color: \"bg-slate-100/80 text-slate-700 border-slate-200/80\",\n  icon: \"\",\n  description: \"작업 수행에 필요한 핵심 지식과 원칙을 제공합니다\",\n  defaultContent: \"제목 작성 원칙:\\n- 간결하고 명확한 표현\\n- 핵심 키워드 포함\\n- 독자의 관심 유발\",\n  placeholder: \"작업에 필요한 핵심 지식과 원칙을 작성하세요...\"\n}, {\n  id: \"secondary\",\n  name: \"CoT (사고 과정)\",\n  order: 3,\n  color: \"bg-slate-100/80 text-slate-700 border-slate-200/80\",\n  icon: \"\",\n  description: \"단계별 추론 과정을 통해 사고의 투명성을 확보합니다\",\n  defaultContent: \"다음 단계로 사고하세요:\\n1. 기사의 핵심 내용 파악\\n2. 주요 키워드 추출\\n3. 독자 관점에서 흥미도 평가\\n4. 제목 후보 생성\\n5. 최적 제목 선택\",\n  placeholder: \"단계별 사고 과정을 구체적으로 작성하세요...\",\n  isCoT: true\n}, {\n  id: \"style_guide\",\n  name: \"스타일 가이드\",\n  order: 4,\n  color: \"bg-slate-100/80 text-slate-700 border-slate-200/80\",\n  icon: \"\",\n  description: \"일관된 스타일과 형식을 유지하기 위한 가이드라인\",\n  defaultContent: \"스타일 요구사항:\\n- 길이: 15-25자 권장\\n- 톤: 전문적이면서 친근\\n- 형식: 명사형 종결\",\n  placeholder: \"스타일과 형식 요구사항을 작성하세요...\"\n}, {\n  id: \"validation\",\n  name: \"ReAct (추론+행동)\",\n  order: 5,\n  color: \"bg-slate-100/80 text-slate-700 border-slate-200/80\",\n  icon: \"\",\n  description: \"추론과 행동을 결합하여 더 정확한 결과를 도출합니다\",\n  defaultContent: \"Thought: 이 기사의 핵심은 무엇인가?\\nAction: 키워드를 추출하고 중요도를 평가한다\\nObservation: 추출된 정보를 바탕으로 제목을 구성한다\\nThought: 생성된 제목이 요구사항을 충족하는가?\\nAction: 필요시 수정하고 최종 검증한다\",\n  placeholder: \"Thought/Action/Observation 패턴으로 작성하세요...\",\n  isReAct: true\n}, {\n  id: \"enhancement\",\n  name: \"품질 검증\",\n  order: 6,\n  color: \"bg-slate-100/80 text-slate-700 border-slate-200/80\",\n  icon: \"\",\n  description: \"최종 결과물의 품질을 검증하고 개선합니다\",\n  defaultContent: \"품질 검증 기준:\\n- 정확성: 기사 내용과 일치\\n- 매력도: 독자 관심 유발\\n- 적절성: 매체 성격에 부합\\n- 완성도: 문법과 표현의 정확성\",\n  placeholder: \"품질 검증 기준과 개선 방안을 작성하세요...\"\n}];\n\n// 프롬프트 편집 모달\nconst PromptEditModal = ({\n  isOpen,\n  onSubmit,\n  onCancel,\n  initialData\n}) => {\n  if (!isOpen) return null;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50 p-4\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bg-white rounded-lg w-full max-w-lg max-h-[80vh] overflow-y-auto\",\n      children: /*#__PURE__*/_jsxDEV(PromptEditForm, {\n        onSubmit: onSubmit,\n        onCancel: onCancel,\n        initialData: initialData,\n        isModal: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 81,\n    columnNumber: 5\n  }, this);\n};\n_c = PromptEditModal;\nconst PromptCardManager = ({\n  projectId,\n  onCardsChanged,\n  projectName\n}) => {\n  _s();\n  // 상태 관리\n  const [promptCards, setPromptCards] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [showForm, setShowForm] = useState(false);\n  const [editingCard, setEditingCard] = useState(null);\n  const [savedChats, setSavedChats] = useState([]);\n  const [showSavedChats, setShowSavedChats] = useState(false);\n\n  // 프롬프트 카드 로드 및 기본 템플릿 생성\n  const loadPromptCards = useCallback(async () => {\n    try {\n      setLoading(true);\n      const response = await promptCardAPI.getPromptCards(projectId);\n\n      // API 응답 구조 확인 및 안전한 처리\n      let cards = [];\n      if (Array.isArray(response)) {\n        cards = response;\n      } else if (response && Array.isArray(response.promptCards)) {\n        cards = response.promptCards;\n      } else if (response && Array.isArray(response.data)) {\n        cards = response.data;\n      } else {\n        console.warn(\"Unexpected API response structure:\", response);\n        cards = [];\n      }\n\n      // 고정된 템플릿 카드들과 기존 카드들을 매칭\n      const templateCards = FIXED_PROMPT_CATEGORIES.map(template => {\n        const existingCard = cards.find(card => card.category === template.id);\n        if (existingCard) {\n          // 기존 카드가 있으면 해당 카드 사용\n          return {\n            ...existingCard,\n            ...template,\n            // 템플릿 정보로 덮어쓰기 (name, order, color, description)\n            title: existingCard.title || `${template.name} 프롬프트`,\n            prompt_text: existingCard.prompt_text || template.defaultContent\n          };\n        } else {\n          // 기존 카드가 없으면 템플릿으로 기본 카드 생성\n          return {\n            id: `template-${template.id}`,\n            promptId: `template-${template.id}`,\n            title: `${template.name} 프롬프트`,\n            category: template.id,\n            prompt_text: template.defaultContent,\n            model_name: \"claude-3-5-sonnet-20241022\",\n            temperature: 0.7,\n            enabled: true,\n            step_order: template.order,\n            isTemplate: true,\n            // 템플릿 카드임을 표시\n            ...template\n          };\n        }\n      });\n\n      // 순서대로 정렬\n      templateCards.sort((a, b) => (a.order || 999) - (b.order || 999));\n      setPromptCards(templateCards);\n    } catch (error) {\n      const errorInfo = handleAPIError(error);\n      toast.error(`프롬프트 카드 로딩 실패: ${errorInfo.message}`);\n\n      // 오류 시에도 기본 템플릿 카드들 표시\n      const defaultCards = FIXED_PROMPT_CATEGORIES.map(template => ({\n        id: `template-${template.id}`,\n        promptId: `template-${template.id}`,\n        title: `${template.name} 프롬프트`,\n        category: template.id,\n        prompt_text: template.defaultContent,\n        model_name: \"claude-3-5-sonnet-20241022\",\n        temperature: 0.7,\n        enabled: true,\n        step_order: template.order,\n        isTemplate: true,\n        ...template\n      }));\n      setPromptCards(defaultCards);\n    } finally {\n      setLoading(false);\n    }\n  }, [projectId]);\n  useEffect(() => {\n    loadPromptCards();\n    // 저장된 대화 로드\n    const existingChats = JSON.parse(localStorage.getItem('savedChats') || '[]');\n    setSavedChats(existingChats.filter(chat => chat.projectId === projectId));\n  }, [loadPromptCards, projectId]);\n\n  // 카드 업데이트\n  const handleUpdateCard = async cardData => {\n    try {\n      if (editingCard && !editingCard.isTemplate) {\n        // 기존 카드 편집 - 기존 정보 유지\n        const updateData = {\n          ...cardData,\n          category: editingCard.category,\n          title: editingCard.title,\n          step_order: editingCard.step_order || editingCard.order\n        };\n        await promptCardAPI.updatePromptCard(projectId, editingCard.promptId || editingCard.id, updateData);\n        toast.success(\"프롬프트 카드가 수정되었습니다!\");\n      } else if (editingCard && editingCard.isTemplate) {\n        // 템플릿 카드를 실제 카드로 생성\n        const newCardData = {\n          ...cardData,\n          category: editingCard.category,\n          title: editingCard.title,\n          step_order: editingCard.order\n        };\n        await promptCardAPI.createPromptCard(projectId, newCardData);\n        toast.success(\"프롬프트 카드가 생성되었습니다!\");\n      } else {\n        // 새 카드 생성\n        const newCardData = {\n          ...cardData,\n          category: \"instruction\",\n          // 기본 카테고리\n          title: \"새 프롬프트 카드\",\n          step_order: 1\n        };\n        await promptCardAPI.createPromptCard(projectId, newCardData);\n        toast.success(\"프롬프트 카드가 생성되었습니다!\");\n      }\n      await loadPromptCards();\n      setShowForm(false);\n      setEditingCard(null);\n      if (onCardsChanged) onCardsChanged();\n    } catch (error) {\n      const errorInfo = handleAPIError(error);\n      toast.error(`카드 ${editingCard ? \"수정\" : \"생성\"} 실패: ${errorInfo.message}`);\n    }\n  };\n\n  // 카드 토글 (최적화 UI)\n  const handleToggleCard = async (promptId, enabled) => {\n    // promptCards가 배열인지 확인\n    if (!Array.isArray(promptCards)) {\n      console.error(\"promptCards is not an array:\", promptCards);\n      return;\n    }\n\n    // 낙관적 업데이트: 즉시 UI 반영\n    const originalCards = [...promptCards];\n    const updatedCards = promptCards.map(card => (card.promptId || card.id) === promptId ? {\n      ...card,\n      enabled\n    } : card);\n    setPromptCards(updatedCards);\n    try {\n      // 템플릿 카드가 아닌 경우에만 API 호출\n      const card = promptCards.find(c => (c.promptId || c.id) === promptId);\n      if (card && !card.isTemplate) {\n        await promptCardAPI.updatePromptCard(projectId, promptId, {\n          enabled\n        });\n      }\n      if (onCardsChanged) onCardsChanged();\n    } catch (error) {\n      // 실패 시 복원\n      setPromptCards(originalCards);\n      const errorInfo = handleAPIError(error);\n      toast.error(`카드 상태 변경 실패: ${errorInfo.message}`);\n    }\n  };\n\n  // 카드 삭제 또는 초기화\n  const handleDeleteCard = async promptId => {\n    const card = promptCards.find(c => (c.promptId || c.id) === promptId);\n    if (card && card.isTemplate) {\n      if (!window.confirm(\"이 프롬프트를 기본값으로 초기화하시겠습니까?\")) {\n        return;\n      }\n      // 템플릿 카드는 기본값으로 초기화\n      const template = FIXED_PROMPT_CATEGORIES.find(t => t.id === card.category);\n      if (template) {\n        const updatedCards = promptCards.map(c => (c.promptId || c.id) === promptId ? {\n          ...c,\n          prompt_text: template.defaultContent\n        } : c);\n        setPromptCards(updatedCards);\n        toast.success(\"프롬프트가 기본값으로 초기화되었습니다!\");\n      }\n      return;\n    }\n    if (!window.confirm(\"정말로 이 프롬프트 카드를 삭제하시겠습니까?\")) {\n      return;\n    }\n    try {\n      await promptCardAPI.deletePromptCard(projectId, promptId);\n      await loadPromptCards();\n      toast.success(\"프롬프트 카드가 삭제되었습니다!\");\n      if (onCardsChanged) onCardsChanged();\n    } catch (error) {\n      const errorInfo = handleAPIError(error);\n      toast.error(`카드 삭제 실패: ${errorInfo.message}`);\n    }\n  };\n\n  // 편집 모드 시작\n  const handleEditCard = card => {\n    setEditingCard(card);\n    setShowForm(true);\n  };\n\n  // 폼 취소\n  const handleCancelForm = () => {\n    setShowForm(false);\n    setEditingCard(null);\n  };\n\n  // 저장된 대화 삭제\n  const deleteSavedChat = chatId => {\n    if (window.confirm('저장된 대화를 삭제하시겠습니까?')) {\n      const existingChats = JSON.parse(localStorage.getItem('savedChats') || '[]');\n      const updatedChats = existingChats.filter(chat => chat.id !== chatId);\n      localStorage.setItem('savedChats', JSON.stringify(updatedChats));\n      setSavedChats(updatedChats.filter(chat => chat.projectId === projectId));\n    }\n  };\n\n  // promptCards가 배열인지 확인하고 안전하게 처리\n  const safePromptCards = Array.isArray(promptCards) ? promptCards : [];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flex h-screen bg-gray-50\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex-1 min-w-0 relative p-3 lg:pr-2\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"absolute top-6 right-6 z-10 lg:hidden\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"p-3 text-slate-500 hover:text-slate-700 hover:bg-white/80 hover:shadow-lg rounded-xl backdrop-blur-sm transition-all duration-300\",\n          children: /*#__PURE__*/_jsxDEV(Bars3Icon, {\n            className: \"h-5 w-5\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 341,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 340,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 339,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"h-full bg-white rounded-lg border border-gray-200 overflow-hidden\",\n        children: /*#__PURE__*/_jsxDEV(ChatInterface, {\n          projectId: projectId,\n          projectName: projectName,\n          promptCards: safePromptCards\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 346,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 345,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 337,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"w-[350px] flex flex-col hidden lg:flex p-3 pl-2\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"h-full bg-white rounded-lg border border-gray-200 flex flex-col overflow-hidden\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex-shrink-0 p-3 border-b border-gray-200\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex items-center justify-between mb-2\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"flex items-center gap-4\",\n              children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => setShowSavedChats(false),\n                className: `text-sm font-medium transition-colors ${!showSavedChats ? 'text-blue-600 border-b-2 border-blue-600' : 'text-gray-600 hover:text-gray-900'}`,\n                children: \"\\uD504\\uB86C\\uD504\\uD2B8\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 361,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => setShowSavedChats(true),\n                className: `text-sm font-medium transition-colors flex items-center gap-1 ${showSavedChats ? 'text-blue-600 border-b-2 border-blue-600' : 'text-gray-600 hover:text-gray-900'}`,\n                children: [/*#__PURE__*/_jsxDEV(ChatBubbleLeftRightIcon, {\n                  className: \"h-4 w-4\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 375,\n                  columnNumber: 19\n                }, this), \"\\uB300\\uD654 \\uAE30\\uB85D\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 369,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 360,\n              columnNumber: 15\n            }, this), !showSavedChats && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"text-xs text-gray-500 bg-gray-100 px-2 py-1 rounded-full\",\n              children: [safePromptCards.filter(card => card.enabled).length, \"/\", safePromptCards.length]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 380,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 359,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"text-xs text-gray-600\",\n            children: showSavedChats ? '저장된 대화 기록을 확인하세요' : '각 카테고0리별 프롬프트를 설정하세요'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 385,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 358,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex-1 overflow-y-auto p-3\",\n          children: !showSavedChats ?\n          // 프롬프트 카드 목록\n          loading ? /*#__PURE__*/_jsxDEV(SidebarSkeleton, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 395,\n            columnNumber: 17\n          }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"space-y-2\",\n            children: safePromptCards.map((card, index) => /*#__PURE__*/_jsxDEV(PromptCard, {\n              card: card,\n              onEdit: handleEditCard,\n              onToggle: handleToggleCard,\n              onDelete: handleDeleteCard,\n              stepNumber: index + 1,\n              hideDeleteButton: card.isTemplate ? false : false,\n              projectId: projectId,\n              enableInlineEdit: true\n            }, card.promptId || card.id || index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 399,\n              columnNumber: 21\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 397,\n            columnNumber: 17\n          }, this) :\n          /*#__PURE__*/\n          // 저장된 대화 목록\n          _jsxDEV(\"div\", {\n            className: \"space-y-2\",\n            children: savedChats.length === 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"text-center py-8\",\n              children: [/*#__PURE__*/_jsxDEV(ChatBubbleLeftRightIcon, {\n                className: \"h-12 w-12 text-gray-300 mx-auto mb-3\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 418,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"text-sm text-gray-500\",\n                children: \"\\uC800\\uC7A5\\uB41C \\uB300\\uD654\\uAC00 \\uC5C6\\uC2B5\\uB2C8\\uB2E4\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 419,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"text-xs text-gray-400 mt-1\",\n                children: \"\\uB300\\uD654\\uCC3D\\uC5D0\\uC11C '\\uC800\\uC7A5' \\uBC84\\uD2BC\\uC744 \\uB20C\\uB7EC\\uC8FC\\uC138\\uC694\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 420,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 417,\n              columnNumber: 19\n            }, this) : savedChats.map(chat => /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"bg-white border border-gray-200 rounded-lg p-3 hover:border-gray-300 transition-colors\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"flex items-start justify-between\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"flex-1 min-w-0\",\n                  children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n                    className: \"text-sm font-medium text-gray-900 truncate\",\n                    children: chat.title\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 430,\n                    columnNumber: 27\n                  }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                    className: \"text-xs text-gray-500 mt-1\",\n                    children: new Date(chat.timestamp).toLocaleString()\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 433,\n                    columnNumber: 27\n                  }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                    className: \"text-xs text-gray-400 mt-1\",\n                    children: [chat.messages.length, \"\\uAC1C \\uBA54\\uC2DC\\uC9C0\"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 436,\n                    columnNumber: 27\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 429,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  onClick: () => deleteSavedChat(chat.id),\n                  className: \"p-1 text-gray-400 hover:text-red-600 transition-colors\",\n                  title: \"\\uC0AD\\uC81C\",\n                  children: /*#__PURE__*/_jsxDEV(TrashIcon, {\n                    className: \"h-4 w-4\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 445,\n                    columnNumber: 27\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 440,\n                  columnNumber: 25\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 428,\n                columnNumber: 23\n              }, this)\n            }, chat.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 424,\n              columnNumber: 21\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 415,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 391,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex-shrink-0 p-3 border-t border-gray-200 bg-gray-50\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"text-xs text-gray-600\",\n            children: !showSavedChats ? /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"font-medium mb-1\",\n                children: \"\\uACE0\\uC815 \\uD15C\\uD50C\\uB9BF \\uC2DC\\uC2A4\\uD15C\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 460,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: \"\\uCCB4\\uACC4\\uC801\\uC778 \\uD504\\uB86C\\uD504\\uD2B8 \\uAD00\\uB9AC\\uAC00 \\uAC00\\uB2A5\\uD569\\uB2C8\\uB2E4.\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 461,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"font-medium mb-1\",\n                children: \"\\uB300\\uD654 \\uAE30\\uB85D \\uAD00\\uB9AC\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 465,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: \"\\uCD5C\\uB300 10\\uAC1C\\uC758 \\uB300\\uD654\\uAC00 \\uC800\\uC7A5\\uB429\\uB2C8\\uB2E4.\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 466,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 457,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 456,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 356,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 355,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(PromptEditModal, {\n      isOpen: showForm,\n      onSubmit: handleUpdateCard,\n      onCancel: handleCancelForm,\n      initialData: editingCard\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 475,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 335,\n    columnNumber: 5\n  }, this);\n};\n_s(PromptCardManager, \"DDPE3QKJEm2Y5AMGG3qkZYbP6x0=\");\n_c2 = PromptCardManager;\nexport default PromptCardManager;\nvar _c, _c2;\n$RefreshReg$(_c, \"PromptEditModal\");\n$RefreshReg$(_c2, \"PromptCardManager\");","map":{"version":3,"names":["React","useState","useEffect","useCallback","toast","PlusIcon","Bars3Icon","ChatBubbleLeftRightIcon","TrashIcon","promptCardAPI","handleAPIError","ChatInterface","PromptCard","PromptEditForm","SidebarSkeleton","jsxDEV","_jsxDEV","Fragment","_Fragment","FIXED_PROMPT_CATEGORIES","id","name","order","color","icon","description","defaultContent","placeholder","isCoT","isReAct","PromptEditModal","isOpen","onSubmit","onCancel","initialData","className","children","isModal","fileName","_jsxFileName","lineNumber","columnNumber","_c","PromptCardManager","projectId","onCardsChanged","projectName","_s","promptCards","setPromptCards","loading","setLoading","showForm","setShowForm","editingCard","setEditingCard","savedChats","setSavedChats","showSavedChats","setShowSavedChats","loadPromptCards","response","getPromptCards","cards","Array","isArray","data","console","warn","templateCards","map","template","existingCard","find","card","category","title","prompt_text","promptId","model_name","temperature","enabled","step_order","isTemplate","sort","a","b","error","errorInfo","message","defaultCards","existingChats","JSON","parse","localStorage","getItem","filter","chat","handleUpdateCard","cardData","updateData","updatePromptCard","success","newCardData","createPromptCard","handleToggleCard","originalCards","updatedCards","c","handleDeleteCard","window","confirm","t","deletePromptCard","handleEditCard","handleCancelForm","deleteSavedChat","chatId","updatedChats","setItem","stringify","safePromptCards","onClick","length","index","onEdit","onToggle","onDelete","stepNumber","hideDeleteButton","enableInlineEdit","Date","timestamp","toLocaleString","messages","_c2","$RefreshReg$"],"sources":["/Users/yeong-gwang/Documents/work/서울경제신문/ai_제목달기/frontend/src/components/PromptCardManager.js"],"sourcesContent":["import React, { useState, useEffect, useCallback } from \"react\";\nimport { toast } from \"react-hot-toast\";\nimport { PlusIcon, Bars3Icon, ChatBubbleLeftRightIcon, TrashIcon } from \"@heroicons/react/24/outline\";\nimport { promptCardAPI, handleAPIError } from \"../services/api\";\nimport ChatInterface from \"./ChatInterface\";\nimport PromptCard from \"./prompts/PromptCard\";\nimport PromptEditForm from \"./prompts/PromptEditForm\";\nimport { SidebarSkeleton } from \"./SkeletonLoader\";\n\n// AI 워크플로우 기반 프롬프트 템플릿\nconst FIXED_PROMPT_CATEGORIES = [\n  {\n    id: \"instruction\", \n    name: \"역할 및 목표\",\n    order: 1,\n    color: \"bg-slate-100/80 text-slate-700 border-slate-200/80\",\n    icon: \"\",\n    description: \"AI의 역할, 정체성, 핵심 목표를 명확히 정의합니다\",\n    defaultContent: \"당신은 전문적인 기사 제목 생성 AI입니다.\\n목표: 독자의 관심을 끌고 정확한 정보를 전달하는 제목 생성\",\n    placeholder: \"AI의 역할과 주요 목표를 구체적으로 작성하세요...\",\n  },\n  {\n    id: \"knowledge\",\n    name: \"지식 베이스\", \n    order: 2,\n    color: \"bg-slate-100/80 text-slate-700 border-slate-200/80\",\n    icon: \"\",\n    description: \"작업 수행에 필요한 핵심 지식과 원칙을 제공합니다\",\n    defaultContent: \"제목 작성 원칙:\\n- 간결하고 명확한 표현\\n- 핵심 키워드 포함\\n- 독자의 관심 유발\",\n    placeholder: \"작업에 필요한 핵심 지식과 원칙을 작성하세요...\",\n  },\n  {\n    id: \"secondary\",\n    name: \"CoT (사고 과정)\",\n    order: 3, \n    color: \"bg-slate-100/80 text-slate-700 border-slate-200/80\",\n    icon: \"\",\n    description: \"단계별 추론 과정을 통해 사고의 투명성을 확보합니다\",\n    defaultContent: \"다음 단계로 사고하세요:\\n1. 기사의 핵심 내용 파악\\n2. 주요 키워드 추출\\n3. 독자 관점에서 흥미도 평가\\n4. 제목 후보 생성\\n5. 최적 제목 선택\",\n    placeholder: \"단계별 사고 과정을 구체적으로 작성하세요...\",\n    isCoT: true,\n  },\n  {\n    id: \"style_guide\",\n    name: \"스타일 가이드\",\n    order: 4,\n    color: \"bg-slate-100/80 text-slate-700 border-slate-200/80\", \n    icon: \"\",\n    description: \"일관된 스타일과 형식을 유지하기 위한 가이드라인\",\n    defaultContent: \"스타일 요구사항:\\n- 길이: 15-25자 권장\\n- 톤: 전문적이면서 친근\\n- 형식: 명사형 종결\",\n    placeholder: \"스타일과 형식 요구사항을 작성하세요...\",\n  },\n  {\n    id: \"validation\", \n    name: \"ReAct (추론+행동)\",\n    order: 5,\n    color: \"bg-slate-100/80 text-slate-700 border-slate-200/80\",\n    icon: \"\",\n    description: \"추론과 행동을 결합하여 더 정확한 결과를 도출합니다\",\n    defaultContent: \"Thought: 이 기사의 핵심은 무엇인가?\\nAction: 키워드를 추출하고 중요도를 평가한다\\nObservation: 추출된 정보를 바탕으로 제목을 구성한다\\nThought: 생성된 제목이 요구사항을 충족하는가?\\nAction: 필요시 수정하고 최종 검증한다\",\n    placeholder: \"Thought/Action/Observation 패턴으로 작성하세요...\",\n    isReAct: true,\n  },\n  {\n    id: \"enhancement\",\n    name: \"품질 검증\",\n    order: 6,\n    color: \"bg-slate-100/80 text-slate-700 border-slate-200/80\",\n    icon: \"\",\n    description: \"최종 결과물의 품질을 검증하고 개선합니다\",\n    defaultContent: \"품질 검증 기준:\\n- 정확성: 기사 내용과 일치\\n- 매력도: 독자 관심 유발\\n- 적절성: 매체 성격에 부합\\n- 완성도: 문법과 표현의 정확성\",\n    placeholder: \"품질 검증 기준과 개선 방안을 작성하세요...\",\n  },\n];\n\n// 프롬프트 편집 모달\nconst PromptEditModal = ({ isOpen, onSubmit, onCancel, initialData }) => {\n  if (!isOpen) return null;\n\n  return (\n    <div className=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50 p-4\">\n      <div className=\"bg-white rounded-lg w-full max-w-lg max-h-[80vh] overflow-y-auto\">\n        <PromptEditForm\n          onSubmit={onSubmit}\n          onCancel={onCancel}\n          initialData={initialData}\n          isModal={true}\n        />\n      </div>\n    </div>\n  );\n};\n\nconst PromptCardManager = ({ projectId, onCardsChanged, projectName }) => {\n  // 상태 관리\n  const [promptCards, setPromptCards] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [showForm, setShowForm] = useState(false);\n  const [editingCard, setEditingCard] = useState(null);\n  const [savedChats, setSavedChats] = useState([]);\n  const [showSavedChats, setShowSavedChats] = useState(false);\n\n  // 프롬프트 카드 로드 및 기본 템플릿 생성\n  const loadPromptCards = useCallback(async () => {\n    try {\n      setLoading(true);\n      const response = await promptCardAPI.getPromptCards(projectId);\n\n      // API 응답 구조 확인 및 안전한 처리\n      let cards = [];\n      if (Array.isArray(response)) {\n        cards = response;\n      } else if (response && Array.isArray(response.promptCards)) {\n        cards = response.promptCards;\n      } else if (response && Array.isArray(response.data)) {\n        cards = response.data;\n      } else {\n        console.warn(\"Unexpected API response structure:\", response);\n        cards = [];\n      }\n\n      // 고정된 템플릿 카드들과 기존 카드들을 매칭\n      const templateCards = FIXED_PROMPT_CATEGORIES.map((template) => {\n        const existingCard = cards.find(\n          (card) => card.category === template.id\n        );\n\n        if (existingCard) {\n          // 기존 카드가 있으면 해당 카드 사용\n          return {\n            ...existingCard,\n            ...template, // 템플릿 정보로 덮어쓰기 (name, order, color, description)\n            title: existingCard.title || `${template.name} 프롬프트`,\n            prompt_text: existingCard.prompt_text || template.defaultContent,\n          };\n        } else {\n          // 기존 카드가 없으면 템플릿으로 기본 카드 생성\n          return {\n            id: `template-${template.id}`,\n            promptId: `template-${template.id}`,\n            title: `${template.name} 프롬프트`,\n            category: template.id,\n            prompt_text: template.defaultContent,\n            model_name: \"claude-3-5-sonnet-20241022\",\n            temperature: 0.7,\n            enabled: true,\n            step_order: template.order,\n            isTemplate: true, // 템플릿 카드임을 표시\n            ...template,\n          };\n        }\n      });\n\n      // 순서대로 정렬\n      templateCards.sort((a, b) => (a.order || 999) - (b.order || 999));\n\n      setPromptCards(templateCards);\n    } catch (error) {\n      const errorInfo = handleAPIError(error);\n      toast.error(`프롬프트 카드 로딩 실패: ${errorInfo.message}`);\n\n      // 오류 시에도 기본 템플릿 카드들 표시\n      const defaultCards = FIXED_PROMPT_CATEGORIES.map((template) => ({\n        id: `template-${template.id}`,\n        promptId: `template-${template.id}`,\n        title: `${template.name} 프롬프트`,\n        category: template.id,\n        prompt_text: template.defaultContent,\n        model_name: \"claude-3-5-sonnet-20241022\",\n        temperature: 0.7,\n        enabled: true,\n        step_order: template.order,\n        isTemplate: true,\n        ...template,\n      }));\n\n      setPromptCards(defaultCards);\n    } finally {\n      setLoading(false);\n    }\n  }, [projectId]);\n\n  useEffect(() => {\n    loadPromptCards();\n    // 저장된 대화 로드\n    const existingChats = JSON.parse(localStorage.getItem('savedChats') || '[]');\n    setSavedChats(existingChats.filter(chat => chat.projectId === projectId));\n  }, [loadPromptCards, projectId]);\n\n  // 카드 업데이트\n  const handleUpdateCard = async (cardData) => {\n    try {\n      if (editingCard && !editingCard.isTemplate) {\n        // 기존 카드 편집 - 기존 정보 유지\n        const updateData = {\n          ...cardData,\n          category: editingCard.category,\n          title: editingCard.title,\n          step_order: editingCard.step_order || editingCard.order,\n        };\n        await promptCardAPI.updatePromptCard(\n          projectId,\n          editingCard.promptId || editingCard.id,\n          updateData\n        );\n        toast.success(\"프롬프트 카드가 수정되었습니다!\");\n      } else if (editingCard && editingCard.isTemplate) {\n        // 템플릿 카드를 실제 카드로 생성\n        const newCardData = {\n          ...cardData,\n          category: editingCard.category,\n          title: editingCard.title,\n          step_order: editingCard.order,\n        };\n        await promptCardAPI.createPromptCard(projectId, newCardData);\n        toast.success(\"프롬프트 카드가 생성되었습니다!\");\n      } else {\n        // 새 카드 생성\n        const newCardData = {\n          ...cardData,\n          category: \"instruction\", // 기본 카테고리\n          title: \"새 프롬프트 카드\",\n          step_order: 1,\n        };\n        await promptCardAPI.createPromptCard(projectId, newCardData);\n        toast.success(\"프롬프트 카드가 생성되었습니다!\");\n      }\n\n      await loadPromptCards();\n      setShowForm(false);\n      setEditingCard(null);\n\n      if (onCardsChanged) onCardsChanged();\n    } catch (error) {\n      const errorInfo = handleAPIError(error);\n      toast.error(\n        `카드 ${editingCard ? \"수정\" : \"생성\"} 실패: ${errorInfo.message}`\n      );\n    }\n  };\n\n  // 카드 토글 (최적화 UI)\n  const handleToggleCard = async (promptId, enabled) => {\n    // promptCards가 배열인지 확인\n    if (!Array.isArray(promptCards)) {\n      console.error(\"promptCards is not an array:\", promptCards);\n      return;\n    }\n\n    // 낙관적 업데이트: 즉시 UI 반영\n    const originalCards = [...promptCards];\n    const updatedCards = promptCards.map((card) =>\n      (card.promptId || card.id) === promptId ? { ...card, enabled } : card\n    );\n    setPromptCards(updatedCards);\n\n    try {\n      // 템플릿 카드가 아닌 경우에만 API 호출\n      const card = promptCards.find((c) => (c.promptId || c.id) === promptId);\n      if (card && !card.isTemplate) {\n        await promptCardAPI.updatePromptCard(projectId, promptId, { enabled });\n      }\n      if (onCardsChanged) onCardsChanged();\n    } catch (error) {\n      // 실패 시 복원\n      setPromptCards(originalCards);\n      const errorInfo = handleAPIError(error);\n      toast.error(`카드 상태 변경 실패: ${errorInfo.message}`);\n    }\n  };\n\n  // 카드 삭제 또는 초기화\n  const handleDeleteCard = async (promptId) => {\n    const card = promptCards.find((c) => (c.promptId || c.id) === promptId);\n\n    if (card && card.isTemplate) {\n      if (!window.confirm(\"이 프롬프트를 기본값으로 초기화하시겠습니까?\")) {\n        return;\n      }\n      // 템플릿 카드는 기본값으로 초기화\n      const template = FIXED_PROMPT_CATEGORIES.find(t => t.id === card.category);\n      if (template) {\n        const updatedCards = promptCards.map(c => \n          (c.promptId || c.id) === promptId \n            ? { ...c, prompt_text: template.defaultContent }\n            : c\n        );\n        setPromptCards(updatedCards);\n        toast.success(\"프롬프트가 기본값으로 초기화되었습니다!\");\n      }\n      return;\n    }\n\n    if (!window.confirm(\"정말로 이 프롬프트 카드를 삭제하시겠습니까?\")) {\n      return;\n    }\n\n    try {\n      await promptCardAPI.deletePromptCard(projectId, promptId);\n      await loadPromptCards();\n      toast.success(\"프롬프트 카드가 삭제되었습니다!\");\n      if (onCardsChanged) onCardsChanged();\n    } catch (error) {\n      const errorInfo = handleAPIError(error);\n      toast.error(`카드 삭제 실패: ${errorInfo.message}`);\n    }\n  };\n\n  // 편집 모드 시작\n  const handleEditCard = (card) => {\n    setEditingCard(card);\n    setShowForm(true);\n  };\n\n  // 폼 취소\n  const handleCancelForm = () => {\n    setShowForm(false);\n    setEditingCard(null);\n  };\n\n  // 저장된 대화 삭제\n  const deleteSavedChat = (chatId) => {\n    if (window.confirm('저장된 대화를 삭제하시겠습니까?')) {\n      const existingChats = JSON.parse(localStorage.getItem('savedChats') || '[]');\n      const updatedChats = existingChats.filter(chat => chat.id !== chatId);\n      localStorage.setItem('savedChats', JSON.stringify(updatedChats));\n      setSavedChats(updatedChats.filter(chat => chat.projectId === projectId));\n    }\n  };\n\n  // promptCards가 배열인지 확인하고 안전하게 처리\n  const safePromptCards = Array.isArray(promptCards) ? promptCards : [];\n\n  return (\n    <div className=\"flex h-screen bg-gray-50\">\n      {/* 메인 콘텐츠 - 채팅 인터페이스 */}\n      <div className=\"flex-1 min-w-0 relative p-3 lg:pr-2\">\n        {/* 우측 상단 메뉴 버튼 (모바일용) */}\n        <div className=\"absolute top-6 right-6 z-10 lg:hidden\">\n          <button className=\"p-3 text-slate-500 hover:text-slate-700 hover:bg-white/80 hover:shadow-lg rounded-xl backdrop-blur-sm transition-all duration-300\">\n            <Bars3Icon className=\"h-5 w-5\" />\n          </button>\n        </div>\n\n        <div className=\"h-full bg-white rounded-lg border border-gray-200 overflow-hidden\">\n          <ChatInterface\n            projectId={projectId}\n            projectName={projectName}\n            promptCards={safePromptCards}\n          />\n        </div>\n      </div>\n\n      {/* 우측 사이드바 */}\n      <div className=\"w-[350px] flex flex-col hidden lg:flex p-3 pl-2\">\n        <div className=\"h-full bg-white rounded-lg border border-gray-200 flex flex-col overflow-hidden\">\n          {/* 사이드바 헤더 */}\n          <div className=\"flex-shrink-0 p-3 border-b border-gray-200\">\n            <div className=\"flex items-center justify-between mb-2\">\n              <div className=\"flex items-center gap-4\">\n                <button\n                  onClick={() => setShowSavedChats(false)}\n                  className={`text-sm font-medium transition-colors ${\n                    !showSavedChats ? 'text-blue-600 border-b-2 border-blue-600' : 'text-gray-600 hover:text-gray-900'\n                  }`}\n                >\n                  프롬프트\n                </button>\n                <button\n                  onClick={() => setShowSavedChats(true)}\n                  className={`text-sm font-medium transition-colors flex items-center gap-1 ${\n                    showSavedChats ? 'text-blue-600 border-b-2 border-blue-600' : 'text-gray-600 hover:text-gray-900'\n                  }`}\n                >\n                  <ChatBubbleLeftRightIcon className=\"h-4 w-4\" />\n                  대화 기록\n                </button>\n              </div>\n              {!showSavedChats && (\n                <div className=\"text-xs text-gray-500 bg-gray-100 px-2 py-1 rounded-full\">\n                  {safePromptCards.filter((card) => card.enabled).length}/{safePromptCards.length}\n                </div>\n              )}\n            </div>\n            <p className=\"text-xs text-gray-600\">\n              {showSavedChats ? '저장된 대화 기록을 확인하세요' : '각 카테고0리별 프롬프트를 설정하세요'}\n            </p>\n          </div>\n\n          {/* 콘텐츠 영역 */}\n          <div className=\"flex-1 overflow-y-auto p-3\">\n            {!showSavedChats ? (\n              // 프롬프트 카드 목록\n              loading ? (\n                <SidebarSkeleton />\n              ) : (\n                <div className=\"space-y-2\">\n                  {safePromptCards.map((card, index) => (\n                    <PromptCard\n                      key={card.promptId || card.id || index}\n                      card={card}\n                      onEdit={handleEditCard}\n                      onToggle={handleToggleCard}\n                      onDelete={handleDeleteCard}\n                      stepNumber={index + 1}\n                      hideDeleteButton={card.isTemplate ? false : false}\n                      projectId={projectId}\n                      enableInlineEdit={true}\n                    />\n                  ))}\n                </div>\n              )\n            ) : (\n              // 저장된 대화 목록\n              <div className=\"space-y-2\">\n                {savedChats.length === 0 ? (\n                  <div className=\"text-center py-8\">\n                    <ChatBubbleLeftRightIcon className=\"h-12 w-12 text-gray-300 mx-auto mb-3\" />\n                    <p className=\"text-sm text-gray-500\">저장된 대화가 없습니다</p>\n                    <p className=\"text-xs text-gray-400 mt-1\">대화창에서 '저장' 버튼을 눌러주세요</p>\n                  </div>\n                ) : (\n                  savedChats.map((chat) => (\n                    <div\n                      key={chat.id}\n                      className=\"bg-white border border-gray-200 rounded-lg p-3 hover:border-gray-300 transition-colors\"\n                    >\n                      <div className=\"flex items-start justify-between\">\n                        <div className=\"flex-1 min-w-0\">\n                          <h4 className=\"text-sm font-medium text-gray-900 truncate\">\n                            {chat.title}\n                          </h4>\n                          <p className=\"text-xs text-gray-500 mt-1\">\n                            {new Date(chat.timestamp).toLocaleString()}\n                          </p>\n                          <p className=\"text-xs text-gray-400 mt-1\">\n                            {chat.messages.length}개 메시지\n                          </p>\n                        </div>\n                        <button\n                          onClick={() => deleteSavedChat(chat.id)}\n                          className=\"p-1 text-gray-400 hover:text-red-600 transition-colors\"\n                          title=\"삭제\"\n                        >\n                          <TrashIcon className=\"h-4 w-4\" />\n                        </button>\n                      </div>\n                    </div>\n                  ))\n                )}\n              </div>\n            )}\n          </div>\n\n          {/* 하단 정보 */}\n          <div className=\"flex-shrink-0 p-3 border-t border-gray-200 bg-gray-50\">\n            <div className=\"text-xs text-gray-600\">\n              {!showSavedChats ? (\n                <>\n                  <p className=\"font-medium mb-1\">고정 템플릿 시스템</p>\n                  <p>체계적인 프롬프트 관리가 가능합니다.</p>\n                </>\n              ) : (\n                <>\n                  <p className=\"font-medium mb-1\">대화 기록 관리</p>\n                  <p>최대 10개의 대화가 저장됩니다.</p>\n                </>\n              )}\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {/* 편집 모달 */}\n      <PromptEditModal\n        isOpen={showForm}\n        onSubmit={handleUpdateCard}\n        onCancel={handleCancelForm}\n        initialData={editingCard}\n      />\n    </div>\n  );\n};\n\nexport default PromptCardManager;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,EAAEC,WAAW,QAAQ,OAAO;AAC/D,SAASC,KAAK,QAAQ,iBAAiB;AACvC,SAASC,QAAQ,EAAEC,SAAS,EAAEC,uBAAuB,EAAEC,SAAS,QAAQ,6BAA6B;AACrG,SAASC,aAAa,EAAEC,cAAc,QAAQ,iBAAiB;AAC/D,OAAOC,aAAa,MAAM,iBAAiB;AAC3C,OAAOC,UAAU,MAAM,sBAAsB;AAC7C,OAAOC,cAAc,MAAM,0BAA0B;AACrD,SAASC,eAAe,QAAQ,kBAAkB;;AAElD;AAAA,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AACA,MAAMC,uBAAuB,GAAG,CAC9B;EACEC,EAAE,EAAE,aAAa;EACjBC,IAAI,EAAE,SAAS;EACfC,KAAK,EAAE,CAAC;EACRC,KAAK,EAAE,oDAAoD;EAC3DC,IAAI,EAAE,EAAE;EACRC,WAAW,EAAE,+BAA+B;EAC5CC,cAAc,EAAE,6DAA6D;EAC7EC,WAAW,EAAE;AACf,CAAC,EACD;EACEP,EAAE,EAAE,WAAW;EACfC,IAAI,EAAE,QAAQ;EACdC,KAAK,EAAE,CAAC;EACRC,KAAK,EAAE,oDAAoD;EAC3DC,IAAI,EAAE,EAAE;EACRC,WAAW,EAAE,6BAA6B;EAC1CC,cAAc,EAAE,oDAAoD;EACpEC,WAAW,EAAE;AACf,CAAC,EACD;EACEP,EAAE,EAAE,WAAW;EACfC,IAAI,EAAE,aAAa;EACnBC,KAAK,EAAE,CAAC;EACRC,KAAK,EAAE,oDAAoD;EAC3DC,IAAI,EAAE,EAAE;EACRC,WAAW,EAAE,8BAA8B;EAC3CC,cAAc,EAAE,2FAA2F;EAC3GC,WAAW,EAAE,2BAA2B;EACxCC,KAAK,EAAE;AACT,CAAC,EACD;EACER,EAAE,EAAE,aAAa;EACjBC,IAAI,EAAE,SAAS;EACfC,KAAK,EAAE,CAAC;EACRC,KAAK,EAAE,oDAAoD;EAC3DC,IAAI,EAAE,EAAE;EACRC,WAAW,EAAE,4BAA4B;EACzCC,cAAc,EAAE,0DAA0D;EAC1EC,WAAW,EAAE;AACf,CAAC,EACD;EACEP,EAAE,EAAE,YAAY;EAChBC,IAAI,EAAE,eAAe;EACrBC,KAAK,EAAE,CAAC;EACRC,KAAK,EAAE,oDAAoD;EAC3DC,IAAI,EAAE,EAAE;EACRC,WAAW,EAAE,8BAA8B;EAC3CC,cAAc,EAAE,oJAAoJ;EACpKC,WAAW,EAAE,0CAA0C;EACvDE,OAAO,EAAE;AACX,CAAC,EACD;EACET,EAAE,EAAE,aAAa;EACjBC,IAAI,EAAE,OAAO;EACbC,KAAK,EAAE,CAAC;EACRC,KAAK,EAAE,oDAAoD;EAC3DC,IAAI,EAAE,EAAE;EACRC,WAAW,EAAE,wBAAwB;EACrCC,cAAc,EAAE,oFAAoF;EACpGC,WAAW,EAAE;AACf,CAAC,CACF;;AAED;AACA,MAAMG,eAAe,GAAGA,CAAC;EAAEC,MAAM;EAAEC,QAAQ;EAAEC,QAAQ;EAAEC;AAAY,CAAC,KAAK;EACvE,IAAI,CAACH,MAAM,EAAE,OAAO,IAAI;EAExB,oBACEf,OAAA;IAAKmB,SAAS,EAAC,gFAAgF;IAAAC,QAAA,eAC7FpB,OAAA;MAAKmB,SAAS,EAAC,kEAAkE;MAAAC,QAAA,eAC/EpB,OAAA,CAACH,cAAc;QACbmB,QAAQ,EAAEA,QAAS;QACnBC,QAAQ,EAAEA,QAAS;QACnBC,WAAW,EAAEA,WAAY;QACzBG,OAAO,EAAE;MAAK;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACf;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAACC,EAAA,GAfIZ,eAAe;AAiBrB,MAAMa,iBAAiB,GAAGA,CAAC;EAAEC,SAAS;EAAEC,cAAc;EAAEC;AAAY,CAAC,KAAK;EAAAC,EAAA;EACxE;EACA,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGhD,QAAQ,CAAC,EAAE,CAAC;EAClD,MAAM,CAACiD,OAAO,EAAEC,UAAU,CAAC,GAAGlD,QAAQ,CAAC,IAAI,CAAC;EAC5C,MAAM,CAACmD,QAAQ,EAAEC,WAAW,CAAC,GAAGpD,QAAQ,CAAC,KAAK,CAAC;EAC/C,MAAM,CAACqD,WAAW,EAAEC,cAAc,CAAC,GAAGtD,QAAQ,CAAC,IAAI,CAAC;EACpD,MAAM,CAACuD,UAAU,EAAEC,aAAa,CAAC,GAAGxD,QAAQ,CAAC,EAAE,CAAC;EAChD,MAAM,CAACyD,cAAc,EAAEC,iBAAiB,CAAC,GAAG1D,QAAQ,CAAC,KAAK,CAAC;;EAE3D;EACA,MAAM2D,eAAe,GAAGzD,WAAW,CAAC,YAAY;IAC9C,IAAI;MACFgD,UAAU,CAAC,IAAI,CAAC;MAChB,MAAMU,QAAQ,GAAG,MAAMpD,aAAa,CAACqD,cAAc,CAAClB,SAAS,CAAC;;MAE9D;MACA,IAAImB,KAAK,GAAG,EAAE;MACd,IAAIC,KAAK,CAACC,OAAO,CAACJ,QAAQ,CAAC,EAAE;QAC3BE,KAAK,GAAGF,QAAQ;MAClB,CAAC,MAAM,IAAIA,QAAQ,IAAIG,KAAK,CAACC,OAAO,CAACJ,QAAQ,CAACb,WAAW,CAAC,EAAE;QAC1De,KAAK,GAAGF,QAAQ,CAACb,WAAW;MAC9B,CAAC,MAAM,IAAIa,QAAQ,IAAIG,KAAK,CAACC,OAAO,CAACJ,QAAQ,CAACK,IAAI,CAAC,EAAE;QACnDH,KAAK,GAAGF,QAAQ,CAACK,IAAI;MACvB,CAAC,MAAM;QACLC,OAAO,CAACC,IAAI,CAAC,oCAAoC,EAAEP,QAAQ,CAAC;QAC5DE,KAAK,GAAG,EAAE;MACZ;;MAEA;MACA,MAAMM,aAAa,GAAGlD,uBAAuB,CAACmD,GAAG,CAAEC,QAAQ,IAAK;QAC9D,MAAMC,YAAY,GAAGT,KAAK,CAACU,IAAI,CAC5BC,IAAI,IAAKA,IAAI,CAACC,QAAQ,KAAKJ,QAAQ,CAACnD,EACvC,CAAC;QAED,IAAIoD,YAAY,EAAE;UAChB;UACA,OAAO;YACL,GAAGA,YAAY;YACf,GAAGD,QAAQ;YAAE;YACbK,KAAK,EAAEJ,YAAY,CAACI,KAAK,IAAI,GAAGL,QAAQ,CAAClD,IAAI,OAAO;YACpDwD,WAAW,EAAEL,YAAY,CAACK,WAAW,IAAIN,QAAQ,CAAC7C;UACpD,CAAC;QACH,CAAC,MAAM;UACL;UACA,OAAO;YACLN,EAAE,EAAE,YAAYmD,QAAQ,CAACnD,EAAE,EAAE;YAC7B0D,QAAQ,EAAE,YAAYP,QAAQ,CAACnD,EAAE,EAAE;YACnCwD,KAAK,EAAE,GAAGL,QAAQ,CAAClD,IAAI,OAAO;YAC9BsD,QAAQ,EAAEJ,QAAQ,CAACnD,EAAE;YACrByD,WAAW,EAAEN,QAAQ,CAAC7C,cAAc;YACpCqD,UAAU,EAAE,4BAA4B;YACxCC,WAAW,EAAE,GAAG;YAChBC,OAAO,EAAE,IAAI;YACbC,UAAU,EAAEX,QAAQ,CAACjD,KAAK;YAC1B6D,UAAU,EAAE,IAAI;YAAE;YAClB,GAAGZ;UACL,CAAC;QACH;MACF,CAAC,CAAC;;MAEF;MACAF,aAAa,CAACe,IAAI,CAAC,CAACC,CAAC,EAAEC,CAAC,KAAK,CAACD,CAAC,CAAC/D,KAAK,IAAI,GAAG,KAAKgE,CAAC,CAAChE,KAAK,IAAI,GAAG,CAAC,CAAC;MAEjE2B,cAAc,CAACoB,aAAa,CAAC;IAC/B,CAAC,CAAC,OAAOkB,KAAK,EAAE;MACd,MAAMC,SAAS,GAAG9E,cAAc,CAAC6E,KAAK,CAAC;MACvCnF,KAAK,CAACmF,KAAK,CAAC,kBAAkBC,SAAS,CAACC,OAAO,EAAE,CAAC;;MAElD;MACA,MAAMC,YAAY,GAAGvE,uBAAuB,CAACmD,GAAG,CAAEC,QAAQ,KAAM;QAC9DnD,EAAE,EAAE,YAAYmD,QAAQ,CAACnD,EAAE,EAAE;QAC7B0D,QAAQ,EAAE,YAAYP,QAAQ,CAACnD,EAAE,EAAE;QACnCwD,KAAK,EAAE,GAAGL,QAAQ,CAAClD,IAAI,OAAO;QAC9BsD,QAAQ,EAAEJ,QAAQ,CAACnD,EAAE;QACrByD,WAAW,EAAEN,QAAQ,CAAC7C,cAAc;QACpCqD,UAAU,EAAE,4BAA4B;QACxCC,WAAW,EAAE,GAAG;QAChBC,OAAO,EAAE,IAAI;QACbC,UAAU,EAAEX,QAAQ,CAACjD,KAAK;QAC1B6D,UAAU,EAAE,IAAI;QAChB,GAAGZ;MACL,CAAC,CAAC,CAAC;MAEHtB,cAAc,CAACyC,YAAY,CAAC;IAC9B,CAAC,SAAS;MACRvC,UAAU,CAAC,KAAK,CAAC;IACnB;EACF,CAAC,EAAE,CAACP,SAAS,CAAC,CAAC;EAEf1C,SAAS,CAAC,MAAM;IACd0D,eAAe,CAAC,CAAC;IACjB;IACA,MAAM+B,aAAa,GAAGC,IAAI,CAACC,KAAK,CAACC,YAAY,CAACC,OAAO,CAAC,YAAY,CAAC,IAAI,IAAI,CAAC;IAC5EtC,aAAa,CAACkC,aAAa,CAACK,MAAM,CAACC,IAAI,IAAIA,IAAI,CAACrD,SAAS,KAAKA,SAAS,CAAC,CAAC;EAC3E,CAAC,EAAE,CAACgB,eAAe,EAAEhB,SAAS,CAAC,CAAC;;EAEhC;EACA,MAAMsD,gBAAgB,GAAG,MAAOC,QAAQ,IAAK;IAC3C,IAAI;MACF,IAAI7C,WAAW,IAAI,CAACA,WAAW,CAAC6B,UAAU,EAAE;QAC1C;QACA,MAAMiB,UAAU,GAAG;UACjB,GAAGD,QAAQ;UACXxB,QAAQ,EAAErB,WAAW,CAACqB,QAAQ;UAC9BC,KAAK,EAAEtB,WAAW,CAACsB,KAAK;UACxBM,UAAU,EAAE5B,WAAW,CAAC4B,UAAU,IAAI5B,WAAW,CAAChC;QACpD,CAAC;QACD,MAAMb,aAAa,CAAC4F,gBAAgB,CAClCzD,SAAS,EACTU,WAAW,CAACwB,QAAQ,IAAIxB,WAAW,CAAClC,EAAE,EACtCgF,UACF,CAAC;QACDhG,KAAK,CAACkG,OAAO,CAAC,mBAAmB,CAAC;MACpC,CAAC,MAAM,IAAIhD,WAAW,IAAIA,WAAW,CAAC6B,UAAU,EAAE;QAChD;QACA,MAAMoB,WAAW,GAAG;UAClB,GAAGJ,QAAQ;UACXxB,QAAQ,EAAErB,WAAW,CAACqB,QAAQ;UAC9BC,KAAK,EAAEtB,WAAW,CAACsB,KAAK;UACxBM,UAAU,EAAE5B,WAAW,CAAChC;QAC1B,CAAC;QACD,MAAMb,aAAa,CAAC+F,gBAAgB,CAAC5D,SAAS,EAAE2D,WAAW,CAAC;QAC5DnG,KAAK,CAACkG,OAAO,CAAC,mBAAmB,CAAC;MACpC,CAAC,MAAM;QACL;QACA,MAAMC,WAAW,GAAG;UAClB,GAAGJ,QAAQ;UACXxB,QAAQ,EAAE,aAAa;UAAE;UACzBC,KAAK,EAAE,WAAW;UAClBM,UAAU,EAAE;QACd,CAAC;QACD,MAAMzE,aAAa,CAAC+F,gBAAgB,CAAC5D,SAAS,EAAE2D,WAAW,CAAC;QAC5DnG,KAAK,CAACkG,OAAO,CAAC,mBAAmB,CAAC;MACpC;MAEA,MAAM1C,eAAe,CAAC,CAAC;MACvBP,WAAW,CAAC,KAAK,CAAC;MAClBE,cAAc,CAAC,IAAI,CAAC;MAEpB,IAAIV,cAAc,EAAEA,cAAc,CAAC,CAAC;IACtC,CAAC,CAAC,OAAO0C,KAAK,EAAE;MACd,MAAMC,SAAS,GAAG9E,cAAc,CAAC6E,KAAK,CAAC;MACvCnF,KAAK,CAACmF,KAAK,CACT,MAAMjC,WAAW,GAAG,IAAI,GAAG,IAAI,QAAQkC,SAAS,CAACC,OAAO,EAC1D,CAAC;IACH;EACF,CAAC;;EAED;EACA,MAAMgB,gBAAgB,GAAG,MAAAA,CAAO3B,QAAQ,EAAEG,OAAO,KAAK;IACpD;IACA,IAAI,CAACjB,KAAK,CAACC,OAAO,CAACjB,WAAW,CAAC,EAAE;MAC/BmB,OAAO,CAACoB,KAAK,CAAC,8BAA8B,EAAEvC,WAAW,CAAC;MAC1D;IACF;;IAEA;IACA,MAAM0D,aAAa,GAAG,CAAC,GAAG1D,WAAW,CAAC;IACtC,MAAM2D,YAAY,GAAG3D,WAAW,CAACsB,GAAG,CAAEI,IAAI,IACxC,CAACA,IAAI,CAACI,QAAQ,IAAIJ,IAAI,CAACtD,EAAE,MAAM0D,QAAQ,GAAG;MAAE,GAAGJ,IAAI;MAAEO;IAAQ,CAAC,GAAGP,IACnE,CAAC;IACDzB,cAAc,CAAC0D,YAAY,CAAC;IAE5B,IAAI;MACF;MACA,MAAMjC,IAAI,GAAG1B,WAAW,CAACyB,IAAI,CAAEmC,CAAC,IAAK,CAACA,CAAC,CAAC9B,QAAQ,IAAI8B,CAAC,CAACxF,EAAE,MAAM0D,QAAQ,CAAC;MACvE,IAAIJ,IAAI,IAAI,CAACA,IAAI,CAACS,UAAU,EAAE;QAC5B,MAAM1E,aAAa,CAAC4F,gBAAgB,CAACzD,SAAS,EAAEkC,QAAQ,EAAE;UAAEG;QAAQ,CAAC,CAAC;MACxE;MACA,IAAIpC,cAAc,EAAEA,cAAc,CAAC,CAAC;IACtC,CAAC,CAAC,OAAO0C,KAAK,EAAE;MACd;MACAtC,cAAc,CAACyD,aAAa,CAAC;MAC7B,MAAMlB,SAAS,GAAG9E,cAAc,CAAC6E,KAAK,CAAC;MACvCnF,KAAK,CAACmF,KAAK,CAAC,gBAAgBC,SAAS,CAACC,OAAO,EAAE,CAAC;IAClD;EACF,CAAC;;EAED;EACA,MAAMoB,gBAAgB,GAAG,MAAO/B,QAAQ,IAAK;IAC3C,MAAMJ,IAAI,GAAG1B,WAAW,CAACyB,IAAI,CAAEmC,CAAC,IAAK,CAACA,CAAC,CAAC9B,QAAQ,IAAI8B,CAAC,CAACxF,EAAE,MAAM0D,QAAQ,CAAC;IAEvE,IAAIJ,IAAI,IAAIA,IAAI,CAACS,UAAU,EAAE;MAC3B,IAAI,CAAC2B,MAAM,CAACC,OAAO,CAAC,0BAA0B,CAAC,EAAE;QAC/C;MACF;MACA;MACA,MAAMxC,QAAQ,GAAGpD,uBAAuB,CAACsD,IAAI,CAACuC,CAAC,IAAIA,CAAC,CAAC5F,EAAE,KAAKsD,IAAI,CAACC,QAAQ,CAAC;MAC1E,IAAIJ,QAAQ,EAAE;QACZ,MAAMoC,YAAY,GAAG3D,WAAW,CAACsB,GAAG,CAACsC,CAAC,IACpC,CAACA,CAAC,CAAC9B,QAAQ,IAAI8B,CAAC,CAACxF,EAAE,MAAM0D,QAAQ,GAC7B;UAAE,GAAG8B,CAAC;UAAE/B,WAAW,EAAEN,QAAQ,CAAC7C;QAAe,CAAC,GAC9CkF,CACN,CAAC;QACD3D,cAAc,CAAC0D,YAAY,CAAC;QAC5BvG,KAAK,CAACkG,OAAO,CAAC,uBAAuB,CAAC;MACxC;MACA;IACF;IAEA,IAAI,CAACQ,MAAM,CAACC,OAAO,CAAC,0BAA0B,CAAC,EAAE;MAC/C;IACF;IAEA,IAAI;MACF,MAAMtG,aAAa,CAACwG,gBAAgB,CAACrE,SAAS,EAAEkC,QAAQ,CAAC;MACzD,MAAMlB,eAAe,CAAC,CAAC;MACvBxD,KAAK,CAACkG,OAAO,CAAC,mBAAmB,CAAC;MAClC,IAAIzD,cAAc,EAAEA,cAAc,CAAC,CAAC;IACtC,CAAC,CAAC,OAAO0C,KAAK,EAAE;MACd,MAAMC,SAAS,GAAG9E,cAAc,CAAC6E,KAAK,CAAC;MACvCnF,KAAK,CAACmF,KAAK,CAAC,aAAaC,SAAS,CAACC,OAAO,EAAE,CAAC;IAC/C;EACF,CAAC;;EAED;EACA,MAAMyB,cAAc,GAAIxC,IAAI,IAAK;IAC/BnB,cAAc,CAACmB,IAAI,CAAC;IACpBrB,WAAW,CAAC,IAAI,CAAC;EACnB,CAAC;;EAED;EACA,MAAM8D,gBAAgB,GAAGA,CAAA,KAAM;IAC7B9D,WAAW,CAAC,KAAK,CAAC;IAClBE,cAAc,CAAC,IAAI,CAAC;EACtB,CAAC;;EAED;EACA,MAAM6D,eAAe,GAAIC,MAAM,IAAK;IAClC,IAAIP,MAAM,CAACC,OAAO,CAAC,mBAAmB,CAAC,EAAE;MACvC,MAAMpB,aAAa,GAAGC,IAAI,CAACC,KAAK,CAACC,YAAY,CAACC,OAAO,CAAC,YAAY,CAAC,IAAI,IAAI,CAAC;MAC5E,MAAMuB,YAAY,GAAG3B,aAAa,CAACK,MAAM,CAACC,IAAI,IAAIA,IAAI,CAAC7E,EAAE,KAAKiG,MAAM,CAAC;MACrEvB,YAAY,CAACyB,OAAO,CAAC,YAAY,EAAE3B,IAAI,CAAC4B,SAAS,CAACF,YAAY,CAAC,CAAC;MAChE7D,aAAa,CAAC6D,YAAY,CAACtB,MAAM,CAACC,IAAI,IAAIA,IAAI,CAACrD,SAAS,KAAKA,SAAS,CAAC,CAAC;IAC1E;EACF,CAAC;;EAED;EACA,MAAM6E,eAAe,GAAGzD,KAAK,CAACC,OAAO,CAACjB,WAAW,CAAC,GAAGA,WAAW,GAAG,EAAE;EAErE,oBACEhC,OAAA;IAAKmB,SAAS,EAAC,0BAA0B;IAAAC,QAAA,gBAEvCpB,OAAA;MAAKmB,SAAS,EAAC,qCAAqC;MAAAC,QAAA,gBAElDpB,OAAA;QAAKmB,SAAS,EAAC,uCAAuC;QAAAC,QAAA,eACpDpB,OAAA;UAAQmB,SAAS,EAAC,mIAAmI;UAAAC,QAAA,eACnJpB,OAAA,CAACV,SAAS;YAAC6B,SAAS,EAAC;UAAS;YAAAG,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC3B;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACN,CAAC,eAENzB,OAAA;QAAKmB,SAAS,EAAC,mEAAmE;QAAAC,QAAA,eAChFpB,OAAA,CAACL,aAAa;UACZiC,SAAS,EAAEA,SAAU;UACrBE,WAAW,EAAEA,WAAY;UACzBE,WAAW,EAAEyE;QAAgB;UAAAnF,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC9B;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACC,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC,eAGNzB,OAAA;MAAKmB,SAAS,EAAC,iDAAiD;MAAAC,QAAA,eAC9DpB,OAAA;QAAKmB,SAAS,EAAC,iFAAiF;QAAAC,QAAA,gBAE9FpB,OAAA;UAAKmB,SAAS,EAAC,4CAA4C;UAAAC,QAAA,gBACzDpB,OAAA;YAAKmB,SAAS,EAAC,wCAAwC;YAAAC,QAAA,gBACrDpB,OAAA;cAAKmB,SAAS,EAAC,yBAAyB;cAAAC,QAAA,gBACtCpB,OAAA;gBACE0G,OAAO,EAAEA,CAAA,KAAM/D,iBAAiB,CAAC,KAAK,CAAE;gBACxCxB,SAAS,EAAE,yCACT,CAACuB,cAAc,GAAG,0CAA0C,GAAG,mCAAmC,EACjG;gBAAAtB,QAAA,EACJ;cAED;gBAAAE,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAQ,CAAC,eACTzB,OAAA;gBACE0G,OAAO,EAAEA,CAAA,KAAM/D,iBAAiB,CAAC,IAAI,CAAE;gBACvCxB,SAAS,EAAE,iEACTuB,cAAc,GAAG,0CAA0C,GAAG,mCAAmC,EAChG;gBAAAtB,QAAA,gBAEHpB,OAAA,CAACT,uBAAuB;kBAAC4B,SAAS,EAAC;gBAAS;kBAAAG,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAE,CAAC,6BAEjD;cAAA;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAQ,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACN,CAAC,EACL,CAACiB,cAAc,iBACd1C,OAAA;cAAKmB,SAAS,EAAC,0DAA0D;cAAAC,QAAA,GACtEqF,eAAe,CAACzB,MAAM,CAAEtB,IAAI,IAAKA,IAAI,CAACO,OAAO,CAAC,CAAC0C,MAAM,EAAC,GAAC,EAACF,eAAe,CAACE,MAAM;YAAA;cAAArF,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAC5E,CACN;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACE,CAAC,eACNzB,OAAA;YAAGmB,SAAS,EAAC,uBAAuB;YAAAC,QAAA,EACjCsB,cAAc,GAAG,kBAAkB,GAAG;UAAsB;YAAApB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAC5D,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACD,CAAC,eAGNzB,OAAA;UAAKmB,SAAS,EAAC,4BAA4B;UAAAC,QAAA,EACxC,CAACsB,cAAc;UACd;UACAR,OAAO,gBACLlC,OAAA,CAACF,eAAe;YAAAwB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE,CAAC,gBAEnBzB,OAAA;YAAKmB,SAAS,EAAC,WAAW;YAAAC,QAAA,EACvBqF,eAAe,CAACnD,GAAG,CAAC,CAACI,IAAI,EAAEkD,KAAK,kBAC/B5G,OAAA,CAACJ,UAAU;cAET8D,IAAI,EAAEA,IAAK;cACXmD,MAAM,EAAEX,cAAe;cACvBY,QAAQ,EAAErB,gBAAiB;cAC3BsB,QAAQ,EAAElB,gBAAiB;cAC3BmB,UAAU,EAAEJ,KAAK,GAAG,CAAE;cACtBK,gBAAgB,EAAEvD,IAAI,CAACS,UAAU,GAAG,KAAK,GAAG,KAAM;cAClDvC,SAAS,EAAEA,SAAU;cACrBsF,gBAAgB,EAAE;YAAK,GARlBxD,IAAI,CAACI,QAAQ,IAAIJ,IAAI,CAACtD,EAAE,IAAIwG,KAAK;cAAAtF,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OASvC,CACF;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACC,CACN;UAAA;UAED;UACAzB,OAAA;YAAKmB,SAAS,EAAC,WAAW;YAAAC,QAAA,EACvBoB,UAAU,CAACmE,MAAM,KAAK,CAAC,gBACtB3G,OAAA;cAAKmB,SAAS,EAAC,kBAAkB;cAAAC,QAAA,gBAC/BpB,OAAA,CAACT,uBAAuB;gBAAC4B,SAAS,EAAC;cAAsC;gBAAAG,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAE,CAAC,eAC5EzB,OAAA;gBAAGmB,SAAS,EAAC,uBAAuB;gBAAAC,QAAA,EAAC;cAAY;gBAAAE,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAG,CAAC,eACrDzB,OAAA;gBAAGmB,SAAS,EAAC,4BAA4B;gBAAAC,QAAA,EAAC;cAAoB;gBAAAE,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAG,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAC/D,CAAC,GAENe,UAAU,CAACc,GAAG,CAAE2B,IAAI,iBAClBjF,OAAA;cAEEmB,SAAS,EAAC,wFAAwF;cAAAC,QAAA,eAElGpB,OAAA;gBAAKmB,SAAS,EAAC,kCAAkC;gBAAAC,QAAA,gBAC/CpB,OAAA;kBAAKmB,SAAS,EAAC,gBAAgB;kBAAAC,QAAA,gBAC7BpB,OAAA;oBAAImB,SAAS,EAAC,4CAA4C;oBAAAC,QAAA,EACvD6D,IAAI,CAACrB;kBAAK;oBAAAtC,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OACT,CAAC,eACLzB,OAAA;oBAAGmB,SAAS,EAAC,4BAA4B;oBAAAC,QAAA,EACtC,IAAI+F,IAAI,CAAClC,IAAI,CAACmC,SAAS,CAAC,CAACC,cAAc,CAAC;kBAAC;oBAAA/F,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OACzC,CAAC,eACJzB,OAAA;oBAAGmB,SAAS,EAAC,4BAA4B;oBAAAC,QAAA,GACtC6D,IAAI,CAACqC,QAAQ,CAACX,MAAM,EAAC,2BACxB;kBAAA;oBAAArF,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAAG,CAAC;gBAAA;kBAAAH,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OACD,CAAC,eACNzB,OAAA;kBACE0G,OAAO,EAAEA,CAAA,KAAMN,eAAe,CAACnB,IAAI,CAAC7E,EAAE,CAAE;kBACxCe,SAAS,EAAC,wDAAwD;kBAClEyC,KAAK,EAAC,cAAI;kBAAAxC,QAAA,eAEVpB,OAAA,CAACR,SAAS;oBAAC2B,SAAS,EAAC;kBAAS;oBAAAG,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAAE;gBAAC;kBAAAH,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAC3B,CAAC;cAAA;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACN;YAAC,GAtBDwD,IAAI,CAAC7E,EAAE;cAAAkB,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAuBT,CACN;UACF;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACE;QACN;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACE,CAAC,eAGNzB,OAAA;UAAKmB,SAAS,EAAC,uDAAuD;UAAAC,QAAA,eACpEpB,OAAA;YAAKmB,SAAS,EAAC,uBAAuB;YAAAC,QAAA,EACnC,CAACsB,cAAc,gBACd1C,OAAA,CAAAE,SAAA;cAAAkB,QAAA,gBACEpB,OAAA;gBAAGmB,SAAS,EAAC,kBAAkB;gBAAAC,QAAA,EAAC;cAAU;gBAAAE,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAG,CAAC,eAC9CzB,OAAA;gBAAAoB,QAAA,EAAG;cAAoB;gBAAAE,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAG,CAAC;YAAA,eAC3B,CAAC,gBAEHzB,OAAA,CAAAE,SAAA;cAAAkB,QAAA,gBACEpB,OAAA;gBAAGmB,SAAS,EAAC,kBAAkB;gBAAAC,QAAA,EAAC;cAAQ;gBAAAE,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAG,CAAC,eAC5CzB,OAAA;gBAAAoB,QAAA,EAAG;cAAkB;gBAAAE,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAG,CAAC;YAAA,eACzB;UACH;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACE;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACH,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC,eAGNzB,OAAA,CAACc,eAAe;MACdC,MAAM,EAAEqB,QAAS;MACjBpB,QAAQ,EAAEkE,gBAAiB;MAC3BjE,QAAQ,EAAEkF,gBAAiB;MAC3BjF,WAAW,EAAEoB;IAAY;MAAAhB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC1B,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV,CAAC;AAACM,EAAA,CArYIJ,iBAAiB;AAAA4F,GAAA,GAAjB5F,iBAAiB;AAuYvB,eAAeA,iBAAiB;AAAC,IAAAD,EAAA,EAAA6F,GAAA;AAAAC,YAAA,CAAA9F,EAAA;AAAA8F,YAAA,CAAAD,GAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}