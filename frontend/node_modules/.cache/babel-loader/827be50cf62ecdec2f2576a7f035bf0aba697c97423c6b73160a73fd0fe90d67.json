{"ast":null,"code":"import axios from\"axios\";// API 기본 설정\nconst API_BASE_URL=process.env.REACT_APP_API_URL||\"https://vph0fu827a.execute-api.us-east-1.amazonaws.com/prod\";// 개발 모드 플래그 (백엔드 연결 문제로 개발 모드로 강제 설정)\nconst DEV_MODE=process.env.NODE_ENV==='development'||true;// Axios 인스턴스\nconst api=axios.create({baseURL:API_BASE_URL,headers:{\"Content-Type\":\"application/json\"},timeout:3000// 3초 타임아웃으로 빠른 실패 유도\n});// 요청 인터셉터\napi.interceptors.request.use(config=>{var _config$method;console.log(\"API 요청:\",(_config$method=config.method)===null||_config$method===void 0?void 0:_config$method.toUpperCase(),config.url);return config;});// 응답 인터셉터\napi.interceptors.response.use(response=>{console.log(\"API 응답:\",response.status,response.config.url);return response;},error=>{var _error$response;console.error(\"API 오류:\",(_error$response=error.response)===null||_error$response===void 0?void 0:_error$response.status,error.message);return Promise.reject(error);});// =============================================================================\n// 1. 프로젝트 API\n// =============================================================================\n// 개발 모드용 더미 데이터\nconst DUMMY_PROJECTS=[{projectId:\"proj_001\",name:\"경제 뉴스 제목 생성\",description:\"경제 관련 뉴스 기사의 제목을 생성하는 프로젝트\",category:\"economy\",createdAt:\"2024-07-10T10:00:00Z\",updatedAt:\"2024-07-14T15:30:00Z\",tags:[\"경제\",\"뉴스\",\"제목생성\"],title:\"경제 뉴스 제목 생성\"// ProjectDetail에서 사용\n},{projectId:\"proj_002\",name:\"기술 뉴스 제목 최적화\",description:\"IT 및 기술 관련 뉴스의 SEO 최적화된 제목 생성\",category:\"tech\",createdAt:\"2024-07-08T14:20:00Z\",updatedAt:\"2024-07-12T09:15:00Z\",tags:[\"기술\",\"IT\",\"SEO\"],title:\"기술 뉴스 제목 최적화\"},{projectId:\"proj_003\",name:\"스포츠 뉴스 제목\",description:\"스포츠 관련 뉴스 제목 생성 및 최적화\",category:\"sports\",createdAt:\"2024-07-05T11:45:00Z\",updatedAt:\"2024-07-13T16:20:00Z\",tags:[\"스포츠\",\"뉴스\"],title:\"스포츠 뉴스 제목\"}];export const projectAPI={getProjects:async()=>{console.log(\"🔍 프로젝트 목록 조회 (개발 모드)\");// 개발 모드에서는 바로 더미 데이터 반환\nif(DEV_MODE){console.log(\"🚀 개발 모드: 더미 데이터 즉시 반환\");return{projects:DUMMY_PROJECTS,count:DUMMY_PROJECTS.length};}// 실제 API 호출 시도 후 실패하면 더미 데이터 반환\ntry{const response=await api.get(\"/projects\");return response.data;}catch(error){console.log(\"⚠️ API 실패, 더미 데이터 사용\");return{projects:DUMMY_PROJECTS,count:DUMMY_PROJECTS.length};}},getProject:async projectId=>{console.log(\"🔍 프로젝트 상세 조회 (개발 모드):\",projectId);// 개발 모드에서는 바로 더미 데이터 반환\nif(DEV_MODE){console.log(\"🚀 개발 모드: 더미 데이터 즉시 반환\");// 먼저 더미 데이터에서 찾아보기\nlet project=DUMMY_PROJECTS.find(p=>p.projectId===projectId);// 없으면 동적으로 생성 (실제 프로젝트 ID 사용)\nif(!project){console.log(\"🆕 동적 프로젝트 생성:\",projectId);project={projectId:projectId,name:\"새 프로젝트\",description:\"동적으로 생성된 프로젝트입니다.\",category:\"news\",createdAt:new Date().toISOString(),updatedAt:new Date().toISOString(),tags:[\"자동생성\"],title:\"새 프로젝트\"};// 더미 데이터에 추가\nDUMMY_PROJECTS.push(project);}return project;}try{const response=await api.get(`/projects/${projectId}`);return response.data;}catch(error){console.log(\"⚠️ API 실패, 더미 데이터 사용\");// 먼저 더미 데이터에서 찾아보기\nlet project=DUMMY_PROJECTS.find(p=>p.projectId===projectId);// 없으면 동적으로 생성 (실제 프로젝트 ID 사용)\nif(!project){console.log(\"🆕 동적 프로젝트 생성:\",projectId);project={projectId:projectId,name:\"새 프로젝트\",description:\"동적으로 생성된 프로젝트입니다.\",category:\"news\",createdAt:new Date().toISOString(),updatedAt:new Date().toISOString(),tags:[\"자동생성\"],title:\"새 프로젝트\"};// 더미 데이터에 추가\nDUMMY_PROJECTS.push(project);}return project;}},createProject:async projectData=>{console.log(\"🆕 프로젝트 생성 (개발 모드):\",projectData);try{const response=await api.post(\"/projects\",projectData);return response.data;}catch(error){console.log(\"⚠️ API 실패, 더미 응답 사용\");const newProject={projectId:`proj_${Date.now()}`,...projectData,createdAt:new Date().toISOString(),updatedAt:new Date().toISOString(),title:projectData.name// ProjectDetail 호환성\n};DUMMY_PROJECTS.push(newProject);return newProject;}},updateProject:async(projectId,projectData)=>{console.log(\"✏️ 프로젝트 수정 (개발 모드):\",projectId,projectData);try{const response=await api.put(`/projects/${projectId}`,projectData);return response.data;}catch(error){console.log(\"⚠️ API 실패, 더미 응답 사용\");const index=DUMMY_PROJECTS.findIndex(p=>p.projectId===projectId);if(index!==-1){DUMMY_PROJECTS[index]={...DUMMY_PROJECTS[index],...projectData,updatedAt:new Date().toISOString()};return DUMMY_PROJECTS[index];}throw new Error(\"프로젝트를 찾을 수 없습니다\");}},deleteProject:async projectId=>{console.log(\"🗑️ 프로젝트 삭제 (개발 모드):\",projectId);try{const response=await api.delete(`/projects/${projectId}`);return response.data;}catch(error){console.log(\"⚠️ API 실패, 더미 응답 사용\");const index=DUMMY_PROJECTS.findIndex(p=>p.projectId===projectId);if(index!==-1){DUMMY_PROJECTS.splice(index,1);return{success:true};}throw new Error(\"프로젝트를 찾을 수 없습니다\");}}};// =============================================================================\n// 2. 프롬프트 API (S3/DynamoDB 연동)\n// =============================================================================\n// 더미 프롬프트 카드 데이터\nconst DUMMY_PROMPT_CARDS={\"proj_001\":[{promptId:\"prompt_001\",projectId:\"proj_001\",title:\"기본 제목 생성 가이드라인\",category:\"workflow\",stepOrder:1,content:`당신은 경제 뉴스 전문 기자입니다. 다음 가이드라인에 따라 제목을 생성해주세요:\n\n1. 핵심 내용을 15-25자로 요약\n2. 독자의 관심을 끄는 키워드 포함\n3. 정확하고 객관적인 표현 사용\n4. SEO 최적화 키워드 포함`,createdAt:\"2024-07-10T10:30:00Z\",updatedAt:\"2024-07-14T09:15:00Z\"},{promptId:\"prompt_002\",projectId:\"proj_001\",title:\"경제 용어 스타일 가이드\",category:\"stylebook_guidelines\",stepOrder:2,content:`경제 뉴스 제목 작성 시 다음 스타일을 준수하세요:\n\n- 금융 용어는 일반인이 이해하기 쉽게 표현\n- 수치는 구체적으로 명시 (예: \"크게 상승\" → \"10% 상승\")\n- 부정적 표현보다는 중립적 표현 선호\n- 전문 용어 사용 시 괄호로 설명 추가`,createdAt:\"2024-07-10T11:00:00Z\",updatedAt:\"2024-07-12T14:20:00Z\"}],\"proj_002\":[{promptId:\"prompt_003\",projectId:\"proj_002\",title:\"기술 뉴스 SEO 최적화\",category:\"seo_optimization\",stepOrder:1,content:`기술 뉴스 제목의 SEO 최적화 방법:\n\n1. 주요 기술 키워드를 제목 앞부분에 배치\n2. 트렌딩 기술 용어 활용 (AI, 메타버스, 블록체인 등)\n3. 검색량이 높은 브랜드명 포함\n4. 숫자나 년도를 활용하여 시의성 강조`,createdAt:\"2024-07-08T15:00:00Z\",updatedAt:\"2024-07-13T10:30:00Z\"}],\"proj_003\":[{promptId:\"prompt_004\",projectId:\"proj_003\",title:\"스포츠 뉴스 제목 스타일\",category:\"title_type_guidelines\",stepOrder:1,content:`스포츠 뉴스 제목 작성 가이드라인:\n\n1. 선수명이나 팀명을 명확히 표기\n2. 경기 결과는 구체적 스코어 포함\n3. 감정적 표현보다는 사실 중심\n4. 스포츠별 전문 용어 적절히 활용\n5. 실시간성을 나타내는 표현 사용`,createdAt:\"2024-07-05T12:15:00Z\",updatedAt:\"2024-07-13T16:45:00Z\"}]};export const promptCardAPI={// 프롬프트 카드 목록 조회\ngetPromptCards:async function(projectId){let includeContent=arguments.length>1&&arguments[1]!==undefined?arguments[1]:false;console.log(\"🔍 프롬프트 조회 (개발 모드):\",projectId);// 개발 모드에서는 바로 더미 데이터 반환\nif(DEV_MODE){console.log(\"🚀 개발 모드: 더미 프롬프트 데이터 즉시 반환\");let cards=DUMMY_PROMPT_CARDS[projectId];// 해당 프로젝트의 프롬프트가 없으면 기본 프롬프트 생성\nif(!cards){console.log(\"🆕 동적 프롬프트 카드 생성:\",projectId);cards=[{promptId:`prompt_${projectId}_001`,projectId:projectId,title:\"기본 제목 생성 가이드라인\",category:\"workflow\",stepOrder:1,content:`뉴스 제목 생성을 위한 기본 가이드라인:\n\n1. 핵심 내용을 15-25자로 요약\n2. 독자의 관심을 끄는 키워드 포함\n3. 정확하고 객관적인 표현 사용\n4. SEO 최적화 키워드 포함\n5. 감정적 표현보다는 사실 중심으로 작성`,createdAt:new Date().toISOString(),updatedAt:new Date().toISOString()},{promptId:`prompt_${projectId}_002`,projectId:projectId,title:\"스타일 가이드\",category:\"stylebook_guidelines\",stepOrder:2,content:`제목 작성 스타일 가이드:\n\n- 전문 용어는 일반인이 이해하기 쉽게 표현\n- 수치는 구체적으로 명시\n- 중립적이고 객관적인 표현 사용\n- 필요시 괄호로 부연 설명 추가\n- 시의성을 나타내는 표현 활용`,createdAt:new Date().toISOString(),updatedAt:new Date().toISOString()}];DUMMY_PROMPT_CARDS[projectId]=cards;}return{promptCards:cards,count:cards.length,projectId:projectId};}try{const params=includeContent?{include_content:\"true\"}:{};const response=await api.get(`/prompts/${projectId}`,{params});console.log(\"✅ 프롬프트 조회 성공:\",response.data.count,\"개\");return response.data;}catch(error){console.log(\"⚠️ API 실패, 더미 데이터 사용\");let cards=DUMMY_PROMPT_CARDS[projectId];// 해당 프로젝트의 프롬프트가 없으면 기본 프롬프트 생성\nif(!cards){console.log(\"🆕 동적 프롬프트 카드 생성:\",projectId);cards=[{promptId:`prompt_${projectId}_001`,projectId:projectId,title:\"기본 제목 생성 가이드라인\",category:\"workflow\",stepOrder:1,content:`뉴스 제목 생성을 위한 기본 가이드라인:\n\n1. 핵심 내용을 15-25자로 요약\n2. 독자의 관심을 끄는 키워드 포함\n3. 정확하고 객관적인 표현 사용\n4. SEO 최적화 키워드 포함\n5. 감정적 표현보다는 사실 중심으로 작성`,createdAt:new Date().toISOString(),updatedAt:new Date().toISOString()},{promptId:`prompt_${projectId}_002`,projectId:projectId,title:\"스타일 가이드\",category:\"stylebook_guidelines\",stepOrder:2,content:`제목 작성 스타일 가이드:\n\n- 전문 용어는 일반인이 이해하기 쉽게 표현\n- 수치는 구체적으로 명시\n- 중립적이고 객관적인 표현 사용\n- 필요시 괄호로 부연 설명 추가\n- 시의성을 나타내는 표현 활용`,createdAt:new Date().toISOString(),updatedAt:new Date().toISOString()}];DUMMY_PROMPT_CARDS[projectId]=cards;}return{promptCards:cards,count:cards.length,projectId:projectId};}},// 프롬프트 카드 생성\ncreatePromptCard:async(projectId,promptData)=>{console.log(\"🆕 프롬프트 생성 (개발 모드):\",{projectId,promptData});try{const response=await api.post(`/prompts/${projectId}`,promptData);return response.data;}catch(error){console.log(\"⚠️ API 실패, 더미 응답 사용\");const newCard={promptId:`prompt_${Date.now()}`,projectId,...promptData,createdAt:new Date().toISOString(),updatedAt:new Date().toISOString()};if(!DUMMY_PROMPT_CARDS[projectId]){DUMMY_PROMPT_CARDS[projectId]=[];}DUMMY_PROMPT_CARDS[projectId].push(newCard);return newCard;}},// 프롬프트 카드 수정 - S3/DynamoDB 저장\nupdatePromptCard:async(projectId,promptId,promptData)=>{console.log(\"💾 프롬프트 수정 (개발 모드):\",{projectId,promptId});try{const response=await api.put(`/prompts/${projectId}/${promptId}`,promptData);return response.data;}catch(error){console.log(\"⚠️ API 실패, 더미 응답 사용\");const cards=DUMMY_PROMPT_CARDS[projectId]||[];const index=cards.findIndex(card=>card.promptId===promptId);if(index!==-1){DUMMY_PROMPT_CARDS[projectId][index]={...DUMMY_PROMPT_CARDS[projectId][index],...promptData,updatedAt:new Date().toISOString()};return DUMMY_PROMPT_CARDS[projectId][index];}throw new Error(\"프롬프트를 찾을 수 없습니다\");}},// 프롬프트 카드 삭제\ndeletePromptCard:async(projectId,promptId)=>{console.log(\"🗑️ 프롬프트 삭제 (개발 모드):\",{projectId,promptId});try{const response=await api.delete(`/prompts/${projectId}/${promptId}`);return response.data;}catch(error){console.log(\"⚠️ API 실패, 더미 응답 사용\");const cards=DUMMY_PROMPT_CARDS[projectId]||[];const index=cards.findIndex(card=>card.promptId===promptId);if(index!==-1){DUMMY_PROMPT_CARDS[projectId].splice(index,1);return{success:true};}throw new Error(\"프롬프트를 찾을 수 없습니다\");}}};// =============================================================================\n// 3. 제목 생성 API (Bedrock Claude 호출)\n// =============================================================================\nexport const generateAPI={// 실제 Bedrock Claude 호출\ngenerateTitle:async function(projectId,articleContent){let userRequest=arguments.length>2&&arguments[2]!==undefined?arguments[2]:\"\";console.log(\"🚀 제목 생성 시작 (개발 모드):\",{projectId,articleLength:articleContent.length,userRequest});try{const response=await api.post(`/projects/${projectId}/generate`,{article:articleContent,userRequest});console.log(\"✅ 제목 생성 완료\");return response.data;}catch(error){console.log(\"⚠️ API 실패, 더미 제목 생성 사용\");// 더미 제목 생성 결과\nconst dummyTitles=[{type:\"저널리즘 충실형\",title:\"경제성장률 3.2% 기록, 전년 동기 대비 0.5%p 상승\",quality:{clarity:\"상\",readability:\"상\",clickworthiness:\"중\",factuality:\"상\",style_compliance:\"상\"},reasoning:\"객관적 수치를 중심으로 정확한 정보 전달에 중점을 둔 제목\"},{type:\"균형잡힌 후킹형\",title:\"한국 경제 훨훨, 3.2% 성장으로 예상치 뛰어넘어\",quality:{clarity:\"상\",readability:\"상\",clickworthiness:\"상\",factuality:\"상\",style_compliance:\"중\"},reasoning:\"독자의 관심을 끌면서도 정확한 정보를 포함한 균형 잡힌 제목\"},{type:\"클릭유도형\",title:\"믿기지 않는 성장률! 한국 경제가 보여준 놀라운 반전\",quality:{clarity:\"중\",readability:\"상\",clickworthiness:\"상\",factuality:\"중\",style_compliance:\"하\"},reasoning:\"강한 감정적 어필로 클릭을 유도하는 제목\"},{type:\"SEO/AEO 최적화형\",title:\"한국 경제성장률 3.2% 2024년 3분기 GDP 상승률 분석\",quality:{clarity:\"상\",readability:\"중\",clickworthiness:\"중\",factuality:\"상\",style_compliance:\"상\"},reasoning:\"검색 최적화 키워드를 포함한 SEO 친화적 제목\"},{type:\"소셜미디어 공유형\",title:\"🚀 한국 경제 3.2% 성장 달성! #경제성장 #GDP #한국경제\",quality:{clarity:\"상\",readability:\"상\",clickworthiness:\"상\",factuality:\"상\",style_compliance:\"중\"},reasoning:\"이모지와 해시태그를 활용한 소셜미디어 최적화 제목\"}];return{success:true,titles:dummyTitles,metadata:{projectId,articleLength:articleContent.length,userRequest,processingTime:\"2.3초\",tokensUsed:1250,model:\"claude-3-5-sonnet-20241022-v2:0 (개발 모드)\"},timestamp:new Date().toISOString()};}}};// =============================================================================\n// 4. 유틸리티\n// =============================================================================\nexport const handleAPIError=error=>{if(error.response){const{status,data}=error.response;return{message:(data===null||data===void 0?void 0:data.error)||`서버 오류 (${status})`,status};}else if(error.request){return{message:\"네트워크 연결을 확인해주세요\",status:0};}else{return{message:error.message||\"알 수 없는 오류가 발생했습니다\",status:-1};}};// =============================================================================\n// 5. 인증 API\n// =============================================================================\nexport const authAPI={isAuthenticated:()=>{// 개발 모드: 항상 인증된 상태로 처리\nreturn true;},getCurrentUser:()=>{// 개발 모드: 가짜 사용자 정보 반환\nreturn{id:\"dev-user\",email:\"dev@example.com\",name:\"개발자\"};},signin:async credentials=>{// 개발 모드: 가짜 로그인\nconsole.log(\"🔐 개발 모드 로그인:\",credentials);return{success:true,message:\"로그인 성공 (개발 모드)\"};},signup:async userData=>{// 개발 모드: 가짜 회원가입\nconsole.log(\"📝 개발 모드 회원가입:\",userData);return{success:true,message:\"회원가입 성공 (개발 모드)\"};},signout:async()=>{// 개발 모드: 가짜 로그아웃\nconsole.log(\"👋 개발 모드 로그아웃\");return{success:true};},verifyEmail:async verificationData=>{console.log(\"✉️ 개발 모드 이메일 인증:\",verificationData);return{success:true,message:\"이메일 인증 성공 (개발 모드)\"};},forgotPassword:async email=>{console.log(\"🔄 개발 모드 비밀번호 재설정:\",email);return{success:true,message:\"비밀번호 재설정 이메일 발송 (개발 모드)\"};},confirmPassword:async resetData=>{console.log(\"🔒 개발 모드 비밀번호 확인:\",resetData);return{success:true,message:\"비밀번호 재설정 성공 (개발 모드)\"};}};// =============================================================================\n// 6. 카테고리 API\n// =============================================================================\nexport const DEFAULT_PROJECT_CATEGORIES=[{id:\"news\",name:\"뉴스\",color:\"blue\",description:\"일반 뉴스 기사\"},{id:\"economy\",name:\"경제\",color:\"green\",description:\"경제 관련 기사\"},{id:\"tech\",name:\"기술\",color:\"purple\",description:\"기술 및 IT 기사\"},{id:\"sports\",name:\"스포츠\",color:\"orange\",description:\"스포츠 기사\"},{id:\"culture\",name:\"문화\",color:\"pink\",description:\"문화 및 예술 기사\"}];export const categoryAPI={getUserCategories:async()=>{// 개발 모드: 기본 카테고리 반환\nreturn{categories:DEFAULT_PROJECT_CATEGORIES};},createCategory:async categoryData=>{console.log(\"📁 카테고리 생성:\",categoryData);return{id:`cat_${Date.now()}`,...categoryData,createdAt:new Date().toISOString()};},updateCategory:async(categoryId,categoryData)=>{console.log(\"📝 카테고리 수정:\",categoryId,categoryData);return{success:true};},deleteCategory:async categoryId=>{console.log(\"🗑️ 카테고리 삭제:\",categoryId);return{success:true};}};export const projectCategoryAPI={updateProjectCategory:async(projectId,categoryId)=>{console.log(\"📂 프로젝트 카테고리 변경:\",projectId,categoryId);return{success:true};}};// =============================================================================\n// 7. 오케스트레이션 API\n// =============================================================================\nexport const orchestrationAPI={startExecution:async(projectId,data)=>{console.log(\"🚀 오케스트레이션 시작:\",projectId,data);return{executionArn:`exec_${Date.now()}`,status:\"RUNNING\"};},getExecutionStatus:async executionArn=>{console.log(\"📊 실행 상태 조회:\",executionArn);return{status:\"SUCCEEDED\",result:{message:\"완료됨\"}};}};// =============================================================================\n// 8. 유틸리티 함수들\n// =============================================================================\nexport const getCategoryInfo=function(categoryId){let userCategories=arguments.length>1&&arguments[1]!==undefined?arguments[1]:DEFAULT_PROJECT_CATEGORIES;const category=userCategories.find(cat=>cat.id===categoryId);return category||{id:categoryId,name:\"알 수 없음\",color:\"gray\",description:\"알 수 없는 카테고리\"};};export const getCategoryColorClasses=color=>{const colorMap={blue:\"bg-blue-50 text-blue-700 border-blue-200\",green:\"bg-green-50 text-green-700 border-green-200\",purple:\"bg-purple-50 text-purple-700 border-purple-200\",orange:\"bg-orange-50 text-orange-700 border-orange-200\",pink:\"bg-pink-50 text-pink-700 border-pink-200\",red:\"bg-red-50 text-red-700 border-red-200\",yellow:\"bg-yellow-50 text-yellow-700 border-yellow-200\",indigo:\"bg-indigo-50 text-indigo-700 border-indigo-200\",gray:\"bg-gray-50 text-gray-700 border-gray-200\"};return colorMap[color]||colorMap.gray;};export const filterProjects=(projects,filters)=>{let filtered=[...projects];// 카테고리 필터\nif(filters.category&&filters.category!==\"all\"){filtered=filtered.filter(project=>project.category===filters.category);}// 검색 필터\nif(filters.searchQuery){const query=filters.searchQuery.toLowerCase();filtered=filtered.filter(project=>project.name.toLowerCase().includes(query)||project.description&&project.description.toLowerCase().includes(query)||project.tags&&project.tags.some(tag=>tag.toLowerCase().includes(query)));}// 정렬\nfiltered.sort((a,b)=>{switch(filters.sortBy){case\"name\":return a.name.localeCompare(b.name,\"ko\");case\"updated\":return new Date(b.updatedAt||b.createdAt)-new Date(a.updatedAt||a.createdAt);case\"created\":default:return new Date(b.createdAt)-new Date(a.createdAt);}});return filtered;};export const formatTokenCount=count=>{if(!count||count===0)return\"0\";if(count<1000)return count.toString();if(count<1000000)return`${(count/1000).toFixed(1)}K`;return`${(count/1000000).toFixed(1)}M`;};export const formatFileSize=bytes=>{if(!bytes||bytes===0)return\"0 B\";const sizes=[\"B\",\"KB\",\"MB\",\"GB\"];const i=Math.floor(Math.log(bytes)/Math.log(1024));return`${(bytes/Math.pow(1024,i)).toFixed(1)} ${sizes[i]}`;};export const calculatePromptStats=promptCards=>{if(!promptCards||promptCards.length===0){return{totalCards:0,totalTokens:0,totalSize:0,categories:{}};}const stats={totalCards:promptCards.length,totalTokens:0,totalSize:0,categories:{}};promptCards.forEach(card=>{// 토큰 수 계산 (대략적으로 글자 수 / 4)\nconst contentLength=(card.content||\"\").length;const estimatedTokens=Math.ceil(contentLength/4);stats.totalTokens+=estimatedTokens;// 파일 크기 계산 (UTF-8 기준)\nstats.totalSize+=new Blob([card.content||\"\"]).size;// 카테고리별 통계\nconst category=card.category||\"uncategorized\";if(!stats.categories[category]){stats.categories[category]={count:0,tokens:0,size:0};}stats.categories[category].count++;stats.categories[category].tokens+=estimatedTokens;stats.categories[category].size+=new Blob([card.content||\"\"]).size;});return stats;};// 색상 옵션\nexport const COLOR_OPTIONS=[{id:\"blue\",name:\"파란색\",class:\"bg-blue-500\"},{id:\"green\",name:\"초록색\",class:\"bg-green-500\"},{id:\"purple\",name:\"보라색\",class:\"bg-purple-500\"},{id:\"orange\",name:\"주황색\",class:\"bg-orange-500\"},{id:\"pink\",name:\"분홍색\",class:\"bg-pink-500\"},{id:\"red\",name:\"빨간색\",class:\"bg-red-500\"},{id:\"yellow\",name:\"노란색\",class:\"bg-yellow-500\"},{id:\"indigo\",name:\"남색\",class:\"bg-indigo-500\"},{id:\"gray\",name:\"회색\",class:\"bg-gray-500\"}];export default api;","map":{"version":3,"names":["axios","API_BASE_URL","process","env","REACT_APP_API_URL","DEV_MODE","NODE_ENV","api","create","baseURL","headers","timeout","interceptors","request","use","config","_config$method","console","log","method","toUpperCase","url","response","status","error","_error$response","message","Promise","reject","DUMMY_PROJECTS","projectId","name","description","category","createdAt","updatedAt","tags","title","projectAPI","getProjects","projects","count","length","get","data","getProject","project","find","p","Date","toISOString","push","createProject","projectData","post","newProject","now","updateProject","put","index","findIndex","Error","deleteProject","delete","splice","success","DUMMY_PROMPT_CARDS","promptId","stepOrder","content","promptCardAPI","getPromptCards","includeContent","arguments","undefined","cards","promptCards","params","include_content","createPromptCard","promptData","newCard","updatePromptCard","card","deletePromptCard","generateAPI","generateTitle","articleContent","userRequest","articleLength","article","dummyTitles","type","quality","clarity","readability","clickworthiness","factuality","style_compliance","reasoning","titles","metadata","processingTime","tokensUsed","model","timestamp","handleAPIError","authAPI","isAuthenticated","getCurrentUser","id","email","signin","credentials","signup","userData","signout","verifyEmail","verificationData","forgotPassword","confirmPassword","resetData","DEFAULT_PROJECT_CATEGORIES","color","categoryAPI","getUserCategories","categories","createCategory","categoryData","updateCategory","categoryId","deleteCategory","projectCategoryAPI","updateProjectCategory","orchestrationAPI","startExecution","executionArn","getExecutionStatus","result","getCategoryInfo","userCategories","cat","getCategoryColorClasses","colorMap","blue","green","purple","orange","pink","red","yellow","indigo","gray","filterProjects","filters","filtered","filter","searchQuery","query","toLowerCase","includes","some","tag","sort","a","b","sortBy","localeCompare","formatTokenCount","toString","toFixed","formatFileSize","bytes","sizes","i","Math","floor","pow","calculatePromptStats","totalCards","totalTokens","totalSize","stats","forEach","contentLength","estimatedTokens","ceil","Blob","size","tokens","COLOR_OPTIONS","class"],"sources":["/Users/yeong-gwang/Documents/work/서울경제신문/ai_제목달기/frontend/src/services/api.js"],"sourcesContent":["import axios from \"axios\";\n\n// API 기본 설정\nconst API_BASE_URL =\n  process.env.REACT_APP_API_URL ||\n  \"https://vph0fu827a.execute-api.us-east-1.amazonaws.com/prod\";\n\n// 개발 모드 플래그 (백엔드 연결 문제로 개발 모드로 강제 설정)\nconst DEV_MODE = process.env.NODE_ENV === 'development' || true;\n\n// Axios 인스턴스\nconst api = axios.create({\n  baseURL: API_BASE_URL,\n  headers: { \"Content-Type\": \"application/json\" },\n  timeout: 3000, // 3초 타임아웃으로 빠른 실패 유도\n});\n\n// 요청 인터셉터\napi.interceptors.request.use((config) => {\n  console.log(\"API 요청:\", config.method?.toUpperCase(), config.url);\n  return config;\n});\n\n// 응답 인터셉터\napi.interceptors.response.use(\n  (response) => {\n    console.log(\"API 응답:\", response.status, response.config.url);\n    return response;\n  },\n  (error) => {\n    console.error(\"API 오류:\", error.response?.status, error.message);\n    return Promise.reject(error);\n  }\n);\n\n// =============================================================================\n// 1. 프로젝트 API\n// =============================================================================\n\n// 개발 모드용 더미 데이터\nconst DUMMY_PROJECTS = [\n  {\n    projectId: \"proj_001\",\n    name: \"경제 뉴스 제목 생성\",\n    description: \"경제 관련 뉴스 기사의 제목을 생성하는 프로젝트\",\n    category: \"economy\",\n    createdAt: \"2024-07-10T10:00:00Z\",\n    updatedAt: \"2024-07-14T15:30:00Z\",\n    tags: [\"경제\", \"뉴스\", \"제목생성\"],\n    title: \"경제 뉴스 제목 생성\" // ProjectDetail에서 사용\n  },\n  {\n    projectId: \"proj_002\", \n    name: \"기술 뉴스 제목 최적화\",\n    description: \"IT 및 기술 관련 뉴스의 SEO 최적화된 제목 생성\",\n    category: \"tech\",\n    createdAt: \"2024-07-08T14:20:00Z\",\n    updatedAt: \"2024-07-12T09:15:00Z\",\n    tags: [\"기술\", \"IT\", \"SEO\"],\n    title: \"기술 뉴스 제목 최적화\"\n  },\n  {\n    projectId: \"proj_003\",\n    name: \"스포츠 뉴스 제목\",\n    description: \"스포츠 관련 뉴스 제목 생성 및 최적화\",\n    category: \"sports\", \n    createdAt: \"2024-07-05T11:45:00Z\",\n    updatedAt: \"2024-07-13T16:20:00Z\",\n    tags: [\"스포츠\", \"뉴스\"],\n    title: \"스포츠 뉴스 제목\"\n  }\n];\n\nexport const projectAPI = {\n  getProjects: async () => {\n    console.log(\"🔍 프로젝트 목록 조회 (개발 모드)\");\n    \n    // 개발 모드에서는 바로 더미 데이터 반환\n    if (DEV_MODE) {\n      console.log(\"🚀 개발 모드: 더미 데이터 즉시 반환\");\n      return { \n        projects: DUMMY_PROJECTS,\n        count: DUMMY_PROJECTS.length \n      };\n    }\n    \n    // 실제 API 호출 시도 후 실패하면 더미 데이터 반환\n    try {\n      const response = await api.get(\"/projects\");\n      return response.data;\n    } catch (error) {\n      console.log(\"⚠️ API 실패, 더미 데이터 사용\");\n      return { \n        projects: DUMMY_PROJECTS,\n        count: DUMMY_PROJECTS.length \n      };\n    }\n  },\n\n  getProject: async (projectId) => {\n    console.log(\"🔍 프로젝트 상세 조회 (개발 모드):\", projectId);\n    \n    // 개발 모드에서는 바로 더미 데이터 반환\n    if (DEV_MODE) {\n      console.log(\"🚀 개발 모드: 더미 데이터 즉시 반환\");\n      \n      // 먼저 더미 데이터에서 찾아보기\n      let project = DUMMY_PROJECTS.find(p => p.projectId === projectId);\n      \n      // 없으면 동적으로 생성 (실제 프로젝트 ID 사용)\n      if (!project) {\n        console.log(\"🆕 동적 프로젝트 생성:\", projectId);\n        project = {\n          projectId: projectId,\n          name: \"새 프로젝트\",\n          description: \"동적으로 생성된 프로젝트입니다.\",\n          category: \"news\",\n          createdAt: new Date().toISOString(),\n          updatedAt: new Date().toISOString(),\n          tags: [\"자동생성\"],\n          title: \"새 프로젝트\"\n        };\n        // 더미 데이터에 추가\n        DUMMY_PROJECTS.push(project);\n      }\n      \n      return project;\n    }\n    \n    try {\n      const response = await api.get(`/projects/${projectId}`);\n      return response.data;\n    } catch (error) {\n      console.log(\"⚠️ API 실패, 더미 데이터 사용\");\n      \n      // 먼저 더미 데이터에서 찾아보기\n      let project = DUMMY_PROJECTS.find(p => p.projectId === projectId);\n      \n      // 없으면 동적으로 생성 (실제 프로젝트 ID 사용)\n      if (!project) {\n        console.log(\"🆕 동적 프로젝트 생성:\", projectId);\n        project = {\n          projectId: projectId,\n          name: \"새 프로젝트\",\n          description: \"동적으로 생성된 프로젝트입니다.\",\n          category: \"news\",\n          createdAt: new Date().toISOString(),\n          updatedAt: new Date().toISOString(),\n          tags: [\"자동생성\"],\n          title: \"새 프로젝트\"\n        };\n        // 더미 데이터에 추가\n        DUMMY_PROJECTS.push(project);\n      }\n      \n      return project;\n    }\n  },\n\n  createProject: async (projectData) => {\n    console.log(\"🆕 프로젝트 생성 (개발 모드):\", projectData);\n    try {\n      const response = await api.post(\"/projects\", projectData);\n      return response.data;\n    } catch (error) {\n      console.log(\"⚠️ API 실패, 더미 응답 사용\");\n      const newProject = {\n        projectId: `proj_${Date.now()}`,\n        ...projectData,\n        createdAt: new Date().toISOString(),\n        updatedAt: new Date().toISOString(),\n        title: projectData.name // ProjectDetail 호환성\n      };\n      DUMMY_PROJECTS.push(newProject);\n      return newProject;\n    }\n  },\n\n  updateProject: async (projectId, projectData) => {\n    console.log(\"✏️ 프로젝트 수정 (개발 모드):\", projectId, projectData);\n    try {\n      const response = await api.put(`/projects/${projectId}`, projectData);\n      return response.data;\n    } catch (error) {\n      console.log(\"⚠️ API 실패, 더미 응답 사용\");\n      const index = DUMMY_PROJECTS.findIndex(p => p.projectId === projectId);\n      if (index !== -1) {\n        DUMMY_PROJECTS[index] = {\n          ...DUMMY_PROJECTS[index],\n          ...projectData,\n          updatedAt: new Date().toISOString()\n        };\n        return DUMMY_PROJECTS[index];\n      }\n      throw new Error(\"프로젝트를 찾을 수 없습니다\");\n    }\n  },\n\n  deleteProject: async (projectId) => {\n    console.log(\"🗑️ 프로젝트 삭제 (개발 모드):\", projectId);\n    try {\n      const response = await api.delete(`/projects/${projectId}`);\n      return response.data;\n    } catch (error) {\n      console.log(\"⚠️ API 실패, 더미 응답 사용\");\n      const index = DUMMY_PROJECTS.findIndex(p => p.projectId === projectId);\n      if (index !== -1) {\n        DUMMY_PROJECTS.splice(index, 1);\n        return { success: true };\n      }\n      throw new Error(\"프로젝트를 찾을 수 없습니다\");\n    }\n  },\n};\n\n// =============================================================================\n// 2. 프롬프트 API (S3/DynamoDB 연동)\n// =============================================================================\n\n// 더미 프롬프트 카드 데이터\nconst DUMMY_PROMPT_CARDS = {\n  \"proj_001\": [\n    {\n      promptId: \"prompt_001\",\n      projectId: \"proj_001\",\n      title: \"기본 제목 생성 가이드라인\",\n      category: \"workflow\",\n      stepOrder: 1,\n      content: `당신은 경제 뉴스 전문 기자입니다. 다음 가이드라인에 따라 제목을 생성해주세요:\n\n1. 핵심 내용을 15-25자로 요약\n2. 독자의 관심을 끄는 키워드 포함\n3. 정확하고 객관적인 표현 사용\n4. SEO 최적화 키워드 포함`,\n      createdAt: \"2024-07-10T10:30:00Z\",\n      updatedAt: \"2024-07-14T09:15:00Z\"\n    },\n    {\n      promptId: \"prompt_002\", \n      projectId: \"proj_001\",\n      title: \"경제 용어 스타일 가이드\",\n      category: \"stylebook_guidelines\",\n      stepOrder: 2,\n      content: `경제 뉴스 제목 작성 시 다음 스타일을 준수하세요:\n\n- 금융 용어는 일반인이 이해하기 쉽게 표현\n- 수치는 구체적으로 명시 (예: \"크게 상승\" → \"10% 상승\")\n- 부정적 표현보다는 중립적 표현 선호\n- 전문 용어 사용 시 괄호로 설명 추가`,\n      createdAt: \"2024-07-10T11:00:00Z\",\n      updatedAt: \"2024-07-12T14:20:00Z\"\n    }\n  ],\n  \"proj_002\": [\n    {\n      promptId: \"prompt_003\",\n      projectId: \"proj_002\", \n      title: \"기술 뉴스 SEO 최적화\",\n      category: \"seo_optimization\",\n      stepOrder: 1,\n      content: `기술 뉴스 제목의 SEO 최적화 방법:\n\n1. 주요 기술 키워드를 제목 앞부분에 배치\n2. 트렌딩 기술 용어 활용 (AI, 메타버스, 블록체인 등)\n3. 검색량이 높은 브랜드명 포함\n4. 숫자나 년도를 활용하여 시의성 강조`,\n      createdAt: \"2024-07-08T15:00:00Z\",\n      updatedAt: \"2024-07-13T10:30:00Z\"\n    }\n  ],\n  \"proj_003\": [\n    {\n      promptId: \"prompt_004\",\n      projectId: \"proj_003\",\n      title: \"스포츠 뉴스 제목 스타일\",\n      category: \"title_type_guidelines\", \n      stepOrder: 1,\n      content: `스포츠 뉴스 제목 작성 가이드라인:\n\n1. 선수명이나 팀명을 명확히 표기\n2. 경기 결과는 구체적 스코어 포함\n3. 감정적 표현보다는 사실 중심\n4. 스포츠별 전문 용어 적절히 활용\n5. 실시간성을 나타내는 표현 사용`,\n      createdAt: \"2024-07-05T12:15:00Z\", \n      updatedAt: \"2024-07-13T16:45:00Z\"\n    }\n  ]\n};\n\nexport const promptCardAPI = {\n  // 프롬프트 카드 목록 조회\n  getPromptCards: async (projectId, includeContent = false) => {\n    console.log(\"🔍 프롬프트 조회 (개발 모드):\", projectId);\n\n    // 개발 모드에서는 바로 더미 데이터 반환\n    if (DEV_MODE) {\n      console.log(\"🚀 개발 모드: 더미 프롬프트 데이터 즉시 반환\");\n      let cards = DUMMY_PROMPT_CARDS[projectId];\n      \n      // 해당 프로젝트의 프롬프트가 없으면 기본 프롬프트 생성\n      if (!cards) {\n        console.log(\"🆕 동적 프롬프트 카드 생성:\", projectId);\n        cards = [\n          {\n            promptId: `prompt_${projectId}_001`,\n            projectId: projectId,\n            title: \"기본 제목 생성 가이드라인\",\n            category: \"workflow\",\n            stepOrder: 1,\n            content: `뉴스 제목 생성을 위한 기본 가이드라인:\n\n1. 핵심 내용을 15-25자로 요약\n2. 독자의 관심을 끄는 키워드 포함\n3. 정확하고 객관적인 표현 사용\n4. SEO 최적화 키워드 포함\n5. 감정적 표현보다는 사실 중심으로 작성`,\n            createdAt: new Date().toISOString(),\n            updatedAt: new Date().toISOString()\n          },\n          {\n            promptId: `prompt_${projectId}_002`,\n            projectId: projectId,\n            title: \"스타일 가이드\",\n            category: \"stylebook_guidelines\",\n            stepOrder: 2,\n            content: `제목 작성 스타일 가이드:\n\n- 전문 용어는 일반인이 이해하기 쉽게 표현\n- 수치는 구체적으로 명시\n- 중립적이고 객관적인 표현 사용\n- 필요시 괄호로 부연 설명 추가\n- 시의성을 나타내는 표현 활용`,\n            createdAt: new Date().toISOString(),\n            updatedAt: new Date().toISOString()\n          }\n        ];\n        DUMMY_PROMPT_CARDS[projectId] = cards;\n      }\n      \n      return {\n        promptCards: cards,\n        count: cards.length,\n        projectId: projectId\n      };\n    }\n\n    try {\n      const params = includeContent ? { include_content: \"true\" } : {};\n      const response = await api.get(`/prompts/${projectId}`, { params });\n      console.log(\"✅ 프롬프트 조회 성공:\", response.data.count, \"개\");\n      return response.data;\n    } catch (error) {\n      console.log(\"⚠️ API 실패, 더미 데이터 사용\");\n      let cards = DUMMY_PROMPT_CARDS[projectId];\n      \n      // 해당 프로젝트의 프롬프트가 없으면 기본 프롬프트 생성\n      if (!cards) {\n        console.log(\"🆕 동적 프롬프트 카드 생성:\", projectId);\n        cards = [\n          {\n            promptId: `prompt_${projectId}_001`,\n            projectId: projectId,\n            title: \"기본 제목 생성 가이드라인\",\n            category: \"workflow\",\n            stepOrder: 1,\n            content: `뉴스 제목 생성을 위한 기본 가이드라인:\n\n1. 핵심 내용을 15-25자로 요약\n2. 독자의 관심을 끄는 키워드 포함\n3. 정확하고 객관적인 표현 사용\n4. SEO 최적화 키워드 포함\n5. 감정적 표현보다는 사실 중심으로 작성`,\n            createdAt: new Date().toISOString(),\n            updatedAt: new Date().toISOString()\n          },\n          {\n            promptId: `prompt_${projectId}_002`,\n            projectId: projectId,\n            title: \"스타일 가이드\",\n            category: \"stylebook_guidelines\",\n            stepOrder: 2,\n            content: `제목 작성 스타일 가이드:\n\n- 전문 용어는 일반인이 이해하기 쉽게 표현\n- 수치는 구체적으로 명시\n- 중립적이고 객관적인 표현 사용\n- 필요시 괄호로 부연 설명 추가\n- 시의성을 나타내는 표현 활용`,\n            createdAt: new Date().toISOString(),\n            updatedAt: new Date().toISOString()\n          }\n        ];\n        DUMMY_PROMPT_CARDS[projectId] = cards;\n      }\n      \n      return {\n        promptCards: cards,\n        count: cards.length,\n        projectId: projectId\n      };\n    }\n  },\n\n  // 프롬프트 카드 생성\n  createPromptCard: async (projectId, promptData) => {\n    console.log(\"🆕 프롬프트 생성 (개발 모드):\", { projectId, promptData });\n\n    try {\n      const response = await api.post(`/prompts/${projectId}`, promptData);\n      return response.data;\n    } catch (error) {\n      console.log(\"⚠️ API 실패, 더미 응답 사용\");\n      const newCard = {\n        promptId: `prompt_${Date.now()}`,\n        projectId,\n        ...promptData,\n        createdAt: new Date().toISOString(),\n        updatedAt: new Date().toISOString()\n      };\n      \n      if (!DUMMY_PROMPT_CARDS[projectId]) {\n        DUMMY_PROMPT_CARDS[projectId] = [];\n      }\n      DUMMY_PROMPT_CARDS[projectId].push(newCard);\n      return newCard;\n    }\n  },\n\n  // 프롬프트 카드 수정 - S3/DynamoDB 저장\n  updatePromptCard: async (projectId, promptId, promptData) => {\n    console.log(\"💾 프롬프트 수정 (개발 모드):\", { projectId, promptId });\n\n    try {\n      const response = await api.put(\n        `/prompts/${projectId}/${promptId}`,\n        promptData\n      );\n      return response.data;\n    } catch (error) {\n      console.log(\"⚠️ API 실패, 더미 응답 사용\");\n      const cards = DUMMY_PROMPT_CARDS[projectId] || [];\n      const index = cards.findIndex(card => card.promptId === promptId);\n      \n      if (index !== -1) {\n        DUMMY_PROMPT_CARDS[projectId][index] = {\n          ...DUMMY_PROMPT_CARDS[projectId][index],\n          ...promptData,\n          updatedAt: new Date().toISOString()\n        };\n        return DUMMY_PROMPT_CARDS[projectId][index];\n      }\n      throw new Error(\"프롬프트를 찾을 수 없습니다\");\n    }\n  },\n\n  // 프롬프트 카드 삭제\n  deletePromptCard: async (projectId, promptId) => {\n    console.log(\"🗑️ 프롬프트 삭제 (개발 모드):\", { projectId, promptId });\n\n    try {\n      const response = await api.delete(`/prompts/${projectId}/${promptId}`);\n      return response.data;\n    } catch (error) {\n      console.log(\"⚠️ API 실패, 더미 응답 사용\");\n      const cards = DUMMY_PROMPT_CARDS[projectId] || [];\n      const index = cards.findIndex(card => card.promptId === promptId);\n      \n      if (index !== -1) {\n        DUMMY_PROMPT_CARDS[projectId].splice(index, 1);\n        return { success: true };\n      }\n      throw new Error(\"프롬프트를 찾을 수 없습니다\");\n    }\n  },\n};\n\n// =============================================================================\n// 3. 제목 생성 API (Bedrock Claude 호출)\n// =============================================================================\nexport const generateAPI = {\n  // 실제 Bedrock Claude 호출\n  generateTitle: async (projectId, articleContent, userRequest = \"\") => {\n    console.log(\"🚀 제목 생성 시작 (개발 모드):\", {\n      projectId,\n      articleLength: articleContent.length,\n      userRequest,\n    });\n\n    try {\n      const response = await api.post(`/projects/${projectId}/generate`, {\n        article: articleContent,\n        userRequest,\n      });\n      console.log(\"✅ 제목 생성 완료\");\n      return response.data;\n    } catch (error) {\n      console.log(\"⚠️ API 실패, 더미 제목 생성 사용\");\n      \n      // 더미 제목 생성 결과\n      const dummyTitles = [\n        {\n          type: \"저널리즘 충실형\",\n          title: \"경제성장률 3.2% 기록, 전년 동기 대비 0.5%p 상승\",\n          quality: {\n            clarity: \"상\",\n            readability: \"상\", \n            clickworthiness: \"중\",\n            factuality: \"상\",\n            style_compliance: \"상\"\n          },\n          reasoning: \"객관적 수치를 중심으로 정확한 정보 전달에 중점을 둔 제목\"\n        },\n        {\n          type: \"균형잡힌 후킹형\",\n          title: \"한국 경제 훨훨, 3.2% 성장으로 예상치 뛰어넘어\", \n          quality: {\n            clarity: \"상\",\n            readability: \"상\",\n            clickworthiness: \"상\", \n            factuality: \"상\",\n            style_compliance: \"중\"\n          },\n          reasoning: \"독자의 관심을 끌면서도 정확한 정보를 포함한 균형 잡힌 제목\"\n        },\n        {\n          type: \"클릭유도형\",\n          title: \"믿기지 않는 성장률! 한국 경제가 보여준 놀라운 반전\",\n          quality: {\n            clarity: \"중\",\n            readability: \"상\",\n            clickworthiness: \"상\",\n            factuality: \"중\", \n            style_compliance: \"하\"\n          },\n          reasoning: \"강한 감정적 어필로 클릭을 유도하는 제목\"\n        },\n        {\n          type: \"SEO/AEO 최적화형\",\n          title: \"한국 경제성장률 3.2% 2024년 3분기 GDP 상승률 분석\",\n          quality: {\n            clarity: \"상\",\n            readability: \"중\",\n            clickworthiness: \"중\",\n            factuality: \"상\",\n            style_compliance: \"상\"\n          },\n          reasoning: \"검색 최적화 키워드를 포함한 SEO 친화적 제목\"\n        },\n        {\n          type: \"소셜미디어 공유형\", \n          title: \"🚀 한국 경제 3.2% 성장 달성! #경제성장 #GDP #한국경제\",\n          quality: {\n            clarity: \"상\",\n            readability: \"상\",\n            clickworthiness: \"상\",\n            factuality: \"상\", \n            style_compliance: \"중\"\n          },\n          reasoning: \"이모지와 해시태그를 활용한 소셜미디어 최적화 제목\"\n        }\n      ];\n\n      return {\n        success: true,\n        titles: dummyTitles,\n        metadata: {\n          projectId,\n          articleLength: articleContent.length,\n          userRequest,\n          processingTime: \"2.3초\",\n          tokensUsed: 1250,\n          model: \"claude-3-5-sonnet-20241022-v2:0 (개발 모드)\"\n        },\n        timestamp: new Date().toISOString()\n      };\n    }\n  },\n};\n\n// =============================================================================\n// 4. 유틸리티\n// =============================================================================\nexport const handleAPIError = (error) => {\n  if (error.response) {\n    const { status, data } = error.response;\n    return {\n      message: data?.error || `서버 오류 (${status})`,\n      status,\n    };\n  } else if (error.request) {\n    return {\n      message: \"네트워크 연결을 확인해주세요\",\n      status: 0,\n    };\n  } else {\n    return {\n      message: error.message || \"알 수 없는 오류가 발생했습니다\",\n      status: -1,\n    };\n  }\n};\n\n// =============================================================================\n// 5. 인증 API\n// =============================================================================\nexport const authAPI = {\n  isAuthenticated: () => {\n    // 개발 모드: 항상 인증된 상태로 처리\n    return true;\n  },\n\n  getCurrentUser: () => {\n    // 개발 모드: 가짜 사용자 정보 반환\n    return {\n      id: \"dev-user\",\n      email: \"dev@example.com\",\n      name: \"개발자\",\n    };\n  },\n\n  signin: async (credentials) => {\n    // 개발 모드: 가짜 로그인\n    console.log(\"🔐 개발 모드 로그인:\", credentials);\n    return { success: true, message: \"로그인 성공 (개발 모드)\" };\n  },\n\n  signup: async (userData) => {\n    // 개발 모드: 가짜 회원가입\n    console.log(\"📝 개발 모드 회원가입:\", userData);\n    return { success: true, message: \"회원가입 성공 (개발 모드)\" };\n  },\n\n  signout: async () => {\n    // 개발 모드: 가짜 로그아웃\n    console.log(\"👋 개발 모드 로그아웃\");\n    return { success: true };\n  },\n\n  verifyEmail: async (verificationData) => {\n    console.log(\"✉️ 개발 모드 이메일 인증:\", verificationData);\n    return { success: true, message: \"이메일 인증 성공 (개발 모드)\" };\n  },\n\n  forgotPassword: async (email) => {\n    console.log(\"🔄 개발 모드 비밀번호 재설정:\", email);\n    return { success: true, message: \"비밀번호 재설정 이메일 발송 (개발 모드)\" };\n  },\n\n  confirmPassword: async (resetData) => {\n    console.log(\"🔒 개발 모드 비밀번호 확인:\", resetData);\n    return { success: true, message: \"비밀번호 재설정 성공 (개발 모드)\" };\n  },\n};\n\n// =============================================================================\n// 6. 카테고리 API\n// =============================================================================\nexport const DEFAULT_PROJECT_CATEGORIES = [\n  { id: \"news\", name: \"뉴스\", color: \"blue\", description: \"일반 뉴스 기사\" },\n  { id: \"economy\", name: \"경제\", color: \"green\", description: \"경제 관련 기사\" },\n  { id: \"tech\", name: \"기술\", color: \"purple\", description: \"기술 및 IT 기사\" },\n  { id: \"sports\", name: \"스포츠\", color: \"orange\", description: \"스포츠 기사\" },\n  { id: \"culture\", name: \"문화\", color: \"pink\", description: \"문화 및 예술 기사\" },\n];\n\nexport const categoryAPI = {\n  getUserCategories: async () => {\n    // 개발 모드: 기본 카테고리 반환\n    return { categories: DEFAULT_PROJECT_CATEGORIES };\n  },\n\n  createCategory: async (categoryData) => {\n    console.log(\"📁 카테고리 생성:\", categoryData);\n    return { \n      id: `cat_${Date.now()}`, \n      ...categoryData, \n      createdAt: new Date().toISOString() \n    };\n  },\n\n  updateCategory: async (categoryId, categoryData) => {\n    console.log(\"📝 카테고리 수정:\", categoryId, categoryData);\n    return { success: true };\n  },\n\n  deleteCategory: async (categoryId) => {\n    console.log(\"🗑️ 카테고리 삭제:\", categoryId);\n    return { success: true };\n  },\n};\n\nexport const projectCategoryAPI = {\n  updateProjectCategory: async (projectId, categoryId) => {\n    console.log(\"📂 프로젝트 카테고리 변경:\", projectId, categoryId);\n    return { success: true };\n  },\n};\n\n// =============================================================================\n// 7. 오케스트레이션 API\n// =============================================================================\nexport const orchestrationAPI = {\n  startExecution: async (projectId, data) => {\n    console.log(\"🚀 오케스트레이션 시작:\", projectId, data);\n    return { \n      executionArn: `exec_${Date.now()}`, \n      status: \"RUNNING\" \n    };\n  },\n\n  getExecutionStatus: async (executionArn) => {\n    console.log(\"📊 실행 상태 조회:\", executionArn);\n    return { \n      status: \"SUCCEEDED\", \n      result: { message: \"완료됨\" } \n    };\n  },\n};\n\n// =============================================================================\n// 8. 유틸리티 함수들\n// =============================================================================\nexport const getCategoryInfo = (categoryId, userCategories = DEFAULT_PROJECT_CATEGORIES) => {\n  const category = userCategories.find(cat => cat.id === categoryId);\n  return category || { \n    id: categoryId, \n    name: \"알 수 없음\", \n    color: \"gray\", \n    description: \"알 수 없는 카테고리\" \n  };\n};\n\nexport const getCategoryColorClasses = (color) => {\n  const colorMap = {\n    blue: \"bg-blue-50 text-blue-700 border-blue-200\",\n    green: \"bg-green-50 text-green-700 border-green-200\",\n    purple: \"bg-purple-50 text-purple-700 border-purple-200\",\n    orange: \"bg-orange-50 text-orange-700 border-orange-200\",\n    pink: \"bg-pink-50 text-pink-700 border-pink-200\",\n    red: \"bg-red-50 text-red-700 border-red-200\",\n    yellow: \"bg-yellow-50 text-yellow-700 border-yellow-200\",\n    indigo: \"bg-indigo-50 text-indigo-700 border-indigo-200\",\n    gray: \"bg-gray-50 text-gray-700 border-gray-200\",\n  };\n  return colorMap[color] || colorMap.gray;\n};\n\nexport const filterProjects = (projects, filters) => {\n  let filtered = [...projects];\n\n  // 카테고리 필터\n  if (filters.category && filters.category !== \"all\") {\n    filtered = filtered.filter(project => project.category === filters.category);\n  }\n\n  // 검색 필터\n  if (filters.searchQuery) {\n    const query = filters.searchQuery.toLowerCase();\n    filtered = filtered.filter(project =>\n      project.name.toLowerCase().includes(query) ||\n      (project.description && project.description.toLowerCase().includes(query)) ||\n      (project.tags && project.tags.some(tag => tag.toLowerCase().includes(query)))\n    );\n  }\n\n  // 정렬\n  filtered.sort((a, b) => {\n    switch (filters.sortBy) {\n      case \"name\":\n        return a.name.localeCompare(b.name, \"ko\");\n      case \"updated\":\n        return new Date(b.updatedAt || b.createdAt) - new Date(a.updatedAt || a.createdAt);\n      case \"created\":\n      default:\n        return new Date(b.createdAt) - new Date(a.createdAt);\n    }\n  });\n\n  return filtered;\n};\n\nexport const formatTokenCount = (count) => {\n  if (!count || count === 0) return \"0\";\n  if (count < 1000) return count.toString();\n  if (count < 1000000) return `${(count / 1000).toFixed(1)}K`;\n  return `${(count / 1000000).toFixed(1)}M`;\n};\n\nexport const formatFileSize = (bytes) => {\n  if (!bytes || bytes === 0) return \"0 B\";\n  const sizes = [\"B\", \"KB\", \"MB\", \"GB\"];\n  const i = Math.floor(Math.log(bytes) / Math.log(1024));\n  return `${(bytes / Math.pow(1024, i)).toFixed(1)} ${sizes[i]}`;\n};\n\nexport const calculatePromptStats = (promptCards) => {\n  if (!promptCards || promptCards.length === 0) {\n    return {\n      totalCards: 0,\n      totalTokens: 0,\n      totalSize: 0,\n      categories: {},\n    };\n  }\n\n  const stats = {\n    totalCards: promptCards.length,\n    totalTokens: 0,\n    totalSize: 0,\n    categories: {},\n  };\n\n  promptCards.forEach(card => {\n    // 토큰 수 계산 (대략적으로 글자 수 / 4)\n    const contentLength = (card.content || \"\").length;\n    const estimatedTokens = Math.ceil(contentLength / 4);\n    stats.totalTokens += estimatedTokens;\n    \n    // 파일 크기 계산 (UTF-8 기준)\n    stats.totalSize += new Blob([card.content || \"\"]).size;\n    \n    // 카테고리별 통계\n    const category = card.category || \"uncategorized\";\n    if (!stats.categories[category]) {\n      stats.categories[category] = { count: 0, tokens: 0, size: 0 };\n    }\n    stats.categories[category].count++;\n    stats.categories[category].tokens += estimatedTokens;\n    stats.categories[category].size += new Blob([card.content || \"\"]).size;\n  });\n\n  return stats;\n};\n\n// 색상 옵션\nexport const COLOR_OPTIONS = [\n  { id: \"blue\", name: \"파란색\", class: \"bg-blue-500\" },\n  { id: \"green\", name: \"초록색\", class: \"bg-green-500\" },\n  { id: \"purple\", name: \"보라색\", class: \"bg-purple-500\" },\n  { id: \"orange\", name: \"주황색\", class: \"bg-orange-500\" },\n  { id: \"pink\", name: \"분홍색\", class: \"bg-pink-500\" },\n  { id: \"red\", name: \"빨간색\", class: \"bg-red-500\" },\n  { id: \"yellow\", name: \"노란색\", class: \"bg-yellow-500\" },\n  { id: \"indigo\", name: \"남색\", class: \"bg-indigo-500\" },\n  { id: \"gray\", name: \"회색\", class: \"bg-gray-500\" },\n];\n\nexport default api;\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,KAAM,OAAO,CAEzB;AACA,KAAM,CAAAC,YAAY,CAChBC,OAAO,CAACC,GAAG,CAACC,iBAAiB,EAC7B,6DAA6D,CAE/D;AACA,KAAM,CAAAC,QAAQ,CAAGH,OAAO,CAACC,GAAG,CAACG,QAAQ,GAAK,aAAa,EAAI,IAAI,CAE/D;AACA,KAAM,CAAAC,GAAG,CAAGP,KAAK,CAACQ,MAAM,CAAC,CACvBC,OAAO,CAAER,YAAY,CACrBS,OAAO,CAAE,CAAE,cAAc,CAAE,kBAAmB,CAAC,CAC/CC,OAAO,CAAE,IAAM;AACjB,CAAC,CAAC,CAEF;AACAJ,GAAG,CAACK,YAAY,CAACC,OAAO,CAACC,GAAG,CAAEC,MAAM,EAAK,KAAAC,cAAA,CACvCC,OAAO,CAACC,GAAG,CAAC,SAAS,EAAAF,cAAA,CAAED,MAAM,CAACI,MAAM,UAAAH,cAAA,iBAAbA,cAAA,CAAeI,WAAW,CAAC,CAAC,CAAEL,MAAM,CAACM,GAAG,CAAC,CAChE,MAAO,CAAAN,MAAM,CACf,CAAC,CAAC,CAEF;AACAR,GAAG,CAACK,YAAY,CAACU,QAAQ,CAACR,GAAG,CAC1BQ,QAAQ,EAAK,CACZL,OAAO,CAACC,GAAG,CAAC,SAAS,CAAEI,QAAQ,CAACC,MAAM,CAAED,QAAQ,CAACP,MAAM,CAACM,GAAG,CAAC,CAC5D,MAAO,CAAAC,QAAQ,CACjB,CAAC,CACAE,KAAK,EAAK,KAAAC,eAAA,CACTR,OAAO,CAACO,KAAK,CAAC,SAAS,EAAAC,eAAA,CAAED,KAAK,CAACF,QAAQ,UAAAG,eAAA,iBAAdA,eAAA,CAAgBF,MAAM,CAAEC,KAAK,CAACE,OAAO,CAAC,CAC/D,MAAO,CAAAC,OAAO,CAACC,MAAM,CAACJ,KAAK,CAAC,CAC9B,CACF,CAAC,CAED;AACA;AACA;AAEA;AACA,KAAM,CAAAK,cAAc,CAAG,CACrB,CACEC,SAAS,CAAE,UAAU,CACrBC,IAAI,CAAE,aAAa,CACnBC,WAAW,CAAE,4BAA4B,CACzCC,QAAQ,CAAE,SAAS,CACnBC,SAAS,CAAE,sBAAsB,CACjCC,SAAS,CAAE,sBAAsB,CACjCC,IAAI,CAAE,CAAC,IAAI,CAAE,IAAI,CAAE,MAAM,CAAC,CAC1BC,KAAK,CAAE,aAAc;AACvB,CAAC,CACD,CACEP,SAAS,CAAE,UAAU,CACrBC,IAAI,CAAE,cAAc,CACpBC,WAAW,CAAE,+BAA+B,CAC5CC,QAAQ,CAAE,MAAM,CAChBC,SAAS,CAAE,sBAAsB,CACjCC,SAAS,CAAE,sBAAsB,CACjCC,IAAI,CAAE,CAAC,IAAI,CAAE,IAAI,CAAE,KAAK,CAAC,CACzBC,KAAK,CAAE,cACT,CAAC,CACD,CACEP,SAAS,CAAE,UAAU,CACrBC,IAAI,CAAE,WAAW,CACjBC,WAAW,CAAE,uBAAuB,CACpCC,QAAQ,CAAE,QAAQ,CAClBC,SAAS,CAAE,sBAAsB,CACjCC,SAAS,CAAE,sBAAsB,CACjCC,IAAI,CAAE,CAAC,KAAK,CAAE,IAAI,CAAC,CACnBC,KAAK,CAAE,WACT,CAAC,CACF,CAED,MAAO,MAAM,CAAAC,UAAU,CAAG,CACxBC,WAAW,CAAE,KAAAA,CAAA,GAAY,CACvBtB,OAAO,CAACC,GAAG,CAAC,uBAAuB,CAAC,CAEpC;AACA,GAAIb,QAAQ,CAAE,CACZY,OAAO,CAACC,GAAG,CAAC,wBAAwB,CAAC,CACrC,MAAO,CACLsB,QAAQ,CAAEX,cAAc,CACxBY,KAAK,CAAEZ,cAAc,CAACa,MACxB,CAAC,CACH,CAEA;AACA,GAAI,CACF,KAAM,CAAApB,QAAQ,CAAG,KAAM,CAAAf,GAAG,CAACoC,GAAG,CAAC,WAAW,CAAC,CAC3C,MAAO,CAAArB,QAAQ,CAACsB,IAAI,CACtB,CAAE,MAAOpB,KAAK,CAAE,CACdP,OAAO,CAACC,GAAG,CAAC,sBAAsB,CAAC,CACnC,MAAO,CACLsB,QAAQ,CAAEX,cAAc,CACxBY,KAAK,CAAEZ,cAAc,CAACa,MACxB,CAAC,CACH,CACF,CAAC,CAEDG,UAAU,CAAE,KAAO,CAAAf,SAAS,EAAK,CAC/Bb,OAAO,CAACC,GAAG,CAAC,wBAAwB,CAAEY,SAAS,CAAC,CAEhD;AACA,GAAIzB,QAAQ,CAAE,CACZY,OAAO,CAACC,GAAG,CAAC,wBAAwB,CAAC,CAErC;AACA,GAAI,CAAA4B,OAAO,CAAGjB,cAAc,CAACkB,IAAI,CAACC,CAAC,EAAIA,CAAC,CAAClB,SAAS,GAAKA,SAAS,CAAC,CAEjE;AACA,GAAI,CAACgB,OAAO,CAAE,CACZ7B,OAAO,CAACC,GAAG,CAAC,gBAAgB,CAAEY,SAAS,CAAC,CACxCgB,OAAO,CAAG,CACRhB,SAAS,CAAEA,SAAS,CACpBC,IAAI,CAAE,QAAQ,CACdC,WAAW,CAAE,mBAAmB,CAChCC,QAAQ,CAAE,MAAM,CAChBC,SAAS,CAAE,GAAI,CAAAe,IAAI,CAAC,CAAC,CAACC,WAAW,CAAC,CAAC,CACnCf,SAAS,CAAE,GAAI,CAAAc,IAAI,CAAC,CAAC,CAACC,WAAW,CAAC,CAAC,CACnCd,IAAI,CAAE,CAAC,MAAM,CAAC,CACdC,KAAK,CAAE,QACT,CAAC,CACD;AACAR,cAAc,CAACsB,IAAI,CAACL,OAAO,CAAC,CAC9B,CAEA,MAAO,CAAAA,OAAO,CAChB,CAEA,GAAI,CACF,KAAM,CAAAxB,QAAQ,CAAG,KAAM,CAAAf,GAAG,CAACoC,GAAG,CAAC,aAAab,SAAS,EAAE,CAAC,CACxD,MAAO,CAAAR,QAAQ,CAACsB,IAAI,CACtB,CAAE,MAAOpB,KAAK,CAAE,CACdP,OAAO,CAACC,GAAG,CAAC,sBAAsB,CAAC,CAEnC;AACA,GAAI,CAAA4B,OAAO,CAAGjB,cAAc,CAACkB,IAAI,CAACC,CAAC,EAAIA,CAAC,CAAClB,SAAS,GAAKA,SAAS,CAAC,CAEjE;AACA,GAAI,CAACgB,OAAO,CAAE,CACZ7B,OAAO,CAACC,GAAG,CAAC,gBAAgB,CAAEY,SAAS,CAAC,CACxCgB,OAAO,CAAG,CACRhB,SAAS,CAAEA,SAAS,CACpBC,IAAI,CAAE,QAAQ,CACdC,WAAW,CAAE,mBAAmB,CAChCC,QAAQ,CAAE,MAAM,CAChBC,SAAS,CAAE,GAAI,CAAAe,IAAI,CAAC,CAAC,CAACC,WAAW,CAAC,CAAC,CACnCf,SAAS,CAAE,GAAI,CAAAc,IAAI,CAAC,CAAC,CAACC,WAAW,CAAC,CAAC,CACnCd,IAAI,CAAE,CAAC,MAAM,CAAC,CACdC,KAAK,CAAE,QACT,CAAC,CACD;AACAR,cAAc,CAACsB,IAAI,CAACL,OAAO,CAAC,CAC9B,CAEA,MAAO,CAAAA,OAAO,CAChB,CACF,CAAC,CAEDM,aAAa,CAAE,KAAO,CAAAC,WAAW,EAAK,CACpCpC,OAAO,CAACC,GAAG,CAAC,qBAAqB,CAAEmC,WAAW,CAAC,CAC/C,GAAI,CACF,KAAM,CAAA/B,QAAQ,CAAG,KAAM,CAAAf,GAAG,CAAC+C,IAAI,CAAC,WAAW,CAAED,WAAW,CAAC,CACzD,MAAO,CAAA/B,QAAQ,CAACsB,IAAI,CACtB,CAAE,MAAOpB,KAAK,CAAE,CACdP,OAAO,CAACC,GAAG,CAAC,qBAAqB,CAAC,CAClC,KAAM,CAAAqC,UAAU,CAAG,CACjBzB,SAAS,CAAE,QAAQmB,IAAI,CAACO,GAAG,CAAC,CAAC,EAAE,CAC/B,GAAGH,WAAW,CACdnB,SAAS,CAAE,GAAI,CAAAe,IAAI,CAAC,CAAC,CAACC,WAAW,CAAC,CAAC,CACnCf,SAAS,CAAE,GAAI,CAAAc,IAAI,CAAC,CAAC,CAACC,WAAW,CAAC,CAAC,CACnCb,KAAK,CAAEgB,WAAW,CAACtB,IAAK;AAC1B,CAAC,CACDF,cAAc,CAACsB,IAAI,CAACI,UAAU,CAAC,CAC/B,MAAO,CAAAA,UAAU,CACnB,CACF,CAAC,CAEDE,aAAa,CAAE,KAAAA,CAAO3B,SAAS,CAAEuB,WAAW,GAAK,CAC/CpC,OAAO,CAACC,GAAG,CAAC,qBAAqB,CAAEY,SAAS,CAAEuB,WAAW,CAAC,CAC1D,GAAI,CACF,KAAM,CAAA/B,QAAQ,CAAG,KAAM,CAAAf,GAAG,CAACmD,GAAG,CAAC,aAAa5B,SAAS,EAAE,CAAEuB,WAAW,CAAC,CACrE,MAAO,CAAA/B,QAAQ,CAACsB,IAAI,CACtB,CAAE,MAAOpB,KAAK,CAAE,CACdP,OAAO,CAACC,GAAG,CAAC,qBAAqB,CAAC,CAClC,KAAM,CAAAyC,KAAK,CAAG9B,cAAc,CAAC+B,SAAS,CAACZ,CAAC,EAAIA,CAAC,CAAClB,SAAS,GAAKA,SAAS,CAAC,CACtE,GAAI6B,KAAK,GAAK,CAAC,CAAC,CAAE,CAChB9B,cAAc,CAAC8B,KAAK,CAAC,CAAG,CACtB,GAAG9B,cAAc,CAAC8B,KAAK,CAAC,CACxB,GAAGN,WAAW,CACdlB,SAAS,CAAE,GAAI,CAAAc,IAAI,CAAC,CAAC,CAACC,WAAW,CAAC,CACpC,CAAC,CACD,MAAO,CAAArB,cAAc,CAAC8B,KAAK,CAAC,CAC9B,CACA,KAAM,IAAI,CAAAE,KAAK,CAAC,iBAAiB,CAAC,CACpC,CACF,CAAC,CAEDC,aAAa,CAAE,KAAO,CAAAhC,SAAS,EAAK,CAClCb,OAAO,CAACC,GAAG,CAAC,sBAAsB,CAAEY,SAAS,CAAC,CAC9C,GAAI,CACF,KAAM,CAAAR,QAAQ,CAAG,KAAM,CAAAf,GAAG,CAACwD,MAAM,CAAC,aAAajC,SAAS,EAAE,CAAC,CAC3D,MAAO,CAAAR,QAAQ,CAACsB,IAAI,CACtB,CAAE,MAAOpB,KAAK,CAAE,CACdP,OAAO,CAACC,GAAG,CAAC,qBAAqB,CAAC,CAClC,KAAM,CAAAyC,KAAK,CAAG9B,cAAc,CAAC+B,SAAS,CAACZ,CAAC,EAAIA,CAAC,CAAClB,SAAS,GAAKA,SAAS,CAAC,CACtE,GAAI6B,KAAK,GAAK,CAAC,CAAC,CAAE,CAChB9B,cAAc,CAACmC,MAAM,CAACL,KAAK,CAAE,CAAC,CAAC,CAC/B,MAAO,CAAEM,OAAO,CAAE,IAAK,CAAC,CAC1B,CACA,KAAM,IAAI,CAAAJ,KAAK,CAAC,iBAAiB,CAAC,CACpC,CACF,CACF,CAAC,CAED;AACA;AACA;AAEA;AACA,KAAM,CAAAK,kBAAkB,CAAG,CACzB,UAAU,CAAE,CACV,CACEC,QAAQ,CAAE,YAAY,CACtBrC,SAAS,CAAE,UAAU,CACrBO,KAAK,CAAE,gBAAgB,CACvBJ,QAAQ,CAAE,UAAU,CACpBmC,SAAS,CAAE,CAAC,CACZC,OAAO,CAAE;AACf;AACA;AACA;AACA;AACA,kBAAkB,CACZnC,SAAS,CAAE,sBAAsB,CACjCC,SAAS,CAAE,sBACb,CAAC,CACD,CACEgC,QAAQ,CAAE,YAAY,CACtBrC,SAAS,CAAE,UAAU,CACrBO,KAAK,CAAE,eAAe,CACtBJ,QAAQ,CAAE,sBAAsB,CAChCmC,SAAS,CAAE,CAAC,CACZC,OAAO,CAAE;AACf;AACA;AACA;AACA;AACA,uBAAuB,CACjBnC,SAAS,CAAE,sBAAsB,CACjCC,SAAS,CAAE,sBACb,CAAC,CACF,CACD,UAAU,CAAE,CACV,CACEgC,QAAQ,CAAE,YAAY,CACtBrC,SAAS,CAAE,UAAU,CACrBO,KAAK,CAAE,eAAe,CACtBJ,QAAQ,CAAE,kBAAkB,CAC5BmC,SAAS,CAAE,CAAC,CACZC,OAAO,CAAE;AACf;AACA;AACA;AACA;AACA,uBAAuB,CACjBnC,SAAS,CAAE,sBAAsB,CACjCC,SAAS,CAAE,sBACb,CAAC,CACF,CACD,UAAU,CAAE,CACV,CACEgC,QAAQ,CAAE,YAAY,CACtBrC,SAAS,CAAE,UAAU,CACrBO,KAAK,CAAE,eAAe,CACtBJ,QAAQ,CAAE,uBAAuB,CACjCmC,SAAS,CAAE,CAAC,CACZC,OAAO,CAAE;AACf;AACA;AACA;AACA;AACA;AACA,oBAAoB,CACdnC,SAAS,CAAE,sBAAsB,CACjCC,SAAS,CAAE,sBACb,CAAC,CAEL,CAAC,CAED,MAAO,MAAM,CAAAmC,aAAa,CAAG,CAC3B;AACAC,cAAc,CAAE,cAAAA,CAAOzC,SAAS,CAA6B,IAA3B,CAAA0C,cAAc,CAAAC,SAAA,CAAA/B,MAAA,IAAA+B,SAAA,MAAAC,SAAA,CAAAD,SAAA,IAAG,KAAK,CACtDxD,OAAO,CAACC,GAAG,CAAC,qBAAqB,CAAEY,SAAS,CAAC,CAE7C;AACA,GAAIzB,QAAQ,CAAE,CACZY,OAAO,CAACC,GAAG,CAAC,6BAA6B,CAAC,CAC1C,GAAI,CAAAyD,KAAK,CAAGT,kBAAkB,CAACpC,SAAS,CAAC,CAEzC;AACA,GAAI,CAAC6C,KAAK,CAAE,CACV1D,OAAO,CAACC,GAAG,CAAC,mBAAmB,CAAEY,SAAS,CAAC,CAC3C6C,KAAK,CAAG,CACN,CACER,QAAQ,CAAE,UAAUrC,SAAS,MAAM,CACnCA,SAAS,CAAEA,SAAS,CACpBO,KAAK,CAAE,gBAAgB,CACvBJ,QAAQ,CAAE,UAAU,CACpBmC,SAAS,CAAE,CAAC,CACZC,OAAO,CAAE;AACrB;AACA;AACA;AACA;AACA;AACA,wBAAwB,CACZnC,SAAS,CAAE,GAAI,CAAAe,IAAI,CAAC,CAAC,CAACC,WAAW,CAAC,CAAC,CACnCf,SAAS,CAAE,GAAI,CAAAc,IAAI,CAAC,CAAC,CAACC,WAAW,CAAC,CACpC,CAAC,CACD,CACEiB,QAAQ,CAAE,UAAUrC,SAAS,MAAM,CACnCA,SAAS,CAAEA,SAAS,CACpBO,KAAK,CAAE,SAAS,CAChBJ,QAAQ,CAAE,sBAAsB,CAChCmC,SAAS,CAAE,CAAC,CACZC,OAAO,CAAE;AACrB;AACA;AACA;AACA;AACA;AACA,kBAAkB,CACNnC,SAAS,CAAE,GAAI,CAAAe,IAAI,CAAC,CAAC,CAACC,WAAW,CAAC,CAAC,CACnCf,SAAS,CAAE,GAAI,CAAAc,IAAI,CAAC,CAAC,CAACC,WAAW,CAAC,CACpC,CAAC,CACF,CACDgB,kBAAkB,CAACpC,SAAS,CAAC,CAAG6C,KAAK,CACvC,CAEA,MAAO,CACLC,WAAW,CAAED,KAAK,CAClBlC,KAAK,CAAEkC,KAAK,CAACjC,MAAM,CACnBZ,SAAS,CAAEA,SACb,CAAC,CACH,CAEA,GAAI,CACF,KAAM,CAAA+C,MAAM,CAAGL,cAAc,CAAG,CAAEM,eAAe,CAAE,MAAO,CAAC,CAAG,CAAC,CAAC,CAChE,KAAM,CAAAxD,QAAQ,CAAG,KAAM,CAAAf,GAAG,CAACoC,GAAG,CAAC,YAAYb,SAAS,EAAE,CAAE,CAAE+C,MAAO,CAAC,CAAC,CACnE5D,OAAO,CAACC,GAAG,CAAC,eAAe,CAAEI,QAAQ,CAACsB,IAAI,CAACH,KAAK,CAAE,GAAG,CAAC,CACtD,MAAO,CAAAnB,QAAQ,CAACsB,IAAI,CACtB,CAAE,MAAOpB,KAAK,CAAE,CACdP,OAAO,CAACC,GAAG,CAAC,sBAAsB,CAAC,CACnC,GAAI,CAAAyD,KAAK,CAAGT,kBAAkB,CAACpC,SAAS,CAAC,CAEzC;AACA,GAAI,CAAC6C,KAAK,CAAE,CACV1D,OAAO,CAACC,GAAG,CAAC,mBAAmB,CAAEY,SAAS,CAAC,CAC3C6C,KAAK,CAAG,CACN,CACER,QAAQ,CAAE,UAAUrC,SAAS,MAAM,CACnCA,SAAS,CAAEA,SAAS,CACpBO,KAAK,CAAE,gBAAgB,CACvBJ,QAAQ,CAAE,UAAU,CACpBmC,SAAS,CAAE,CAAC,CACZC,OAAO,CAAE;AACrB;AACA;AACA;AACA;AACA;AACA,wBAAwB,CACZnC,SAAS,CAAE,GAAI,CAAAe,IAAI,CAAC,CAAC,CAACC,WAAW,CAAC,CAAC,CACnCf,SAAS,CAAE,GAAI,CAAAc,IAAI,CAAC,CAAC,CAACC,WAAW,CAAC,CACpC,CAAC,CACD,CACEiB,QAAQ,CAAE,UAAUrC,SAAS,MAAM,CACnCA,SAAS,CAAEA,SAAS,CACpBO,KAAK,CAAE,SAAS,CAChBJ,QAAQ,CAAE,sBAAsB,CAChCmC,SAAS,CAAE,CAAC,CACZC,OAAO,CAAE;AACrB;AACA;AACA;AACA;AACA;AACA,kBAAkB,CACNnC,SAAS,CAAE,GAAI,CAAAe,IAAI,CAAC,CAAC,CAACC,WAAW,CAAC,CAAC,CACnCf,SAAS,CAAE,GAAI,CAAAc,IAAI,CAAC,CAAC,CAACC,WAAW,CAAC,CACpC,CAAC,CACF,CACDgB,kBAAkB,CAACpC,SAAS,CAAC,CAAG6C,KAAK,CACvC,CAEA,MAAO,CACLC,WAAW,CAAED,KAAK,CAClBlC,KAAK,CAAEkC,KAAK,CAACjC,MAAM,CACnBZ,SAAS,CAAEA,SACb,CAAC,CACH,CACF,CAAC,CAED;AACAiD,gBAAgB,CAAE,KAAAA,CAAOjD,SAAS,CAAEkD,UAAU,GAAK,CACjD/D,OAAO,CAACC,GAAG,CAAC,qBAAqB,CAAE,CAAEY,SAAS,CAAEkD,UAAW,CAAC,CAAC,CAE7D,GAAI,CACF,KAAM,CAAA1D,QAAQ,CAAG,KAAM,CAAAf,GAAG,CAAC+C,IAAI,CAAC,YAAYxB,SAAS,EAAE,CAAEkD,UAAU,CAAC,CACpE,MAAO,CAAA1D,QAAQ,CAACsB,IAAI,CACtB,CAAE,MAAOpB,KAAK,CAAE,CACdP,OAAO,CAACC,GAAG,CAAC,qBAAqB,CAAC,CAClC,KAAM,CAAA+D,OAAO,CAAG,CACdd,QAAQ,CAAE,UAAUlB,IAAI,CAACO,GAAG,CAAC,CAAC,EAAE,CAChC1B,SAAS,CACT,GAAGkD,UAAU,CACb9C,SAAS,CAAE,GAAI,CAAAe,IAAI,CAAC,CAAC,CAACC,WAAW,CAAC,CAAC,CACnCf,SAAS,CAAE,GAAI,CAAAc,IAAI,CAAC,CAAC,CAACC,WAAW,CAAC,CACpC,CAAC,CAED,GAAI,CAACgB,kBAAkB,CAACpC,SAAS,CAAC,CAAE,CAClCoC,kBAAkB,CAACpC,SAAS,CAAC,CAAG,EAAE,CACpC,CACAoC,kBAAkB,CAACpC,SAAS,CAAC,CAACqB,IAAI,CAAC8B,OAAO,CAAC,CAC3C,MAAO,CAAAA,OAAO,CAChB,CACF,CAAC,CAED;AACAC,gBAAgB,CAAE,KAAAA,CAAOpD,SAAS,CAAEqC,QAAQ,CAAEa,UAAU,GAAK,CAC3D/D,OAAO,CAACC,GAAG,CAAC,qBAAqB,CAAE,CAAEY,SAAS,CAAEqC,QAAS,CAAC,CAAC,CAE3D,GAAI,CACF,KAAM,CAAA7C,QAAQ,CAAG,KAAM,CAAAf,GAAG,CAACmD,GAAG,CAC5B,YAAY5B,SAAS,IAAIqC,QAAQ,EAAE,CACnCa,UACF,CAAC,CACD,MAAO,CAAA1D,QAAQ,CAACsB,IAAI,CACtB,CAAE,MAAOpB,KAAK,CAAE,CACdP,OAAO,CAACC,GAAG,CAAC,qBAAqB,CAAC,CAClC,KAAM,CAAAyD,KAAK,CAAGT,kBAAkB,CAACpC,SAAS,CAAC,EAAI,EAAE,CACjD,KAAM,CAAA6B,KAAK,CAAGgB,KAAK,CAACf,SAAS,CAACuB,IAAI,EAAIA,IAAI,CAAChB,QAAQ,GAAKA,QAAQ,CAAC,CAEjE,GAAIR,KAAK,GAAK,CAAC,CAAC,CAAE,CAChBO,kBAAkB,CAACpC,SAAS,CAAC,CAAC6B,KAAK,CAAC,CAAG,CACrC,GAAGO,kBAAkB,CAACpC,SAAS,CAAC,CAAC6B,KAAK,CAAC,CACvC,GAAGqB,UAAU,CACb7C,SAAS,CAAE,GAAI,CAAAc,IAAI,CAAC,CAAC,CAACC,WAAW,CAAC,CACpC,CAAC,CACD,MAAO,CAAAgB,kBAAkB,CAACpC,SAAS,CAAC,CAAC6B,KAAK,CAAC,CAC7C,CACA,KAAM,IAAI,CAAAE,KAAK,CAAC,iBAAiB,CAAC,CACpC,CACF,CAAC,CAED;AACAuB,gBAAgB,CAAE,KAAAA,CAAOtD,SAAS,CAAEqC,QAAQ,GAAK,CAC/ClD,OAAO,CAACC,GAAG,CAAC,sBAAsB,CAAE,CAAEY,SAAS,CAAEqC,QAAS,CAAC,CAAC,CAE5D,GAAI,CACF,KAAM,CAAA7C,QAAQ,CAAG,KAAM,CAAAf,GAAG,CAACwD,MAAM,CAAC,YAAYjC,SAAS,IAAIqC,QAAQ,EAAE,CAAC,CACtE,MAAO,CAAA7C,QAAQ,CAACsB,IAAI,CACtB,CAAE,MAAOpB,KAAK,CAAE,CACdP,OAAO,CAACC,GAAG,CAAC,qBAAqB,CAAC,CAClC,KAAM,CAAAyD,KAAK,CAAGT,kBAAkB,CAACpC,SAAS,CAAC,EAAI,EAAE,CACjD,KAAM,CAAA6B,KAAK,CAAGgB,KAAK,CAACf,SAAS,CAACuB,IAAI,EAAIA,IAAI,CAAChB,QAAQ,GAAKA,QAAQ,CAAC,CAEjE,GAAIR,KAAK,GAAK,CAAC,CAAC,CAAE,CAChBO,kBAAkB,CAACpC,SAAS,CAAC,CAACkC,MAAM,CAACL,KAAK,CAAE,CAAC,CAAC,CAC9C,MAAO,CAAEM,OAAO,CAAE,IAAK,CAAC,CAC1B,CACA,KAAM,IAAI,CAAAJ,KAAK,CAAC,iBAAiB,CAAC,CACpC,CACF,CACF,CAAC,CAED;AACA;AACA;AACA,MAAO,MAAM,CAAAwB,WAAW,CAAG,CACzB;AACAC,aAAa,CAAE,cAAAA,CAAOxD,SAAS,CAAEyD,cAAc,CAAuB,IAArB,CAAAC,WAAW,CAAAf,SAAA,CAAA/B,MAAA,IAAA+B,SAAA,MAAAC,SAAA,CAAAD,SAAA,IAAG,EAAE,CAC/DxD,OAAO,CAACC,GAAG,CAAC,sBAAsB,CAAE,CAClCY,SAAS,CACT2D,aAAa,CAAEF,cAAc,CAAC7C,MAAM,CACpC8C,WACF,CAAC,CAAC,CAEF,GAAI,CACF,KAAM,CAAAlE,QAAQ,CAAG,KAAM,CAAAf,GAAG,CAAC+C,IAAI,CAAC,aAAaxB,SAAS,WAAW,CAAE,CACjE4D,OAAO,CAAEH,cAAc,CACvBC,WACF,CAAC,CAAC,CACFvE,OAAO,CAACC,GAAG,CAAC,YAAY,CAAC,CACzB,MAAO,CAAAI,QAAQ,CAACsB,IAAI,CACtB,CAAE,MAAOpB,KAAK,CAAE,CACdP,OAAO,CAACC,GAAG,CAAC,wBAAwB,CAAC,CAErC;AACA,KAAM,CAAAyE,WAAW,CAAG,CAClB,CACEC,IAAI,CAAE,UAAU,CAChBvD,KAAK,CAAE,kCAAkC,CACzCwD,OAAO,CAAE,CACPC,OAAO,CAAE,GAAG,CACZC,WAAW,CAAE,GAAG,CAChBC,eAAe,CAAE,GAAG,CACpBC,UAAU,CAAE,GAAG,CACfC,gBAAgB,CAAE,GACpB,CAAC,CACDC,SAAS,CAAE,kCACb,CAAC,CACD,CACEP,IAAI,CAAE,UAAU,CAChBvD,KAAK,CAAE,8BAA8B,CACrCwD,OAAO,CAAE,CACPC,OAAO,CAAE,GAAG,CACZC,WAAW,CAAE,GAAG,CAChBC,eAAe,CAAE,GAAG,CACpBC,UAAU,CAAE,GAAG,CACfC,gBAAgB,CAAE,GACpB,CAAC,CACDC,SAAS,CAAE,mCACb,CAAC,CACD,CACEP,IAAI,CAAE,OAAO,CACbvD,KAAK,CAAE,+BAA+B,CACtCwD,OAAO,CAAE,CACPC,OAAO,CAAE,GAAG,CACZC,WAAW,CAAE,GAAG,CAChBC,eAAe,CAAE,GAAG,CACpBC,UAAU,CAAE,GAAG,CACfC,gBAAgB,CAAE,GACpB,CAAC,CACDC,SAAS,CAAE,wBACb,CAAC,CACD,CACEP,IAAI,CAAE,cAAc,CACpBvD,KAAK,CAAE,oCAAoC,CAC3CwD,OAAO,CAAE,CACPC,OAAO,CAAE,GAAG,CACZC,WAAW,CAAE,GAAG,CAChBC,eAAe,CAAE,GAAG,CACpBC,UAAU,CAAE,GAAG,CACfC,gBAAgB,CAAE,GACpB,CAAC,CACDC,SAAS,CAAE,4BACb,CAAC,CACD,CACEP,IAAI,CAAE,WAAW,CACjBvD,KAAK,CAAE,uCAAuC,CAC9CwD,OAAO,CAAE,CACPC,OAAO,CAAE,GAAG,CACZC,WAAW,CAAE,GAAG,CAChBC,eAAe,CAAE,GAAG,CACpBC,UAAU,CAAE,GAAG,CACfC,gBAAgB,CAAE,GACpB,CAAC,CACDC,SAAS,CAAE,6BACb,CAAC,CACF,CAED,MAAO,CACLlC,OAAO,CAAE,IAAI,CACbmC,MAAM,CAAET,WAAW,CACnBU,QAAQ,CAAE,CACRvE,SAAS,CACT2D,aAAa,CAAEF,cAAc,CAAC7C,MAAM,CACpC8C,WAAW,CACXc,cAAc,CAAE,MAAM,CACtBC,UAAU,CAAE,IAAI,CAChBC,KAAK,CAAE,yCACT,CAAC,CACDC,SAAS,CAAE,GAAI,CAAAxD,IAAI,CAAC,CAAC,CAACC,WAAW,CAAC,CACpC,CAAC,CACH,CACF,CACF,CAAC,CAED;AACA;AACA;AACA,MAAO,MAAM,CAAAwD,cAAc,CAAIlF,KAAK,EAAK,CACvC,GAAIA,KAAK,CAACF,QAAQ,CAAE,CAClB,KAAM,CAAEC,MAAM,CAAEqB,IAAK,CAAC,CAAGpB,KAAK,CAACF,QAAQ,CACvC,MAAO,CACLI,OAAO,CAAE,CAAAkB,IAAI,SAAJA,IAAI,iBAAJA,IAAI,CAAEpB,KAAK,GAAI,UAAUD,MAAM,GAAG,CAC3CA,MACF,CAAC,CACH,CAAC,IAAM,IAAIC,KAAK,CAACX,OAAO,CAAE,CACxB,MAAO,CACLa,OAAO,CAAE,iBAAiB,CAC1BH,MAAM,CAAE,CACV,CAAC,CACH,CAAC,IAAM,CACL,MAAO,CACLG,OAAO,CAAEF,KAAK,CAACE,OAAO,EAAI,mBAAmB,CAC7CH,MAAM,CAAE,CAAC,CACX,CAAC,CACH,CACF,CAAC,CAED;AACA;AACA;AACA,MAAO,MAAM,CAAAoF,OAAO,CAAG,CACrBC,eAAe,CAAEA,CAAA,GAAM,CACrB;AACA,MAAO,KAAI,CACb,CAAC,CAEDC,cAAc,CAAEA,CAAA,GAAM,CACpB;AACA,MAAO,CACLC,EAAE,CAAE,UAAU,CACdC,KAAK,CAAE,iBAAiB,CACxBhF,IAAI,CAAE,KACR,CAAC,CACH,CAAC,CAEDiF,MAAM,CAAE,KAAO,CAAAC,WAAW,EAAK,CAC7B;AACAhG,OAAO,CAACC,GAAG,CAAC,eAAe,CAAE+F,WAAW,CAAC,CACzC,MAAO,CAAEhD,OAAO,CAAE,IAAI,CAAEvC,OAAO,CAAE,gBAAiB,CAAC,CACrD,CAAC,CAEDwF,MAAM,CAAE,KAAO,CAAAC,QAAQ,EAAK,CAC1B;AACAlG,OAAO,CAACC,GAAG,CAAC,gBAAgB,CAAEiG,QAAQ,CAAC,CACvC,MAAO,CAAElD,OAAO,CAAE,IAAI,CAAEvC,OAAO,CAAE,iBAAkB,CAAC,CACtD,CAAC,CAED0F,OAAO,CAAE,KAAAA,CAAA,GAAY,CACnB;AACAnG,OAAO,CAACC,GAAG,CAAC,eAAe,CAAC,CAC5B,MAAO,CAAE+C,OAAO,CAAE,IAAK,CAAC,CAC1B,CAAC,CAEDoD,WAAW,CAAE,KAAO,CAAAC,gBAAgB,EAAK,CACvCrG,OAAO,CAACC,GAAG,CAAC,kBAAkB,CAAEoG,gBAAgB,CAAC,CACjD,MAAO,CAAErD,OAAO,CAAE,IAAI,CAAEvC,OAAO,CAAE,mBAAoB,CAAC,CACxD,CAAC,CAED6F,cAAc,CAAE,KAAO,CAAAR,KAAK,EAAK,CAC/B9F,OAAO,CAACC,GAAG,CAAC,oBAAoB,CAAE6F,KAAK,CAAC,CACxC,MAAO,CAAE9C,OAAO,CAAE,IAAI,CAAEvC,OAAO,CAAE,yBAA0B,CAAC,CAC9D,CAAC,CAED8F,eAAe,CAAE,KAAO,CAAAC,SAAS,EAAK,CACpCxG,OAAO,CAACC,GAAG,CAAC,mBAAmB,CAAEuG,SAAS,CAAC,CAC3C,MAAO,CAAExD,OAAO,CAAE,IAAI,CAAEvC,OAAO,CAAE,qBAAsB,CAAC,CAC1D,CACF,CAAC,CAED;AACA;AACA;AACA,MAAO,MAAM,CAAAgG,0BAA0B,CAAG,CACxC,CAAEZ,EAAE,CAAE,MAAM,CAAE/E,IAAI,CAAE,IAAI,CAAE4F,KAAK,CAAE,MAAM,CAAE3F,WAAW,CAAE,UAAW,CAAC,CAClE,CAAE8E,EAAE,CAAE,SAAS,CAAE/E,IAAI,CAAE,IAAI,CAAE4F,KAAK,CAAE,OAAO,CAAE3F,WAAW,CAAE,UAAW,CAAC,CACtE,CAAE8E,EAAE,CAAE,MAAM,CAAE/E,IAAI,CAAE,IAAI,CAAE4F,KAAK,CAAE,QAAQ,CAAE3F,WAAW,CAAE,YAAa,CAAC,CACtE,CAAE8E,EAAE,CAAE,QAAQ,CAAE/E,IAAI,CAAE,KAAK,CAAE4F,KAAK,CAAE,QAAQ,CAAE3F,WAAW,CAAE,QAAS,CAAC,CACrE,CAAE8E,EAAE,CAAE,SAAS,CAAE/E,IAAI,CAAE,IAAI,CAAE4F,KAAK,CAAE,MAAM,CAAE3F,WAAW,CAAE,YAAa,CAAC,CACxE,CAED,MAAO,MAAM,CAAA4F,WAAW,CAAG,CACzBC,iBAAiB,CAAE,KAAAA,CAAA,GAAY,CAC7B;AACA,MAAO,CAAEC,UAAU,CAAEJ,0BAA2B,CAAC,CACnD,CAAC,CAEDK,cAAc,CAAE,KAAO,CAAAC,YAAY,EAAK,CACtC/G,OAAO,CAACC,GAAG,CAAC,aAAa,CAAE8G,YAAY,CAAC,CACxC,MAAO,CACLlB,EAAE,CAAE,OAAO7D,IAAI,CAACO,GAAG,CAAC,CAAC,EAAE,CACvB,GAAGwE,YAAY,CACf9F,SAAS,CAAE,GAAI,CAAAe,IAAI,CAAC,CAAC,CAACC,WAAW,CAAC,CACpC,CAAC,CACH,CAAC,CAED+E,cAAc,CAAE,KAAAA,CAAOC,UAAU,CAAEF,YAAY,GAAK,CAClD/G,OAAO,CAACC,GAAG,CAAC,aAAa,CAAEgH,UAAU,CAAEF,YAAY,CAAC,CACpD,MAAO,CAAE/D,OAAO,CAAE,IAAK,CAAC,CAC1B,CAAC,CAEDkE,cAAc,CAAE,KAAO,CAAAD,UAAU,EAAK,CACpCjH,OAAO,CAACC,GAAG,CAAC,cAAc,CAAEgH,UAAU,CAAC,CACvC,MAAO,CAAEjE,OAAO,CAAE,IAAK,CAAC,CAC1B,CACF,CAAC,CAED,MAAO,MAAM,CAAAmE,kBAAkB,CAAG,CAChCC,qBAAqB,CAAE,KAAAA,CAAOvG,SAAS,CAAEoG,UAAU,GAAK,CACtDjH,OAAO,CAACC,GAAG,CAAC,kBAAkB,CAAEY,SAAS,CAAEoG,UAAU,CAAC,CACtD,MAAO,CAAEjE,OAAO,CAAE,IAAK,CAAC,CAC1B,CACF,CAAC,CAED;AACA;AACA;AACA,MAAO,MAAM,CAAAqE,gBAAgB,CAAG,CAC9BC,cAAc,CAAE,KAAAA,CAAOzG,SAAS,CAAEc,IAAI,GAAK,CACzC3B,OAAO,CAACC,GAAG,CAAC,gBAAgB,CAAEY,SAAS,CAAEc,IAAI,CAAC,CAC9C,MAAO,CACL4F,YAAY,CAAE,QAAQvF,IAAI,CAACO,GAAG,CAAC,CAAC,EAAE,CAClCjC,MAAM,CAAE,SACV,CAAC,CACH,CAAC,CAEDkH,kBAAkB,CAAE,KAAO,CAAAD,YAAY,EAAK,CAC1CvH,OAAO,CAACC,GAAG,CAAC,cAAc,CAAEsH,YAAY,CAAC,CACzC,MAAO,CACLjH,MAAM,CAAE,WAAW,CACnBmH,MAAM,CAAE,CAAEhH,OAAO,CAAE,KAAM,CAC3B,CAAC,CACH,CACF,CAAC,CAED;AACA;AACA;AACA,MAAO,MAAM,CAAAiH,eAAe,CAAG,QAAAA,CAACT,UAAU,CAAkD,IAAhD,CAAAU,cAAc,CAAAnE,SAAA,CAAA/B,MAAA,IAAA+B,SAAA,MAAAC,SAAA,CAAAD,SAAA,IAAGiD,0BAA0B,CACrF,KAAM,CAAAzF,QAAQ,CAAG2G,cAAc,CAAC7F,IAAI,CAAC8F,GAAG,EAAIA,GAAG,CAAC/B,EAAE,GAAKoB,UAAU,CAAC,CAClE,MAAO,CAAAjG,QAAQ,EAAI,CACjB6E,EAAE,CAAEoB,UAAU,CACdnG,IAAI,CAAE,QAAQ,CACd4F,KAAK,CAAE,MAAM,CACb3F,WAAW,CAAE,aACf,CAAC,CACH,CAAC,CAED,MAAO,MAAM,CAAA8G,uBAAuB,CAAInB,KAAK,EAAK,CAChD,KAAM,CAAAoB,QAAQ,CAAG,CACfC,IAAI,CAAE,0CAA0C,CAChDC,KAAK,CAAE,6CAA6C,CACpDC,MAAM,CAAE,gDAAgD,CACxDC,MAAM,CAAE,gDAAgD,CACxDC,IAAI,CAAE,0CAA0C,CAChDC,GAAG,CAAE,uCAAuC,CAC5CC,MAAM,CAAE,gDAAgD,CACxDC,MAAM,CAAE,gDAAgD,CACxDC,IAAI,CAAE,0CACR,CAAC,CACD,MAAO,CAAAT,QAAQ,CAACpB,KAAK,CAAC,EAAIoB,QAAQ,CAACS,IAAI,CACzC,CAAC,CAED,MAAO,MAAM,CAAAC,cAAc,CAAGA,CAACjH,QAAQ,CAAEkH,OAAO,GAAK,CACnD,GAAI,CAAAC,QAAQ,CAAG,CAAC,GAAGnH,QAAQ,CAAC,CAE5B;AACA,GAAIkH,OAAO,CAACzH,QAAQ,EAAIyH,OAAO,CAACzH,QAAQ,GAAK,KAAK,CAAE,CAClD0H,QAAQ,CAAGA,QAAQ,CAACC,MAAM,CAAC9G,OAAO,EAAIA,OAAO,CAACb,QAAQ,GAAKyH,OAAO,CAACzH,QAAQ,CAAC,CAC9E,CAEA;AACA,GAAIyH,OAAO,CAACG,WAAW,CAAE,CACvB,KAAM,CAAAC,KAAK,CAAGJ,OAAO,CAACG,WAAW,CAACE,WAAW,CAAC,CAAC,CAC/CJ,QAAQ,CAAGA,QAAQ,CAACC,MAAM,CAAC9G,OAAO,EAChCA,OAAO,CAACf,IAAI,CAACgI,WAAW,CAAC,CAAC,CAACC,QAAQ,CAACF,KAAK,CAAC,EACzChH,OAAO,CAACd,WAAW,EAAIc,OAAO,CAACd,WAAW,CAAC+H,WAAW,CAAC,CAAC,CAACC,QAAQ,CAACF,KAAK,CAAE,EACzEhH,OAAO,CAACV,IAAI,EAAIU,OAAO,CAACV,IAAI,CAAC6H,IAAI,CAACC,GAAG,EAAIA,GAAG,CAACH,WAAW,CAAC,CAAC,CAACC,QAAQ,CAACF,KAAK,CAAC,CAC7E,CAAC,CACH,CAEA;AACAH,QAAQ,CAACQ,IAAI,CAAC,CAACC,CAAC,CAAEC,CAAC,GAAK,CACtB,OAAQX,OAAO,CAACY,MAAM,EACpB,IAAK,MAAM,CACT,MAAO,CAAAF,CAAC,CAACrI,IAAI,CAACwI,aAAa,CAACF,CAAC,CAACtI,IAAI,CAAE,IAAI,CAAC,CAC3C,IAAK,SAAS,CACZ,MAAO,IAAI,CAAAkB,IAAI,CAACoH,CAAC,CAAClI,SAAS,EAAIkI,CAAC,CAACnI,SAAS,CAAC,CAAG,GAAI,CAAAe,IAAI,CAACmH,CAAC,CAACjI,SAAS,EAAIiI,CAAC,CAAClI,SAAS,CAAC,CACpF,IAAK,SAAS,CACd,QACE,MAAO,IAAI,CAAAe,IAAI,CAACoH,CAAC,CAACnI,SAAS,CAAC,CAAG,GAAI,CAAAe,IAAI,CAACmH,CAAC,CAAClI,SAAS,CAAC,CACxD,CACF,CAAC,CAAC,CAEF,MAAO,CAAAyH,QAAQ,CACjB,CAAC,CAED,MAAO,MAAM,CAAAa,gBAAgB,CAAI/H,KAAK,EAAK,CACzC,GAAI,CAACA,KAAK,EAAIA,KAAK,GAAK,CAAC,CAAE,MAAO,GAAG,CACrC,GAAIA,KAAK,CAAG,IAAI,CAAE,MAAO,CAAAA,KAAK,CAACgI,QAAQ,CAAC,CAAC,CACzC,GAAIhI,KAAK,CAAG,OAAO,CAAE,MAAO,GAAG,CAACA,KAAK,CAAG,IAAI,EAAEiI,OAAO,CAAC,CAAC,CAAC,GAAG,CAC3D,MAAO,GAAG,CAACjI,KAAK,CAAG,OAAO,EAAEiI,OAAO,CAAC,CAAC,CAAC,GAAG,CAC3C,CAAC,CAED,MAAO,MAAM,CAAAC,cAAc,CAAIC,KAAK,EAAK,CACvC,GAAI,CAACA,KAAK,EAAIA,KAAK,GAAK,CAAC,CAAE,MAAO,KAAK,CACvC,KAAM,CAAAC,KAAK,CAAG,CAAC,GAAG,CAAE,IAAI,CAAE,IAAI,CAAE,IAAI,CAAC,CACrC,KAAM,CAAAC,CAAC,CAAGC,IAAI,CAACC,KAAK,CAACD,IAAI,CAAC7J,GAAG,CAAC0J,KAAK,CAAC,CAAGG,IAAI,CAAC7J,GAAG,CAAC,IAAI,CAAC,CAAC,CACtD,MAAO,GAAG,CAAC0J,KAAK,CAAGG,IAAI,CAACE,GAAG,CAAC,IAAI,CAAEH,CAAC,CAAC,EAAEJ,OAAO,CAAC,CAAC,CAAC,IAAIG,KAAK,CAACC,CAAC,CAAC,EAAE,CAChE,CAAC,CAED,MAAO,MAAM,CAAAI,oBAAoB,CAAItG,WAAW,EAAK,CACnD,GAAI,CAACA,WAAW,EAAIA,WAAW,CAAClC,MAAM,GAAK,CAAC,CAAE,CAC5C,MAAO,CACLyI,UAAU,CAAE,CAAC,CACbC,WAAW,CAAE,CAAC,CACdC,SAAS,CAAE,CAAC,CACZvD,UAAU,CAAE,CAAC,CACf,CAAC,CACH,CAEA,KAAM,CAAAwD,KAAK,CAAG,CACZH,UAAU,CAAEvG,WAAW,CAAClC,MAAM,CAC9B0I,WAAW,CAAE,CAAC,CACdC,SAAS,CAAE,CAAC,CACZvD,UAAU,CAAE,CAAC,CACf,CAAC,CAEDlD,WAAW,CAAC2G,OAAO,CAACpG,IAAI,EAAI,CAC1B;AACA,KAAM,CAAAqG,aAAa,CAAG,CAACrG,IAAI,CAACd,OAAO,EAAI,EAAE,EAAE3B,MAAM,CACjD,KAAM,CAAA+I,eAAe,CAAGV,IAAI,CAACW,IAAI,CAACF,aAAa,CAAG,CAAC,CAAC,CACpDF,KAAK,CAACF,WAAW,EAAIK,eAAe,CAEpC;AACAH,KAAK,CAACD,SAAS,EAAI,GAAI,CAAAM,IAAI,CAAC,CAACxG,IAAI,CAACd,OAAO,EAAI,EAAE,CAAC,CAAC,CAACuH,IAAI,CAEtD;AACA,KAAM,CAAA3J,QAAQ,CAAGkD,IAAI,CAAClD,QAAQ,EAAI,eAAe,CACjD,GAAI,CAACqJ,KAAK,CAACxD,UAAU,CAAC7F,QAAQ,CAAC,CAAE,CAC/BqJ,KAAK,CAACxD,UAAU,CAAC7F,QAAQ,CAAC,CAAG,CAAEQ,KAAK,CAAE,CAAC,CAAEoJ,MAAM,CAAE,CAAC,CAAED,IAAI,CAAE,CAAE,CAAC,CAC/D,CACAN,KAAK,CAACxD,UAAU,CAAC7F,QAAQ,CAAC,CAACQ,KAAK,EAAE,CAClC6I,KAAK,CAACxD,UAAU,CAAC7F,QAAQ,CAAC,CAAC4J,MAAM,EAAIJ,eAAe,CACpDH,KAAK,CAACxD,UAAU,CAAC7F,QAAQ,CAAC,CAAC2J,IAAI,EAAI,GAAI,CAAAD,IAAI,CAAC,CAACxG,IAAI,CAACd,OAAO,EAAI,EAAE,CAAC,CAAC,CAACuH,IAAI,CACxE,CAAC,CAAC,CAEF,MAAO,CAAAN,KAAK,CACd,CAAC,CAED;AACA,MAAO,MAAM,CAAAQ,aAAa,CAAG,CAC3B,CAAEhF,EAAE,CAAE,MAAM,CAAE/E,IAAI,CAAE,KAAK,CAAEgK,KAAK,CAAE,aAAc,CAAC,CACjD,CAAEjF,EAAE,CAAE,OAAO,CAAE/E,IAAI,CAAE,KAAK,CAAEgK,KAAK,CAAE,cAAe,CAAC,CACnD,CAAEjF,EAAE,CAAE,QAAQ,CAAE/E,IAAI,CAAE,KAAK,CAAEgK,KAAK,CAAE,eAAgB,CAAC,CACrD,CAAEjF,EAAE,CAAE,QAAQ,CAAE/E,IAAI,CAAE,KAAK,CAAEgK,KAAK,CAAE,eAAgB,CAAC,CACrD,CAAEjF,EAAE,CAAE,MAAM,CAAE/E,IAAI,CAAE,KAAK,CAAEgK,KAAK,CAAE,aAAc,CAAC,CACjD,CAAEjF,EAAE,CAAE,KAAK,CAAE/E,IAAI,CAAE,KAAK,CAAEgK,KAAK,CAAE,YAAa,CAAC,CAC/C,CAAEjF,EAAE,CAAE,QAAQ,CAAE/E,IAAI,CAAE,KAAK,CAAEgK,KAAK,CAAE,eAAgB,CAAC,CACrD,CAAEjF,EAAE,CAAE,QAAQ,CAAE/E,IAAI,CAAE,IAAI,CAAEgK,KAAK,CAAE,eAAgB,CAAC,CACpD,CAAEjF,EAAE,CAAE,MAAM,CAAE/E,IAAI,CAAE,IAAI,CAAEgK,KAAK,CAAE,aAAc,CAAC,CACjD,CAED,cAAe,CAAAxL,GAAG","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}