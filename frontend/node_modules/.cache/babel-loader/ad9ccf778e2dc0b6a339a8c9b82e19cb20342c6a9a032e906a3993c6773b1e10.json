{"ast":null,"code":"var _jsxFileName = \"/Users/yeong-gwang/Documents/work/\\u1109\\u1165\\u110B\\u116E\\u11AF\\u1100\\u1167\\u11BC\\u110C\\u1166\\u1109\\u1175\\u11AB\\u1106\\u116E\\u11AB/ai_\\u110C\\u1166\\u1106\\u1169\\u11A8\\u1103\\u1161\\u11AF\\u1100\\u1175(\\u1109\\u116E)_\\u110B\\u116A\\u11AB\\u1109\\u1165\\u11BC\\u1107\\u1169\\u11AB_\\u1109\\u1173\\u1110\\u1173\\u1105\\u1175\\u1106\\u1175\\u11BC\\u1100\\u116E\\u1112\\u1167\\u11AB \\u1107\\u1169\\u11A8\\u1109\\u1161\\u1107\\u1169\\u11AB/frontend/src/components/ProjectDetail.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { useParams, useNavigate } from \"react-router-dom\";\nimport { toast } from \"react-hot-toast\";\nimport { ArrowLeftIcon, HomeIcon, UserIcon, CogIcon } from \"@heroicons/react/24/outline\";\nimport { projectAPI, promptCardAPI, handleAPIError } from \"../services/api\";\nimport LoadingSpinner from \"./LoadingSpinner\";\nimport PromptCardManager from \"./PromptCardManager\";\nimport ChatInterface from \"./ChatInterface\";\nimport { useApp } from \"../contexts/AppContext\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst ProjectDetail = () => {\n  _s();\n  const {\n    projectId\n  } = useParams();\n  const navigate = useNavigate();\n  const {\n    mode,\n    setMode\n  } = useApp();\n  const [project, setProject] = useState(null);\n  const [promptCards, setPromptCards] = useState([]);\n  const [loading, setLoading] = useState(true);\n  useEffect(() => {\n    // 모드가 선택되지 않았다면 모드 선택 페이지로 리다이렉트\n    if (!mode) {\n      toast.error(\"먼저 모드를 선택해주세요.\");\n      navigate(\"/\");\n      return;\n    }\n    loadProjectData();\n  }, [projectId, mode, navigate]);\n  const loadProjectData = async () => {\n    try {\n      setLoading(true);\n      const projectData = await projectAPI.getProject(projectId);\n      setProject(projectData);\n\n      // 사용자 모드일 때만 프롬프트 카드를 별도로 로드\n      // (관리자 모드에서는 PromptCardManager가 자체적으로 로드함)\n      if (mode === \"user\") {\n        try {\n          const promptCardsData = await promptCardAPI.getPromptCards(projectId);\n          setPromptCards(promptCardsData);\n        } catch (promptError) {\n          console.warn(\"프롬프트 카드 로드 실패:\", promptError);\n          setPromptCards([]);\n        }\n      }\n    } catch (error) {\n      console.error(\"프로젝트 로드 실패:\", error);\n      const errorInfo = handleAPIError(error);\n      toast.error(errorInfo.message);\n      navigate(\"/projects\");\n    } finally {\n      setLoading(false);\n    }\n  };\n  const handleModeChange = newMode => {\n    setMode(newMode);\n    // 모드 변경 후 현재 페이지 새로고침\n    window.location.reload();\n  };\n  const handleBackNavigation = () => {\n    navigate(\"/projects\");\n  };\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"min-h-screen bg-gray-50 flex items-center justify-center\",\n      children: [/*#__PURE__*/_jsxDEV(LoadingSpinner, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"ml-4 text-gray-600\",\n        children: mode === \"admin\" ? \"관리자 화면을 준비하고 있습니다...\" : \"채팅 화면을 준비하고 있습니다...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this);\n  }\n  if (!project) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"min-h-screen bg-gray-50 flex items-center justify-center\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-center\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"text-xl font-semibold text-gray-900 mb-4\",\n          children: \"\\uD504\\uB85C\\uC81D\\uD2B8\\uB97C \\uCC3E\\uC744 \\uC218 \\uC5C6\\uC2B5\\uB2C8\\uB2E4\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => navigate(\"/projects\"),\n          className: \"inline-flex items-center px-4 py-2 border border-transparent text-sm font-medium rounded-md text-blue-700 bg-blue-100 hover:bg-blue-200 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500\",\n          children: [/*#__PURE__*/_jsxDEV(ArrowLeftIcon, {\n            className: \"h-5 w-5 mr-2\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 13\n          }, this), \"\\uD504\\uB85C\\uC81D\\uD2B8 \\uBAA9\\uB85D\\uC73C\\uB85C\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"h-screen flex flex-col bg-gray-50\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex-shrink-0 bg-white border-b border-gray-200 px-4 py-3\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex items-center justify-between\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex items-center space-x-4\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleBackNavigation,\n            className: \"inline-flex items-center px-3 py-2 border border-gray-300 shadow-sm text-sm leading-4 font-medium rounded-md text-gray-700 bg-white hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500\",\n            children: [/*#__PURE__*/_jsxDEV(ArrowLeftIcon, {\n              className: \"h-4 w-4 mr-2\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 114,\n              columnNumber: 15\n            }, this), \"\\uBAA9\\uB85D\\uC73C\\uB85C\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 110,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex items-center\",\n            children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n              className: \"text-lg font-semibold text-gray-900\",\n              children: project.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 118,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: `ml-3 inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium ${mode === \"admin\" ? \"bg-green-100 text-green-800\" : \"bg-blue-100 text-blue-800\"}`,\n              children: mode === \"admin\" ? /*#__PURE__*/_jsxDEV(_Fragment, {\n                children: [/*#__PURE__*/_jsxDEV(CogIcon, {\n                  className: \"h-3 w-3 mr-1\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 130,\n                  columnNumber: 21\n                }, this), \"\\uAD00\\uB9AC\\uC790 \\uBAA8\\uB4DC\"]\n              }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n                children: [/*#__PURE__*/_jsxDEV(UserIcon, {\n                  className: \"h-3 w-3 mr-1\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 135,\n                  columnNumber: 21\n                }, this), \"\\uC0AC\\uC6A9\\uC790 \\uBAA8\\uB4DC\"]\n              }, void 0, true)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 121,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 117,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex items-center space-x-2\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => handleModeChange(mode === \"admin\" ? \"user\" : \"admin\"),\n            className: \"inline-flex items-center px-3 py-2 border border-gray-300 shadow-sm text-sm leading-4 font-medium rounded-md text-gray-700 bg-white hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500\",\n            children: mode === \"admin\" ? /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: [/*#__PURE__*/_jsxDEV(UserIcon, {\n                className: \"h-4 w-4 mr-2\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 153,\n                columnNumber: 19\n              }, this), \"\\uC0AC\\uC6A9\\uC790 \\uBAA8\\uB4DC\\uB85C\"]\n            }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: [/*#__PURE__*/_jsxDEV(CogIcon, {\n                className: \"h-4 w-4 mr-2\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 158,\n                columnNumber: 19\n              }, this), \"\\uAD00\\uB9AC\\uC790 \\uBAA8\\uB4DC\\uB85C\"]\n            }, void 0, true)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 145,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex-1 overflow-hidden\",\n      children: mode === \"admin\" ?\n      /*#__PURE__*/\n      // 관리자 모드: 프롬프트 카드 관리 + 채팅\n      _jsxDEV(PromptCardManager, {\n        projectId: projectId,\n        projectName: project.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 11\n      }, this) :\n      /*#__PURE__*/\n      // 사용자 모드: 채팅만\n      _jsxDEV(\"div\", {\n        className: \"h-full bg-white\",\n        children: /*#__PURE__*/_jsxDEV(ChatInterface, {\n          projectId: projectId,\n          projectName: project.name,\n          promptCards: promptCards\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 175,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 105,\n    columnNumber: 5\n  }, this);\n};\n_s(ProjectDetail, \"dIjtRmqHV1zx66muPTd3IzODaWk=\", false, function () {\n  return [useParams, useNavigate, useApp];\n});\n_c = ProjectDetail;\nexport default ProjectDetail;\nvar _c;\n$RefreshReg$(_c, \"ProjectDetail\");","map":{"version":3,"names":["React","useState","useEffect","useParams","useNavigate","toast","ArrowLeftIcon","HomeIcon","UserIcon","CogIcon","projectAPI","promptCardAPI","handleAPIError","LoadingSpinner","PromptCardManager","ChatInterface","useApp","jsxDEV","_jsxDEV","Fragment","_Fragment","ProjectDetail","_s","projectId","navigate","mode","setMode","project","setProject","promptCards","setPromptCards","loading","setLoading","error","loadProjectData","projectData","getProject","promptCardsData","getPromptCards","promptError","console","warn","errorInfo","message","handleModeChange","newMode","window","location","reload","handleBackNavigation","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","name","projectName","_c","$RefreshReg$"],"sources":["/Users/yeong-gwang/Documents/work/서울경제신문/ai_제목달기(수)_완성본_스트리밍구현 복사본/frontend/src/components/ProjectDetail.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { useParams, useNavigate } from \"react-router-dom\";\nimport { toast } from \"react-hot-toast\";\nimport {\n  ArrowLeftIcon,\n  HomeIcon,\n  UserIcon,\n  CogIcon,\n} from \"@heroicons/react/24/outline\";\nimport { projectAPI, promptCardAPI, handleAPIError } from \"../services/api\";\nimport LoadingSpinner from \"./LoadingSpinner\";\nimport PromptCardManager from \"./PromptCardManager\";\nimport ChatInterface from \"./ChatInterface\";\nimport { useApp } from \"../contexts/AppContext\";\n\nconst ProjectDetail = () => {\n  const { projectId } = useParams();\n  const navigate = useNavigate();\n  const { mode, setMode } = useApp();\n  const [project, setProject] = useState(null);\n  const [promptCards, setPromptCards] = useState([]);\n  const [loading, setLoading] = useState(true);\n\n  useEffect(() => {\n    // 모드가 선택되지 않았다면 모드 선택 페이지로 리다이렉트\n    if (!mode) {\n      toast.error(\"먼저 모드를 선택해주세요.\");\n      navigate(\"/\");\n      return;\n    }\n\n    loadProjectData();\n  }, [projectId, mode, navigate]);\n\n  const loadProjectData = async () => {\n    try {\n      setLoading(true);\n      const projectData = await projectAPI.getProject(projectId);\n      setProject(projectData);\n\n      // 사용자 모드일 때만 프롬프트 카드를 별도로 로드\n      // (관리자 모드에서는 PromptCardManager가 자체적으로 로드함)\n      if (mode === \"user\") {\n        try {\n          const promptCardsData = await promptCardAPI.getPromptCards(projectId);\n          setPromptCards(promptCardsData);\n        } catch (promptError) {\n          console.warn(\"프롬프트 카드 로드 실패:\", promptError);\n          setPromptCards([]);\n        }\n      }\n    } catch (error) {\n      console.error(\"프로젝트 로드 실패:\", error);\n      const errorInfo = handleAPIError(error);\n      toast.error(errorInfo.message);\n      navigate(\"/projects\");\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const handleModeChange = (newMode) => {\n    setMode(newMode);\n    // 모드 변경 후 현재 페이지 새로고침\n    window.location.reload();\n  };\n\n  const handleBackNavigation = () => {\n    navigate(\"/projects\");\n  };\n\n  if (loading) {\n    return (\n      <div className=\"min-h-screen bg-gray-50 flex items-center justify-center\">\n        <LoadingSpinner />\n        <div className=\"ml-4 text-gray-600\">\n          {mode === \"admin\"\n            ? \"관리자 화면을 준비하고 있습니다...\"\n            : \"채팅 화면을 준비하고 있습니다...\"}\n        </div>\n      </div>\n    );\n  }\n\n  if (!project) {\n    return (\n      <div className=\"min-h-screen bg-gray-50 flex items-center justify-center\">\n        <div className=\"text-center\">\n          <h2 className=\"text-xl font-semibold text-gray-900 mb-4\">\n            프로젝트를 찾을 수 없습니다\n          </h2>\n          <button\n            onClick={() => navigate(\"/projects\")}\n            className=\"inline-flex items-center px-4 py-2 border border-transparent text-sm font-medium rounded-md text-blue-700 bg-blue-100 hover:bg-blue-200 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500\"\n          >\n            <ArrowLeftIcon className=\"h-5 w-5 mr-2\" />\n            프로젝트 목록으로\n          </button>\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"h-screen flex flex-col bg-gray-50\">\n      {/* 상단 네비게이션 바 */}\n      <div className=\"flex-shrink-0 bg-white border-b border-gray-200 px-4 py-3\">\n        <div className=\"flex items-center justify-between\">\n          <div className=\"flex items-center space-x-4\">\n            <button\n              onClick={handleBackNavigation}\n              className=\"inline-flex items-center px-3 py-2 border border-gray-300 shadow-sm text-sm leading-4 font-medium rounded-md text-gray-700 bg-white hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500\"\n            >\n              <ArrowLeftIcon className=\"h-4 w-4 mr-2\" />\n              목록으로\n            </button>\n            <div className=\"flex items-center\">\n              <h1 className=\"text-lg font-semibold text-gray-900\">\n                {project.name}\n              </h1>\n              <span\n                className={`ml-3 inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium ${\n                  mode === \"admin\"\n                    ? \"bg-green-100 text-green-800\"\n                    : \"bg-blue-100 text-blue-800\"\n                }`}\n              >\n                {mode === \"admin\" ? (\n                  <>\n                    <CogIcon className=\"h-3 w-3 mr-1\" />\n                    관리자 모드\n                  </>\n                ) : (\n                  <>\n                    <UserIcon className=\"h-3 w-3 mr-1\" />\n                    사용자 모드\n                  </>\n                )}\n              </span>\n            </div>\n          </div>\n\n          {/* 모드 변경 버튼 */}\n          <div className=\"flex items-center space-x-2\">\n            <button\n              onClick={() =>\n                handleModeChange(mode === \"admin\" ? \"user\" : \"admin\")\n              }\n              className=\"inline-flex items-center px-3 py-2 border border-gray-300 shadow-sm text-sm leading-4 font-medium rounded-md text-gray-700 bg-white hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500\"\n            >\n              {mode === \"admin\" ? (\n                <>\n                  <UserIcon className=\"h-4 w-4 mr-2\" />\n                  사용자 모드로\n                </>\n              ) : (\n                <>\n                  <CogIcon className=\"h-4 w-4 mr-2\" />\n                  관리자 모드로\n                </>\n              )}\n            </button>\n          </div>\n        </div>\n      </div>\n\n      {/* 메인 콘텐츠 */}\n      <div className=\"flex-1 overflow-hidden\">\n        {mode === \"admin\" ? (\n          // 관리자 모드: 프롬프트 카드 관리 + 채팅\n          <PromptCardManager projectId={projectId} projectName={project.name} />\n        ) : (\n          // 사용자 모드: 채팅만\n          <div className=\"h-full bg-white\">\n            <ChatInterface\n              projectId={projectId}\n              projectName={project.name}\n              promptCards={promptCards}\n            />\n          </div>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default ProjectDetail;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}