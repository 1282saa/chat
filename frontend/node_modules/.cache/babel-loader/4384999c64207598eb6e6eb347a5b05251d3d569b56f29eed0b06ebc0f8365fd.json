{"ast":null,"code":"var _jsxFileName = \"/Users/yeong-gwang/Documents/work/\\u1109\\u1165\\u110B\\u116E\\u11AF\\u1100\\u1167\\u11BC\\u110C\\u1166\\u1109\\u1175\\u11AB\\u1106\\u116E\\u11AB/ai_\\u110C\\u1166\\u1106\\u1169\\u11A8\\u1103\\u1161\\u11AF\\u1100\\u1175/frontend/src/components/PromptCardManager.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useCallback } from \"react\";\nimport { toast } from \"react-hot-toast\";\nimport { PlusIcon, PencilIcon, TrashIcon, CheckCircleIcon, ExclamationTriangleIcon, Bars3Icon\n// ChatBubbleLeftRightIcon 제거\n} from \"@heroicons/react/24/outline\";\nimport { promptCardAPI, handleAPIError } from \"../services/api\";\nimport PromptEditModal from \"./prompts/PromptEditModal\";\nimport ChatInterface from \"./ChatInterface\";\nimport PromptCard from \"./prompts/PromptCard\";\nimport PromptEditForm from \"./prompts/PromptEditForm\";\nimport { SidebarSkeleton } from \"./SkeletonLoader\";\n\n// AI 워크플로우 기반 프롬프트 템플릿\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst FIXED_PROMPT_CATEGORIES = [{\n  id: \"instruction\",\n  name: \"역할 및 목표\",\n  order: 1,\n  color: \"bg-slate-100/80 text-slate-700 border-slate-200/80\",\n  icon: \"\",\n  description: \"AI의 역할, 정체성, 핵심 목표를 명확히 정의합니다\",\n  defaultContent: \"당신은 전문적인 기사 제목 생성 AI입니다.\\n목표: 독자의 관심을 끌고 정확한 정보를 전달하는 제목 생성\",\n  placeholder: \"AI의 역할과 주요 목표를 구체적으로 작성하세요...\"\n}, {\n  id: \"knowledge\",\n  name: \"지식 베이스\",\n  order: 2,\n  color: \"bg-slate-100/80 text-slate-700 border-slate-200/80\",\n  icon: \"\",\n  description: \"작업 수행에 필요한 핵심 지식과 원칙을 제공합니다\",\n  defaultContent: \"제목 작성 원칙:\\n- 간결하고 명확한 표현\\n- 핵심 키워드 포함\\n- 독자의 관심 유발\",\n  placeholder: \"작업에 필요한 핵심 지식과 원칙을 작성하세요...\"\n}, {\n  id: \"secondary\",\n  name: \"CoT (사고 과정)\",\n  order: 3,\n  color: \"bg-slate-100/80 text-slate-700 border-slate-200/80\",\n  icon: \"\",\n  description: \"단계별 추론 과정을 통해 사고의 투명성을 확보합니다\",\n  defaultContent: \"다음 단계로 사고하세요:\\n1. 기사의 핵심 내용 파악\\n2. 주요 키워드 추출\\n3. 독자 관점에서 흥미도 평가\\n4. 제목 후보 생성\\n5. 최적 제목 선택\",\n  placeholder: \"단계별 사고 과정을 구체적으로 작성하세요...\",\n  isCoT: true\n}, {\n  id: \"style_guide\",\n  name: \"스타일 가이드\",\n  order: 4,\n  color: \"bg-slate-100/80 text-slate-700 border-slate-200/80\",\n  icon: \"\",\n  description: \"일관된 스타일과 형식을 유지하기 위한 가이드라인\",\n  defaultContent: \"스타일 요구사항:\\n- 길이: 15-25자 권장\\n- 톤: 전문적이면서 친근\\n- 형식: 명사형 종결\",\n  placeholder: \"스타일과 형식 요구사항을 작성하세요...\"\n}, {\n  id: \"validation\",\n  name: \"ReAct (추론+행동)\",\n  order: 5,\n  color: \"bg-slate-100/80 text-slate-700 border-slate-200/80\",\n  icon: \"\",\n  description: \"추론과 행동을 결합하여 더 정확한 결과를 도출합니다\",\n  defaultContent: \"Thought: 이 기사의 핵심은 무엇인가?\\nAction: 키워드를 추출하고 중요도를 평가한다\\nObservation: 추출된 정보를 바탕으로 제목을 구성한다\\nThought: 생성된 제목이 요구사항을 충족하는가?\\nAction: 필요시 수정하고 최종 검증한다\",\n  placeholder: \"Thought/Action/Observation 패턴으로 작성하세요...\",\n  isReAct: true\n}, {\n  id: \"enhancement\",\n  name: \"품질 검증\",\n  order: 6,\n  color: \"bg-slate-100/80 text-slate-700 border-slate-200/80\",\n  icon: \"\",\n  description: \"최종 결과물의 품질을 검증하고 개선합니다\",\n  defaultContent: \"품질 검증 기준:\\n- 정확성: 기사 내용과 일치\\n- 매력도: 독자 관심 유발\\n- 적절성: 매체 성격에 부합\\n- 완성도: 문법과 표현의 정확성\",\n  placeholder: \"품질 검증 기준과 개선 방안을 작성하세요...\"\n}];\n\n// 프롬프트 편집 모달 (이름 변경)\nconst PromptFormModal = ({\n  isOpen,\n  onSubmit,\n  onCancel,\n  initialData\n}) => {\n  if (!isOpen) return null;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50 p-4\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bg-white rounded-lg w-full max-w-lg max-h-[80vh] overflow-y-auto\",\n      children: /*#__PURE__*/_jsxDEV(PromptEditForm, {\n        onSubmit: onSubmit,\n        onCancel: onCancel,\n        initialData: initialData,\n        isModal: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 96,\n    columnNumber: 5\n  }, this);\n};\n_c = PromptFormModal;\nconst PromptCardManager = ({\n  projectId,\n  onCardsChanged,\n  projectName\n}) => {\n  _s();\n  // 상태 관리\n  const [promptCards, setPromptCards] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [showForm, setShowForm] = useState(false);\n  const [editingCard, setEditingCard] = useState(null);\n  // savedChats, showSavedChats 상태 제거\n\n  // 프롬프트 카드 로드 및 기본 템플릿 생성\n  const loadPromptCards = useCallback(async () => {\n    try {\n      setLoading(true);\n      // include_content=true로 S3에서 실제 프롬프트 내용 로드\n      const response = await promptCardAPI.getPromptCards(projectId, true, false);\n\n      // API 응답 구조 확인 및 안전한 처리\n      let cards = [];\n      if (Array.isArray(response)) {\n        cards = response;\n      } else if (response && Array.isArray(response.promptCards)) {\n        cards = response.promptCards;\n      } else if (response && Array.isArray(response.data)) {\n        cards = response.data;\n      } else {\n        console.warn(\"Unexpected API response structure:\", response);\n        cards = [];\n      }\n\n      // 고정된 템플릿 카드들과 기존 카드들을 매칭\n      const templateCards = FIXED_PROMPT_CATEGORIES.map(template => {\n        const existingCard = cards.find(card => card.category === template.id);\n        if (existingCard) {\n          var _existingCard$prompt_, _existingCard$prompt_2;\n          console.log(`🔍 기존 카드 발견 (${template.name}):`, {\n            promptId: existingCard.promptId,\n            category: existingCard.category,\n            prompt_text_length: ((_existingCard$prompt_ = existingCard.prompt_text) === null || _existingCard$prompt_ === void 0 ? void 0 : _existingCard$prompt_.length) || 0,\n            prompt_text_preview: ((_existingCard$prompt_2 = existingCard.prompt_text) === null || _existingCard$prompt_2 === void 0 ? void 0 : _existingCard$prompt_2.substring(0, 50)) + \"...\",\n            s3Key: existingCard.s3Key\n          });\n\n          // 기존 카드가 있으면 해당 카드 사용 (isTemplate 플래그 제거)\n          return {\n            ...existingCard,\n            // 템플릿의 UI 정보만 사용 (텍스트 내용은 기존 카드 우선)\n            name: template.name,\n            order: template.order,\n            color: template.color,\n            icon: template.icon,\n            description: template.description,\n            placeholder: template.placeholder,\n            title: existingCard.title || `${template.name} 프롬프트`,\n            prompt_text: existingCard.prompt_text || template.defaultContent,\n            // S3에서 로드된 텍스트 우선\n            isTemplate: false // 실제 카드는 템플릿이 아님\n          };\n        } else {\n          // 기존 카드가 없으면 템플릿으로 기본 카드 생성\n          return {\n            id: `template-${template.id}`,\n            promptId: `template-${template.id}`,\n            title: `${template.name} 프롬프트`,\n            category: template.id,\n            prompt_text: template.defaultContent,\n            model_name: \"claude-3-5-sonnet-20241022\",\n            temperature: 0.7,\n            enabled: true,\n            step_order: template.order,\n            isTemplate: true,\n            // 템플릿 카드임을 표시\n            ...template\n          };\n        }\n      });\n\n      // 순서대로 정렬\n      templateCards.sort((a, b) => (a.order || 999) - (b.order || 999));\n      setPromptCards(templateCards);\n    } catch (error) {\n      const errorInfo = handleAPIError(error);\n      toast.error(`프롬프트 카드 로딩 실패: ${errorInfo.message}`);\n\n      // 오류 시에도 기본 템플릿 카드들 표시\n      const defaultCards = FIXED_PROMPT_CATEGORIES.map(template => ({\n        id: `template-${template.id}`,\n        promptId: `template-${template.id}`,\n        title: `${template.name} 프롬프트`,\n        category: template.id,\n        prompt_text: template.defaultContent,\n        model_name: \"claude-3-5-sonnet-20241022\",\n        temperature: 0.7,\n        enabled: true,\n        step_order: template.order,\n        isTemplate: true,\n        ...template\n      }));\n      setPromptCards(defaultCards);\n    } finally {\n      setLoading(false);\n    }\n  }, [projectId]);\n  useEffect(() => {\n    loadPromptCards();\n    // 저장된 대화 로드 코드 제거\n  }, [loadPromptCards, projectId]);\n\n  // 카드 업데이트\n  const handleUpdateCard = async cardData => {\n    try {\n      var _editingCard$promptId;\n      console.log(\"📝 프롬프트 카드 업데이트 시작:\", {\n        editingCard,\n        cardData\n      });\n      if (editingCard && editingCard.promptId && !editingCard.promptId.startsWith('template-')) {\n        // 실제 기존 카드 편집\n        const updateData = {\n          ...cardData,\n          category: editingCard.category,\n          title: editingCard.title,\n          step_order: editingCard.step_order || editingCard.order\n        };\n        console.log(\"🔄 기존 카드 수정:\", {\n          projectId,\n          promptId: editingCard.promptId,\n          updateData\n        });\n        await promptCardAPI.updatePromptCard(projectId, editingCard.promptId, updateData);\n        toast.success(\"프롬프트 카드가 수정되었습니다!\");\n      } else if (editingCard && (editingCard.isTemplate || (_editingCard$promptId = editingCard.promptId) !== null && _editingCard$promptId !== void 0 && _editingCard$promptId.startsWith('template-'))) {\n        // 템플릿 카드를 실제 카드로 생성\n        const newCardData = {\n          ...cardData,\n          category: editingCard.category,\n          title: editingCard.title,\n          step_order: editingCard.order\n        };\n        console.log(\"✨ 템플릿에서 새 카드 생성:\", {\n          projectId,\n          newCardData\n        });\n        await promptCardAPI.createPromptCard(projectId, newCardData);\n        toast.success(\"프롬프트 카드가 생성되었습니다!\");\n      } else {\n        // 새 카드 생성\n        const newCardData = {\n          ...cardData,\n          category: \"instruction\",\n          // 기본 카테고리\n          title: \"새 프롬프트 카드\",\n          step_order: 1\n        };\n        console.log(\"🆕 완전히 새로운 카드 생성:\", {\n          projectId,\n          newCardData\n        });\n        await promptCardAPI.createPromptCard(projectId, newCardData);\n        toast.success(\"프롬프트 카드가 생성되었습니다!\");\n      }\n      await loadPromptCards();\n      setShowForm(false);\n      setEditingCard(null);\n      if (onCardsChanged) onCardsChanged();\n    } catch (error) {\n      console.error(\"❌ 프롬프트 카드 업데이트 실패:\", error);\n      const errorInfo = handleAPIError(error);\n      toast.error(`카드 ${editingCard ? \"수정\" : \"생성\"} 실패: ${errorInfo.message}`);\n    }\n  };\n\n  // 카드 토글 (최적화 UI)\n  const handleToggleCard = async (promptId, enabled) => {\n    // promptCards가 배열인지 확인\n    if (!Array.isArray(promptCards)) {\n      console.error(\"promptCards is not an array:\", promptCards);\n      return;\n    }\n\n    // 낙관적 업데이트: 즉시 UI 반영\n    const originalCards = [...promptCards];\n    const updatedCards = promptCards.map(card => (card.promptId || card.id) === promptId ? {\n      ...card,\n      enabled\n    } : card);\n    setPromptCards(updatedCards);\n    try {\n      // 템플릿 카드가 아닌 경우에만 API 호출\n      const card = promptCards.find(c => (c.promptId || c.id) === promptId);\n      if (card && !card.isTemplate) {\n        await promptCardAPI.updatePromptCard(projectId, promptId, {\n          enabled\n        });\n      }\n      if (onCardsChanged) onCardsChanged();\n    } catch (error) {\n      // 실패 시 복원\n      setPromptCards(originalCards);\n      const errorInfo = handleAPIError(error);\n      toast.error(`카드 상태 변경 실패: ${errorInfo.message}`);\n    }\n  };\n\n  // 카드 삭제 또는 초기화\n  const handleDeleteCard = async promptId => {\n    const card = promptCards.find(c => (c.promptId || c.id) === promptId);\n    if (card && card.isTemplate) {\n      if (!window.confirm(\"이 프롬프트를 기본값으로 초기화하시겠습니까?\")) {\n        return;\n      }\n      // 템플릿 카드는 기본값으로 초기화\n      const template = FIXED_PROMPT_CATEGORIES.find(t => t.id === card.category);\n      if (template) {\n        const updatedCards = promptCards.map(c => (c.promptId || c.id) === promptId ? {\n          ...c,\n          prompt_text: template.defaultContent\n        } : c);\n        setPromptCards(updatedCards);\n        toast.success(\"프롬프트가 기본값으로 초기화되었습니다!\");\n      }\n      return;\n    }\n    if (!window.confirm(\"정말로 이 프롬프트 카드를 삭제하시겠습니까?\")) {\n      return;\n    }\n    try {\n      await promptCardAPI.deletePromptCard(projectId, promptId);\n      await loadPromptCards();\n      toast.success(\"프롬프트 카드가 삭제되었습니다!\");\n      if (onCardsChanged) onCardsChanged();\n    } catch (error) {\n      const errorInfo = handleAPIError(error);\n      toast.error(`카드 삭제 실패: ${errorInfo.message}`);\n    }\n  };\n\n  // 편집 모드 시작\n  const handleEditCard = card => {\n    setEditingCard(card);\n    setShowForm(true);\n  };\n\n  // 폼 취소\n  const handleCancelForm = () => {\n    setShowForm(false);\n    setEditingCard(null);\n  };\n\n  // deleteSavedChat 함수 제거\n\n  // promptCards가 배열인지 확인하고 안전하게 처리\n  const safePromptCards = Array.isArray(promptCards) ? promptCards : [];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flex h-screen bg-gray-50\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex-1 min-w-0 relative p-3 lg:pr-2\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"absolute top-6 right-6 z-10 lg:hidden\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"p-3 text-slate-500 hover:text-slate-700 hover:bg-white/80 hover:shadow-lg rounded-xl backdrop-blur-sm transition-all duration-300\",\n          children: /*#__PURE__*/_jsxDEV(Bars3Icon, {\n            className: \"h-5 w-5\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 379,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 378,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 377,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"h-full bg-white rounded-lg border border-gray-200 overflow-hidden\",\n        children: /*#__PURE__*/_jsxDEV(ChatInterface, {\n          projectId: projectId,\n          projectName: projectName,\n          promptCards: safePromptCards\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 384,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 383,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 375,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"w-[350px] flex flex-col hidden lg:flex p-3 pl-2\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"h-full bg-white rounded-lg border border-gray-200 flex flex-col overflow-hidden\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex-shrink-0 p-3 border-b border-gray-200\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex items-center justify-between mb-2\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"flex items-center\",\n              children: /*#__PURE__*/_jsxDEV(\"h3\", {\n                className: \"text-sm font-medium text-blue-600\",\n                children: \"\\uD504\\uB86C\\uD504\\uD2B8 \\uCE74\\uB4DC\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 399,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 398,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"text-xs text-gray-500 bg-gray-100 px-2 py-1 rounded-full\",\n              children: [safePromptCards.filter(card => card.enabled).length, \"/\", safePromptCards.length]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 403,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 397,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"text-xs text-gray-600\",\n            children: \"\\uAC01 \\uCE74\\uD14C\\uACE0\\uB9AC\\uBCC4 \\uD504\\uB86C\\uD504\\uD2B8\\uB97C \\uC124\\uC815\\uD558\\uC138\\uC694\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 408,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 396,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex-1 overflow-y-auto p-3\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"space-y-2\",\n            children: loading ? /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"text-center py-8\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"animate-spin rounded-full h-8 w-8 border-b-2 border-blue-600 mx-auto\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 419,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"text-sm text-gray-500 mt-2\",\n                children: \"\\uB85C\\uB529 \\uC911...\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 420,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 418,\n              columnNumber: 17\n            }, this) : safePromptCards.length === 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"text-center py-8\",\n              children: [/*#__PURE__*/_jsxDEV(ExclamationTriangleIcon, {\n                className: \"h-12 w-12 text-gray-300 mx-auto mb-3\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 424,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"text-sm text-gray-500\",\n                children: \"\\uD504\\uB86C\\uD504\\uD2B8 \\uCE74\\uB4DC\\uAC00 \\uC5C6\\uC2B5\\uB2C8\\uB2E4\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 425,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"text-xs text-gray-400 mt-1\",\n                children: \"\\uAE30\\uBCF8 \\uD15C\\uD50C\\uB9BF\\uC744 \\uC0DD\\uC131\\uD558\\uAC70\\uB098 \\uC0C8 \\uCE74\\uB4DC\\uB97C \\uCD94\\uAC00\\uD574\\uC8FC\\uC138\\uC694\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 428,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => handleUpdateCard({\n                  // Changed from handleCreateCard to handleUpdateCard\n                  category: \"instruction\",\n                  title: \"새 프롬프트 카드\",\n                  step_order: 1\n                }),\n                className: \"mt-3 px-3 py-1 bg-blue-600 text-white text-xs rounded hover:bg-blue-700 transition-colors\",\n                children: \"\\uCCAB \\uBC88\\uC9F8 \\uCE74\\uB4DC \\uB9CC\\uB4E4\\uAE30\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 431,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 423,\n              columnNumber: 17\n            }, this) : safePromptCards.map(card => {\n              var _FIXED_PROMPT_CATEGOR, _FIXED_PROMPT_CATEGOR2;\n              return /*#__PURE__*/_jsxDEV(\"div\", {\n                className: `bg-white border rounded-lg p-3 hover:border-gray-300 transition-colors ${card.enabled ? \"border-green-200\" : \"border-gray-200\"}`,\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"flex items-start justify-between\",\n                  children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"flex-1 min-w-0\",\n                    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"flex items-center gap-2 mb-1\",\n                      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n                        className: \"text-sm font-medium text-gray-900 truncate\",\n                        children: card.title || `${((_FIXED_PROMPT_CATEGOR = FIXED_PROMPT_CATEGORIES.find(cat => cat.id === card.category)) === null || _FIXED_PROMPT_CATEGOR === void 0 ? void 0 : _FIXED_PROMPT_CATEGOR.name) || card.category} 프롬프트`\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 456,\n                        columnNumber: 27\n                      }, this), card.enabled ? /*#__PURE__*/_jsxDEV(CheckCircleIcon, {\n                        className: \"h-4 w-4 text-green-500 flex-shrink-0\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 465,\n                        columnNumber: 29\n                      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n                        className: \"h-4 w-4 rounded-full border border-gray-300 flex-shrink-0\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 467,\n                        columnNumber: 29\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 455,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                      className: \"text-xs text-gray-500\",\n                      children: ((_FIXED_PROMPT_CATEGOR2 = FIXED_PROMPT_CATEGORIES.find(cat => cat.id === card.category)) === null || _FIXED_PROMPT_CATEGOR2 === void 0 ? void 0 : _FIXED_PROMPT_CATEGOR2.name) || card.category\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 470,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                      className: \"text-xs text-gray-400 mt-1\",\n                      children: [\"Step \", card.step_order || card.stepOrder || 1]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 475,\n                      columnNumber: 25\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 454,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"flex items-center gap-1 ml-2\",\n                    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                      onClick: () => handleEditCard(card),\n                      className: \"p-1 text-gray-400 hover:text-blue-600 transition-colors\",\n                      title: \"\\uD3B8\\uC9D1\",\n                      children: /*#__PURE__*/_jsxDEV(PencilIcon, {\n                        className: \"h-4 w-4\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 485,\n                        columnNumber: 27\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 480,\n                      columnNumber: 25\n                    }, this), !card.isTemplate && /*#__PURE__*/_jsxDEV(\"button\", {\n                      onClick: () => handleDeleteCard(card.promptId || card.id),\n                      className: \"p-1 text-gray-400 hover:text-red-600 transition-colors\",\n                      title: \"\\uC0AD\\uC81C\",\n                      children: /*#__PURE__*/_jsxDEV(TrashIcon, {\n                        className: \"h-4 w-4\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 495,\n                        columnNumber: 29\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 488,\n                      columnNumber: 27\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 479,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 453,\n                  columnNumber: 21\n                }, this)\n              }, card.id || card.promptId, false, {\n                fileName: _jsxFileName,\n                lineNumber: 447,\n                columnNumber: 19\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 416,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 414,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex-shrink-0 p-3 border-t border-gray-200 bg-gray-50\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"text-xs text-gray-600\",\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"font-medium mb-1\",\n              children: \"\\uACE0\\uC815 \\uD15C\\uD50C\\uB9BF \\uC2DC\\uC2A4\\uD15C\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 509,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"\\uCCB4\\uACC4\\uC801\\uC778 \\uD504\\uB86C\\uD504\\uD2B8 \\uAD00\\uB9AC\\uAC00 \\uAC00\\uB2A5\\uD569\\uB2C8\\uB2E4.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 510,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 508,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 507,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 394,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 393,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(PromptFormModal, {\n      isOpen: showForm,\n      onSubmit: handleUpdateCard,\n      onCancel: handleCancelForm,\n      initialData: editingCard\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 517,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 373,\n    columnNumber: 5\n  }, this);\n};\n_s(PromptCardManager, \"AcIVqa/+sZ2PDglpPDcoGHWxABI=\");\n_c2 = PromptCardManager;\nexport default PromptCardManager;\nvar _c, _c2;\n$RefreshReg$(_c, \"PromptFormModal\");\n$RefreshReg$(_c2, \"PromptCardManager\");","map":{"version":3,"names":["React","useState","useEffect","useCallback","toast","PlusIcon","PencilIcon","TrashIcon","CheckCircleIcon","ExclamationTriangleIcon","Bars3Icon","promptCardAPI","handleAPIError","PromptEditModal","ChatInterface","PromptCard","PromptEditForm","SidebarSkeleton","jsxDEV","_jsxDEV","FIXED_PROMPT_CATEGORIES","id","name","order","color","icon","description","defaultContent","placeholder","isCoT","isReAct","PromptFormModal","isOpen","onSubmit","onCancel","initialData","className","children","isModal","fileName","_jsxFileName","lineNumber","columnNumber","_c","PromptCardManager","projectId","onCardsChanged","projectName","_s","promptCards","setPromptCards","loading","setLoading","showForm","setShowForm","editingCard","setEditingCard","loadPromptCards","response","getPromptCards","cards","Array","isArray","data","console","warn","templateCards","map","template","existingCard","find","card","category","_existingCard$prompt_","_existingCard$prompt_2","log","promptId","prompt_text_length","prompt_text","length","prompt_text_preview","substring","s3Key","title","isTemplate","model_name","temperature","enabled","step_order","sort","a","b","error","errorInfo","message","defaultCards","handleUpdateCard","cardData","_editingCard$promptId","startsWith","updateData","updatePromptCard","success","newCardData","createPromptCard","handleToggleCard","originalCards","updatedCards","c","handleDeleteCard","window","confirm","t","deletePromptCard","handleEditCard","handleCancelForm","safePromptCards","filter","onClick","_FIXED_PROMPT_CATEGOR","_FIXED_PROMPT_CATEGOR2","cat","stepOrder","_c2","$RefreshReg$"],"sources":["/Users/yeong-gwang/Documents/work/서울경제신문/ai_제목달기/frontend/src/components/PromptCardManager.js"],"sourcesContent":["import React, { useState, useEffect, useCallback } from \"react\";\nimport { toast } from \"react-hot-toast\";\nimport {\n  PlusIcon,\n  PencilIcon,\n  TrashIcon,\n  CheckCircleIcon,\n  ExclamationTriangleIcon,\n  Bars3Icon,\n  // ChatBubbleLeftRightIcon 제거\n} from \"@heroicons/react/24/outline\";\nimport { promptCardAPI, handleAPIError } from \"../services/api\";\nimport PromptEditModal from \"./prompts/PromptEditModal\";\nimport ChatInterface from \"./ChatInterface\";\nimport PromptCard from \"./prompts/PromptCard\";\nimport PromptEditForm from \"./prompts/PromptEditForm\";\nimport { SidebarSkeleton } from \"./SkeletonLoader\";\n\n// AI 워크플로우 기반 프롬프트 템플릿\nconst FIXED_PROMPT_CATEGORIES = [\n  {\n    id: \"instruction\",\n    name: \"역할 및 목표\",\n    order: 1,\n    color: \"bg-slate-100/80 text-slate-700 border-slate-200/80\",\n    icon: \"\",\n    description: \"AI의 역할, 정체성, 핵심 목표를 명확히 정의합니다\",\n    defaultContent:\n      \"당신은 전문적인 기사 제목 생성 AI입니다.\\n목표: 독자의 관심을 끌고 정확한 정보를 전달하는 제목 생성\",\n    placeholder: \"AI의 역할과 주요 목표를 구체적으로 작성하세요...\",\n  },\n  {\n    id: \"knowledge\",\n    name: \"지식 베이스\",\n    order: 2,\n    color: \"bg-slate-100/80 text-slate-700 border-slate-200/80\",\n    icon: \"\",\n    description: \"작업 수행에 필요한 핵심 지식과 원칙을 제공합니다\",\n    defaultContent:\n      \"제목 작성 원칙:\\n- 간결하고 명확한 표현\\n- 핵심 키워드 포함\\n- 독자의 관심 유발\",\n    placeholder: \"작업에 필요한 핵심 지식과 원칙을 작성하세요...\",\n  },\n  {\n    id: \"secondary\",\n    name: \"CoT (사고 과정)\",\n    order: 3,\n    color: \"bg-slate-100/80 text-slate-700 border-slate-200/80\",\n    icon: \"\",\n    description: \"단계별 추론 과정을 통해 사고의 투명성을 확보합니다\",\n    defaultContent:\n      \"다음 단계로 사고하세요:\\n1. 기사의 핵심 내용 파악\\n2. 주요 키워드 추출\\n3. 독자 관점에서 흥미도 평가\\n4. 제목 후보 생성\\n5. 최적 제목 선택\",\n    placeholder: \"단계별 사고 과정을 구체적으로 작성하세요...\",\n    isCoT: true,\n  },\n  {\n    id: \"style_guide\",\n    name: \"스타일 가이드\",\n    order: 4,\n    color: \"bg-slate-100/80 text-slate-700 border-slate-200/80\",\n    icon: \"\",\n    description: \"일관된 스타일과 형식을 유지하기 위한 가이드라인\",\n    defaultContent:\n      \"스타일 요구사항:\\n- 길이: 15-25자 권장\\n- 톤: 전문적이면서 친근\\n- 형식: 명사형 종결\",\n    placeholder: \"스타일과 형식 요구사항을 작성하세요...\",\n  },\n  {\n    id: \"validation\",\n    name: \"ReAct (추론+행동)\",\n    order: 5,\n    color: \"bg-slate-100/80 text-slate-700 border-slate-200/80\",\n    icon: \"\",\n    description: \"추론과 행동을 결합하여 더 정확한 결과를 도출합니다\",\n    defaultContent:\n      \"Thought: 이 기사의 핵심은 무엇인가?\\nAction: 키워드를 추출하고 중요도를 평가한다\\nObservation: 추출된 정보를 바탕으로 제목을 구성한다\\nThought: 생성된 제목이 요구사항을 충족하는가?\\nAction: 필요시 수정하고 최종 검증한다\",\n    placeholder: \"Thought/Action/Observation 패턴으로 작성하세요...\",\n    isReAct: true,\n  },\n  {\n    id: \"enhancement\",\n    name: \"품질 검증\",\n    order: 6,\n    color: \"bg-slate-100/80 text-slate-700 border-slate-200/80\",\n    icon: \"\",\n    description: \"최종 결과물의 품질을 검증하고 개선합니다\",\n    defaultContent:\n      \"품질 검증 기준:\\n- 정확성: 기사 내용과 일치\\n- 매력도: 독자 관심 유발\\n- 적절성: 매체 성격에 부합\\n- 완성도: 문법과 표현의 정확성\",\n    placeholder: \"품질 검증 기준과 개선 방안을 작성하세요...\",\n  },\n];\n\n// 프롬프트 편집 모달 (이름 변경)\nconst PromptFormModal = ({ isOpen, onSubmit, onCancel, initialData }) => {\n  if (!isOpen) return null;\n\n  return (\n    <div className=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50 p-4\">\n      <div className=\"bg-white rounded-lg w-full max-w-lg max-h-[80vh] overflow-y-auto\">\n        <PromptEditForm\n          onSubmit={onSubmit}\n          onCancel={onCancel}\n          initialData={initialData}\n          isModal={true}\n        />\n      </div>\n    </div>\n  );\n};\n\nconst PromptCardManager = ({ projectId, onCardsChanged, projectName }) => {\n  // 상태 관리\n  const [promptCards, setPromptCards] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [showForm, setShowForm] = useState(false);\n  const [editingCard, setEditingCard] = useState(null);\n  // savedChats, showSavedChats 상태 제거\n\n  // 프롬프트 카드 로드 및 기본 템플릿 생성\n  const loadPromptCards = useCallback(async () => {\n    try {\n      setLoading(true);\n      // include_content=true로 S3에서 실제 프롬프트 내용 로드\n      const response = await promptCardAPI.getPromptCards(projectId, true, false);\n\n      // API 응답 구조 확인 및 안전한 처리\n      let cards = [];\n      if (Array.isArray(response)) {\n        cards = response;\n      } else if (response && Array.isArray(response.promptCards)) {\n        cards = response.promptCards;\n      } else if (response && Array.isArray(response.data)) {\n        cards = response.data;\n      } else {\n        console.warn(\"Unexpected API response structure:\", response);\n        cards = [];\n      }\n\n      // 고정된 템플릿 카드들과 기존 카드들을 매칭\n      const templateCards = FIXED_PROMPT_CATEGORIES.map((template) => {\n        const existingCard = cards.find(\n          (card) => card.category === template.id\n        );\n\n        if (existingCard) {\n          console.log(`🔍 기존 카드 발견 (${template.name}):`, {\n            promptId: existingCard.promptId,\n            category: existingCard.category,\n            prompt_text_length: existingCard.prompt_text?.length || 0,\n            prompt_text_preview: existingCard.prompt_text?.substring(0, 50) + \"...\",\n            s3Key: existingCard.s3Key\n          });\n          \n          // 기존 카드가 있으면 해당 카드 사용 (isTemplate 플래그 제거)\n          return {\n            ...existingCard,\n            // 템플릿의 UI 정보만 사용 (텍스트 내용은 기존 카드 우선)\n            name: template.name,\n            order: template.order,\n            color: template.color,\n            icon: template.icon,\n            description: template.description,\n            placeholder: template.placeholder,\n            title: existingCard.title || `${template.name} 프롬프트`,\n            prompt_text: existingCard.prompt_text || template.defaultContent, // S3에서 로드된 텍스트 우선\n            isTemplate: false, // 실제 카드는 템플릿이 아님\n          };\n        } else {\n          // 기존 카드가 없으면 템플릿으로 기본 카드 생성\n          return {\n            id: `template-${template.id}`,\n            promptId: `template-${template.id}`,\n            title: `${template.name} 프롬프트`,\n            category: template.id,\n            prompt_text: template.defaultContent,\n            model_name: \"claude-3-5-sonnet-20241022\",\n            temperature: 0.7,\n            enabled: true,\n            step_order: template.order,\n            isTemplate: true, // 템플릿 카드임을 표시\n            ...template,\n          };\n        }\n      });\n\n      // 순서대로 정렬\n      templateCards.sort((a, b) => (a.order || 999) - (b.order || 999));\n\n      setPromptCards(templateCards);\n    } catch (error) {\n      const errorInfo = handleAPIError(error);\n      toast.error(`프롬프트 카드 로딩 실패: ${errorInfo.message}`);\n\n      // 오류 시에도 기본 템플릿 카드들 표시\n      const defaultCards = FIXED_PROMPT_CATEGORIES.map((template) => ({\n        id: `template-${template.id}`,\n        promptId: `template-${template.id}`,\n        title: `${template.name} 프롬프트`,\n        category: template.id,\n        prompt_text: template.defaultContent,\n        model_name: \"claude-3-5-sonnet-20241022\",\n        temperature: 0.7,\n        enabled: true,\n        step_order: template.order,\n        isTemplate: true,\n        ...template,\n      }));\n\n      setPromptCards(defaultCards);\n    } finally {\n      setLoading(false);\n    }\n  }, [projectId]);\n\n  useEffect(() => {\n    loadPromptCards();\n    // 저장된 대화 로드 코드 제거\n  }, [loadPromptCards, projectId]);\n\n  // 카드 업데이트\n  const handleUpdateCard = async (cardData) => {\n    try {\n      console.log(\"📝 프롬프트 카드 업데이트 시작:\", { editingCard, cardData });\n      \n      if (editingCard && editingCard.promptId && !editingCard.promptId.startsWith('template-')) {\n        // 실제 기존 카드 편집\n        const updateData = {\n          ...cardData,\n          category: editingCard.category,\n          title: editingCard.title,\n          step_order: editingCard.step_order || editingCard.order,\n        };\n        \n        console.log(\"🔄 기존 카드 수정:\", {\n          projectId,\n          promptId: editingCard.promptId,\n          updateData\n        });\n        \n        await promptCardAPI.updatePromptCard(\n          projectId,\n          editingCard.promptId,\n          updateData\n        );\n        toast.success(\"프롬프트 카드가 수정되었습니다!\");\n      } else if (editingCard && (editingCard.isTemplate || editingCard.promptId?.startsWith('template-'))) {\n        // 템플릿 카드를 실제 카드로 생성\n        const newCardData = {\n          ...cardData,\n          category: editingCard.category,\n          title: editingCard.title,\n          step_order: editingCard.order,\n        };\n        \n        console.log(\"✨ 템플릿에서 새 카드 생성:\", { projectId, newCardData });\n        \n        await promptCardAPI.createPromptCard(projectId, newCardData);\n        toast.success(\"프롬프트 카드가 생성되었습니다!\");\n      } else {\n        // 새 카드 생성\n        const newCardData = {\n          ...cardData,\n          category: \"instruction\", // 기본 카테고리\n          title: \"새 프롬프트 카드\",\n          step_order: 1,\n        };\n        \n        console.log(\"🆕 완전히 새로운 카드 생성:\", { projectId, newCardData });\n        \n        await promptCardAPI.createPromptCard(projectId, newCardData);\n        toast.success(\"프롬프트 카드가 생성되었습니다!\");\n      }\n\n      await loadPromptCards();\n      setShowForm(false);\n      setEditingCard(null);\n\n      if (onCardsChanged) onCardsChanged();\n    } catch (error) {\n      console.error(\"❌ 프롬프트 카드 업데이트 실패:\", error);\n      const errorInfo = handleAPIError(error);\n      toast.error(\n        `카드 ${editingCard ? \"수정\" : \"생성\"} 실패: ${errorInfo.message}`\n      );\n    }\n  };\n\n  // 카드 토글 (최적화 UI)\n  const handleToggleCard = async (promptId, enabled) => {\n    // promptCards가 배열인지 확인\n    if (!Array.isArray(promptCards)) {\n      console.error(\"promptCards is not an array:\", promptCards);\n      return;\n    }\n\n    // 낙관적 업데이트: 즉시 UI 반영\n    const originalCards = [...promptCards];\n    const updatedCards = promptCards.map((card) =>\n      (card.promptId || card.id) === promptId ? { ...card, enabled } : card\n    );\n    setPromptCards(updatedCards);\n\n    try {\n      // 템플릿 카드가 아닌 경우에만 API 호출\n      const card = promptCards.find((c) => (c.promptId || c.id) === promptId);\n      if (card && !card.isTemplate) {\n        await promptCardAPI.updatePromptCard(projectId, promptId, { enabled });\n      }\n      if (onCardsChanged) onCardsChanged();\n    } catch (error) {\n      // 실패 시 복원\n      setPromptCards(originalCards);\n      const errorInfo = handleAPIError(error);\n      toast.error(`카드 상태 변경 실패: ${errorInfo.message}`);\n    }\n  };\n\n  // 카드 삭제 또는 초기화\n  const handleDeleteCard = async (promptId) => {\n    const card = promptCards.find((c) => (c.promptId || c.id) === promptId);\n\n    if (card && card.isTemplate) {\n      if (!window.confirm(\"이 프롬프트를 기본값으로 초기화하시겠습니까?\")) {\n        return;\n      }\n      // 템플릿 카드는 기본값으로 초기화\n      const template = FIXED_PROMPT_CATEGORIES.find(\n        (t) => t.id === card.category\n      );\n      if (template) {\n        const updatedCards = promptCards.map((c) =>\n          (c.promptId || c.id) === promptId\n            ? { ...c, prompt_text: template.defaultContent }\n            : c\n        );\n        setPromptCards(updatedCards);\n        toast.success(\"프롬프트가 기본값으로 초기화되었습니다!\");\n      }\n      return;\n    }\n\n    if (!window.confirm(\"정말로 이 프롬프트 카드를 삭제하시겠습니까?\")) {\n      return;\n    }\n\n    try {\n      await promptCardAPI.deletePromptCard(projectId, promptId);\n      await loadPromptCards();\n      toast.success(\"프롬프트 카드가 삭제되었습니다!\");\n      if (onCardsChanged) onCardsChanged();\n    } catch (error) {\n      const errorInfo = handleAPIError(error);\n      toast.error(`카드 삭제 실패: ${errorInfo.message}`);\n    }\n  };\n\n  // 편집 모드 시작\n  const handleEditCard = (card) => {\n    setEditingCard(card);\n    setShowForm(true);\n  };\n\n  // 폼 취소\n  const handleCancelForm = () => {\n    setShowForm(false);\n    setEditingCard(null);\n  };\n\n  // deleteSavedChat 함수 제거\n\n  // promptCards가 배열인지 확인하고 안전하게 처리\n  const safePromptCards = Array.isArray(promptCards) ? promptCards : [];\n\n  return (\n    <div className=\"flex h-screen bg-gray-50\">\n      {/* 메인 콘텐츠 - 채팅 인터페이스 */}\n      <div className=\"flex-1 min-w-0 relative p-3 lg:pr-2\">\n        {/* 우측 상단 메뉴 버튼 (모바일용) */}\n        <div className=\"absolute top-6 right-6 z-10 lg:hidden\">\n          <button className=\"p-3 text-slate-500 hover:text-slate-700 hover:bg-white/80 hover:shadow-lg rounded-xl backdrop-blur-sm transition-all duration-300\">\n            <Bars3Icon className=\"h-5 w-5\" />\n          </button>\n        </div>\n\n        <div className=\"h-full bg-white rounded-lg border border-gray-200 overflow-hidden\">\n          <ChatInterface\n            projectId={projectId}\n            projectName={projectName}\n            promptCards={safePromptCards}\n          />\n        </div>\n      </div>\n\n      {/* 우측 사이드바 */}\n      <div className=\"w-[350px] flex flex-col hidden lg:flex p-3 pl-2\">\n        <div className=\"h-full bg-white rounded-lg border border-gray-200 flex flex-col overflow-hidden\">\n          {/* 사이드바 헤더 */}\n          <div className=\"flex-shrink-0 p-3 border-b border-gray-200\">\n            <div className=\"flex items-center justify-between mb-2\">\n              <div className=\"flex items-center\">\n                <h3 className=\"text-sm font-medium text-blue-600\">\n                  프롬프트 카드\n                </h3>\n              </div>\n              <div className=\"text-xs text-gray-500 bg-gray-100 px-2 py-1 rounded-full\">\n                {safePromptCards.filter((card) => card.enabled).length}/\n                {safePromptCards.length}\n              </div>\n            </div>\n            <p className=\"text-xs text-gray-600\">\n              각 카테고리별 프롬프트를 설정하세요\n            </p>\n          </div>\n\n          {/* 콘텐츠 영역 */}\n          <div className=\"flex-1 overflow-y-auto p-3\">\n            {/* 프롬프트 카드 목록 */}\n            <div className=\"space-y-2\">\n              {loading ? (\n                <div className=\"text-center py-8\">\n                  <div className=\"animate-spin rounded-full h-8 w-8 border-b-2 border-blue-600 mx-auto\"></div>\n                  <p className=\"text-sm text-gray-500 mt-2\">로딩 중...</p>\n                </div>\n              ) : safePromptCards.length === 0 ? (\n                <div className=\"text-center py-8\">\n                  <ExclamationTriangleIcon className=\"h-12 w-12 text-gray-300 mx-auto mb-3\" />\n                  <p className=\"text-sm text-gray-500\">\n                    프롬프트 카드가 없습니다\n                  </p>\n                  <p className=\"text-xs text-gray-400 mt-1\">\n                    기본 템플릿을 생성하거나 새 카드를 추가해주세요\n                  </p>\n                  <button\n                    onClick={() =>\n                      handleUpdateCard({\n                        // Changed from handleCreateCard to handleUpdateCard\n                        category: \"instruction\",\n                        title: \"새 프롬프트 카드\",\n                        step_order: 1,\n                      })\n                    }\n                    className=\"mt-3 px-3 py-1 bg-blue-600 text-white text-xs rounded hover:bg-blue-700 transition-colors\"\n                  >\n                    첫 번째 카드 만들기\n                  </button>\n                </div>\n              ) : (\n                safePromptCards.map((card) => (\n                  <div\n                    key={card.id || card.promptId}\n                    className={`bg-white border rounded-lg p-3 hover:border-gray-300 transition-colors ${\n                      card.enabled ? \"border-green-200\" : \"border-gray-200\"\n                    }`}\n                  >\n                    <div className=\"flex items-start justify-between\">\n                      <div className=\"flex-1 min-w-0\">\n                        <div className=\"flex items-center gap-2 mb-1\">\n                          <h4 className=\"text-sm font-medium text-gray-900 truncate\">\n                            {card.title ||\n                              `${\n                                FIXED_PROMPT_CATEGORIES.find(\n                                  (cat) => cat.id === card.category\n                                )?.name || card.category\n                              } 프롬프트`}\n                          </h4>\n                          {card.enabled ? (\n                            <CheckCircleIcon className=\"h-4 w-4 text-green-500 flex-shrink-0\" />\n                          ) : (\n                            <div className=\"h-4 w-4 rounded-full border border-gray-300 flex-shrink-0\" />\n                          )}\n                        </div>\n                        <p className=\"text-xs text-gray-500\">\n                          {FIXED_PROMPT_CATEGORIES.find(\n                            (cat) => cat.id === card.category\n                          )?.name || card.category}\n                        </p>\n                        <p className=\"text-xs text-gray-400 mt-1\">\n                          Step {card.step_order || card.stepOrder || 1}\n                        </p>\n                      </div>\n                      <div className=\"flex items-center gap-1 ml-2\">\n                        <button\n                          onClick={() => handleEditCard(card)}\n                          className=\"p-1 text-gray-400 hover:text-blue-600 transition-colors\"\n                          title=\"편집\"\n                        >\n                          <PencilIcon className=\"h-4 w-4\" />\n                        </button>\n                        {!card.isTemplate && (\n                          <button\n                            onClick={() =>\n                              handleDeleteCard(card.promptId || card.id)\n                            }\n                            className=\"p-1 text-gray-400 hover:text-red-600 transition-colors\"\n                            title=\"삭제\"\n                          >\n                            <TrashIcon className=\"h-4 w-4\" />\n                          </button>\n                        )}\n                      </div>\n                    </div>\n                  </div>\n                ))\n              )}\n            </div>\n          </div>\n\n          {/* 하단 정보 */}\n          <div className=\"flex-shrink-0 p-3 border-t border-gray-200 bg-gray-50\">\n            <div className=\"text-xs text-gray-600\">\n              <p className=\"font-medium mb-1\">고정 템플릿 시스템</p>\n              <p>체계적인 프롬프트 관리가 가능합니다.</p>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {/* 편집 모달 */}\n      <PromptFormModal\n        isOpen={showForm}\n        onSubmit={handleUpdateCard}\n        onCancel={handleCancelForm}\n        initialData={editingCard}\n      />\n    </div>\n  );\n};\n\nexport default PromptCardManager;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}