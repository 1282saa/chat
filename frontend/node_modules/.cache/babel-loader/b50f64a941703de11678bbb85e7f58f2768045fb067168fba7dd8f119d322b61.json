{"ast":null,"code":"import React,{createContext,useContext,useState,useEffect}from\"react\";import{authAPI}from\"../services/api\";import{jsx as _jsx}from\"react/jsx-runtime\";const AuthContext=/*#__PURE__*/createContext();export const useAuth=()=>{const context=useContext(AuthContext);if(!context){throw new Error(\"useAuth must be used within an AuthProvider\");}return context;};export const AuthProvider=_ref=>{let{children}=_ref;const[isAuthenticated,setIsAuthenticated]=useState(false);const[user,setUser]=useState(null);const[loading,setLoading]=useState(true);useEffect(()=>{checkAuthStatus();},[]);const checkAuthStatus=()=>{try{const isAuth=authAPI.isAuthenticated();const currentUser=authAPI.getCurrentUser();setIsAuthenticated(isAuth);setUser(currentUser);}catch(error){console.error(\"Auth status check failed:\",error);setIsAuthenticated(false);setUser(null);}finally{setLoading(false);}};const login=async credentials=>{try{const result=await authAPI.signin(credentials);const user=authAPI.getCurrentUser();setIsAuthenticated(true);setUser(user);return result;}catch(error){throw error;}};const signup=async userData=>{try{const result=await authAPI.signup(userData);return result;}catch(error){throw error;}};const logout=async()=>{try{await authAPI.signout();}finally{setIsAuthenticated(false);setUser(null);}};const verifyEmail=async verificationData=>{try{const result=await authAPI.verifyEmail(verificationData);return result;}catch(error){throw error;}};const forgotPassword=async email=>{try{const result=await authAPI.forgotPassword(email);return result;}catch(error){throw error;}};const confirmPassword=async resetData=>{try{const result=await authAPI.confirmPassword(resetData);return result;}catch(error){throw error;}};const value={isAuthenticated,user,loading,login,signup,logout,verifyEmail,forgotPassword,confirmPassword,checkAuthStatus};return/*#__PURE__*/_jsx(AuthContext.Provider,{value:value,children:children});};","map":{"version":3,"names":["React","createContext","useContext","useState","useEffect","authAPI","jsx","_jsx","AuthContext","useAuth","context","Error","AuthProvider","_ref","children","isAuthenticated","setIsAuthenticated","user","setUser","loading","setLoading","checkAuthStatus","isAuth","currentUser","getCurrentUser","error","console","login","credentials","result","signin","signup","userData","logout","signout","verifyEmail","verificationData","forgotPassword","email","confirmPassword","resetData","value","Provider"],"sources":["/Users/yeong-gwang/Documents/work/서울경제신문/ai_제목달기(수)_완성본_스트리밍구현 복사본/frontend/src/contexts/AuthContext.js"],"sourcesContent":["import React, { createContext, useContext, useState, useEffect } from \"react\";\nimport { authAPI } from \"../services/api\";\n\nconst AuthContext = createContext();\n\nexport const useAuth = () => {\n  const context = useContext(AuthContext);\n  if (!context) {\n    throw new Error(\"useAuth must be used within an AuthProvider\");\n  }\n  return context;\n};\n\nexport const AuthProvider = ({ children }) => {\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\n  const [user, setUser] = useState(null);\n  const [loading, setLoading] = useState(true);\n\n  useEffect(() => {\n    checkAuthStatus();\n  }, []);\n\n  const checkAuthStatus = () => {\n    try {\n      const isAuth = authAPI.isAuthenticated();\n      const currentUser = authAPI.getCurrentUser();\n\n      setIsAuthenticated(isAuth);\n      setUser(currentUser);\n    } catch (error) {\n      console.error(\"Auth status check failed:\", error);\n      setIsAuthenticated(false);\n      setUser(null);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const login = async (credentials) => {\n    try {\n      const result = await authAPI.signin(credentials);\n      const user = authAPI.getCurrentUser();\n\n      setIsAuthenticated(true);\n      setUser(user);\n\n      return result;\n    } catch (error) {\n      throw error;\n    }\n  };\n\n  const signup = async (userData) => {\n    try {\n      const result = await authAPI.signup(userData);\n      return result;\n    } catch (error) {\n      throw error;\n    }\n  };\n\n  const logout = async () => {\n    try {\n      await authAPI.signout();\n    } finally {\n      setIsAuthenticated(false);\n      setUser(null);\n    }\n  };\n\n  const verifyEmail = async (verificationData) => {\n    try {\n      const result = await authAPI.verifyEmail(verificationData);\n      return result;\n    } catch (error) {\n      throw error;\n    }\n  };\n\n  const forgotPassword = async (email) => {\n    try {\n      const result = await authAPI.forgotPassword(email);\n      return result;\n    } catch (error) {\n      throw error;\n    }\n  };\n\n  const confirmPassword = async (resetData) => {\n    try {\n      const result = await authAPI.confirmPassword(resetData);\n      return result;\n    } catch (error) {\n      throw error;\n    }\n  };\n\n  const value = {\n    isAuthenticated,\n    user,\n    loading,\n    login,\n    signup,\n    logout,\n    verifyEmail,\n    forgotPassword,\n    confirmPassword,\n    checkAuthStatus,\n  };\n\n  return <AuthContext.Provider value={value}>{children}</AuthContext.Provider>;\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}