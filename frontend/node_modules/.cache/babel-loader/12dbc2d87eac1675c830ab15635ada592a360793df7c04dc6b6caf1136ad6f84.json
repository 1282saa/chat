{"ast":null,"code":"import axios from\"axios\";// API 기본 설정\nconst API_BASE_URL=process.env.REACT_APP_API_URL||\"https://vph0fu827a.execute-api.us-east-1.amazonaws.com/prod\";// Axios 인스턴스\nconst api=axios.create({baseURL:API_BASE_URL,headers:{\"Content-Type\":\"application/json\"},timeout:30000// 30초 타임아웃 (AI 처리 시간 고려)\n});// 요청 인터셉터\napi.interceptors.request.use(config=>{var _config$method;console.log(\"API 요청:\",(_config$method=config.method)===null||_config$method===void 0?void 0:_config$method.toUpperCase(),config.url);return config;});// 응답 인터셉터\napi.interceptors.response.use(response=>{console.log(\"API 응답:\",response.status,response.config.url);return response;},error=>{var _error$response;console.error(\"API 오류:\",(_error$response=error.response)===null||_error$response===void 0?void 0:_error$response.status,error.message);return Promise.reject(error);});// =============================================================================\n// 1. 프로젝트 API\n// =============================================================================\nexport const projectAPI={getProjects:async()=>{const response=await api.get(\"/projects\");return response.data;},getProject:async projectId=>{const response=await api.get(`/projects/${projectId}`);return response.data;},createProject:async projectData=>{const response=await api.post(\"/projects\",projectData);return response.data;},updateProject:async(projectId,projectData)=>{const response=await api.put(`/projects/${projectId}`,projectData);return response.data;},deleteProject:async projectId=>{const response=await api.delete(`/projects/${projectId}`);return response.data;},getUploadUrl:async(projectId,fileName)=>{const response=await api.get(`/projects/${projectId}/upload-url`,{params:{fileName}});return response.data;}};// =============================================================================\n// 2. 프롬프트 카드 API\n// =============================================================================\nexport const promptCardAPI={getPromptCards:async function(projectId){let includeContent=arguments.length>1&&arguments[1]!==undefined?arguments[1]:false;let includeStats=arguments.length>2&&arguments[2]!==undefined?arguments[2]:false;const response=await api.get(`/prompts/${projectId}`,{params:{includeContent,includeStats}});return response.data;},createPromptCard:async(projectId,promptData)=>{const response=await api.post(`/prompts/${projectId}`,promptData);return response.data;},updatePromptCard:async(projectId,promptId,promptData)=>{const response=await api.put(`/prompts/${projectId}/${promptId}`,promptData);return response.data;},deletePromptCard:async(projectId,promptId)=>{const response=await api.delete(`/prompts/${projectId}/${promptId}`);return response.data;},reorderPromptCards:async(projectId,reorderData)=>{const response=await api.post(`/prompts/${projectId}/reorder`,reorderData);return response.data;}};// =============================================================================\n// 3. 제목 생성 API\n// =============================================================================\nexport const generateAPI={generateTitle:async function(projectId,article){let userRequest=arguments.length>2&&arguments[2]!==undefined?arguments[2]:\"\";const response=await api.post(`/projects/${projectId}/generate`,{article,userRequest});return response.data;},getExecutionStatus:async executionArn=>{const response=await api.get(`/executions/${encodeURIComponent(executionArn)}`);return response.data;}};// =============================================================================\n// 4. 채팅 API\n// =============================================================================\nexport const chatAPI={sendMessage:async function(projectId,message,sessionId){let userId=arguments.length>3&&arguments[3]!==undefined?arguments[3]:\"default\";const response=await api.post(`/projects/${projectId}/chat`,{message,sessionId,userId});return response.data;},getChatHistory:async function(projectId,sessionId){let userId=arguments.length>2&&arguments[2]!==undefined?arguments[2]:\"default\";const response=await api.get(`/projects/${projectId}/chat/sessions/${sessionId}`,{params:{userId}});return response.data;},getChatSessions:async function(projectId){let userId=arguments.length>1&&arguments[1]!==undefined?arguments[1]:\"default\";const response=await api.get(`/projects/${projectId}/chat/sessions`,{params:{userId}});return response.data;},deleteChatSession:async function(projectId,sessionId){let userId=arguments.length>2&&arguments[2]!==undefined?arguments[2]:\"default\";const response=await api.delete(`/projects/${projectId}/chat/sessions/${sessionId}`,{params:{userId}});return response.data;}};// =============================================================================\n// 5. 카테고리 API\n// =============================================================================\nexport const categoryAPI={getUserCategories:async()=>{// 백엔드의 AVAILABLE_CATEGORIES에 맞게 직접 반환 (API 호출 제거)\nreturn{categories:[{id:\"instruction\",name:\"역할 및 목표\",color:\"blue\",description:\"1단계: 역할 및 목표 설정\",stepOrder:1},{id:\"knowledge\",name:\"지식 베이스\",color:\"green\",description:\"2단계: 지식 베이스 구축\",stepOrder:2},{id:\"secondary\",name:\"CoT (사고 과정)\",color:\"purple\",description:\"3단계: Chain of Thought 사고 과정\",stepOrder:3},{id:\"style_guide\",name:\"스타일 가이드\",color:\"orange\",description:\"4단계: 스타일 가이드 적용\",stepOrder:4},{id:\"validation\",name:\"ReAct (추론+행동)\",color:\"red\",description:\"5단계: 추론과 행동 검증\",stepOrder:5},{id:\"enhancement\",name:\"품질 검증\",color:\"indigo\",description:\"6단계: 최종 품질 검증\",stepOrder:6}]};},createCategory:async categoryData=>{// 카테고리는 고정이므로 생성 기능 비활성화\nthrow new Error(\"카테고리는 6개 고정 카테고리만 사용 가능합니다.\");},updateCategory:async(categoryId,categoryData)=>{// 카테고리는 고정이므로 수정 기능 비활성화\nthrow new Error(\"카테고리는 6개 고정 카테고리만 사용 가능합니다.\");},deleteCategory:async categoryId=>{// 카테고리는 고정이므로 삭제 기능 비활성화\nthrow new Error(\"카테고리는 6개 고정 카테고리만 사용 가능합니다.\");}};// =============================================================================\n// 6. 프로젝트 카테고리 API\n// =============================================================================\nexport const projectCategoryAPI={changeProjectCategory:async(projectId,categoryId)=>{const response=await api.post(`/projects/${projectId}/category`,{category:categoryId});return response.data;}};// =============================================================================\n// 7. 인증 API\n// =============================================================================\nexport const authAPI={isAuthenticated:()=>{// 실제 토큰 검증 로직으로 대체 필요\nreturn true;},getCurrentUser:()=>{// 실제 사용자 정보 가져오기 로직으로 대체 필요\nreturn{id:\"user\",email:\"user@example.com\",name:\"사용자\"};},signin:async credentials=>{const response=await api.post(\"/auth/signin\",credentials);return response.data;},signup:async userData=>{const response=await api.post(\"/auth/signup\",userData);return response.data;},signout:async()=>{const response=await api.post(\"/auth/signout\");return response.data;},verifyEmail:async verificationData=>{const response=await api.post(\"/auth/verify-email\",verificationData);return response.data;},forgotPassword:async email=>{const response=await api.post(\"/auth/forgot-password\",{email});return response.data;},confirmPassword:async resetData=>{const response=await api.post(\"/auth/confirm-password\",resetData);return response.data;}};// =============================================================================\n// 공통 유틸리티\n// =============================================================================\nexport const handleAPIError=error=>{if(error.response){var _error$response$data,_error$response$data2;// 서버에서 응답을 받았지만 오류 상태\nconst status=error.response.status;const message=((_error$response$data=error.response.data)===null||_error$response$data===void 0?void 0:_error$response$data.message)||((_error$response$data2=error.response.data)===null||_error$response$data2===void 0?void 0:_error$response$data2.error)||\"서버 오류가 발생했습니다\";switch(status){case 400:return{message:`잘못된 요청: ${message}`,statusCode:400};case 401:return{message:\"인증이 필요합니다\",statusCode:401};case 403:return{message:\"권한이 없습니다\",statusCode:403};case 404:return{message:\"요청한 리소스를 찾을 수 없습니다\",statusCode:404};case 429:return{message:\"요청이 너무 많습니다. 잠시 후 다시 시도해주세요\",statusCode:429};case 500:return{message:\"서버 내부 오류가 발생했습니다\",statusCode:500};default:return{message:`서버 오류 (${status}): ${message}`,statusCode:status};}}else if(error.request){// 요청은 보냈지만 응답을 받지 못함\nreturn{message:\"서버에 연결할 수 없습니다. 네트워크 연결을 확인해주세요\",statusCode:0};}else{// 요청 설정 중 오류 발생\nreturn{message:`요청 오류: ${error.message}`,statusCode:-1};}};// =============================================================================\n// 상수 정의\n// =============================================================================\nexport const DEFAULT_PROJECT_CATEGORIES=[{id:\"instruction\",name:\"역할 및 목표\",color:\"blue\",description:\"1단계: 역할 및 목표 설정\",stepOrder:1},{id:\"knowledge\",name:\"지식 베이스\",color:\"green\",description:\"2단계: 지식 베이스 구축\",stepOrder:2},{id:\"secondary\",name:\"CoT (사고 과정)\",color:\"purple\",description:\"3단계: Chain of Thought 사고 과정\",stepOrder:3},{id:\"style_guide\",name:\"스타일 가이드\",color:\"orange\",description:\"4단계: 스타일 가이드 적용\",stepOrder:4},{id:\"validation\",name:\"ReAct (추론+행동)\",color:\"red\",description:\"5단계: 추론과 행동 검증\",stepOrder:5},{id:\"enhancement\",name:\"품질 검증\",color:\"indigo\",description:\"6단계: 최종 품질 검증\",stepOrder:6}];export const COLOR_OPTIONS=[{id:\"blue\",name:\"파랑\",bgClass:\"bg-blue-100\",textClass:\"text-blue-800\",borderClass:\"border-blue-200\"},{id:\"green\",name:\"초록\",bgClass:\"bg-green-100\",textClass:\"text-green-800\",borderClass:\"border-green-200\"},{id:\"purple\",name:\"보라\",bgClass:\"bg-purple-100\",textClass:\"text-purple-800\",borderClass:\"border-purple-200\"},{id:\"orange\",name:\"주황\",bgClass:\"bg-orange-100\",textClass:\"text-orange-800\",borderClass:\"border-orange-200\"},{id:\"red\",name:\"빨강\",bgClass:\"bg-red-100\",textClass:\"text-red-800\",borderClass:\"border-red-200\"},{id:\"indigo\",name:\"남색\",bgClass:\"bg-indigo-100\",textClass:\"text-indigo-800\",borderClass:\"border-indigo-200\"},{id:\"pink\",name:\"분홍\",bgClass:\"bg-pink-100\",textClass:\"text-pink-800\",borderClass:\"border-pink-200\"},{id:\"yellow\",name:\"노랑\",bgClass:\"bg-yellow-100\",textClass:\"text-yellow-800\",borderClass:\"border-yellow-200\"}];export const getCategoryInfo=function(categoryId){let userCategories=arguments.length>1&&arguments[1]!==undefined?arguments[1]:DEFAULT_PROJECT_CATEGORIES;return userCategories.find(cat=>cat.id===categoryId)||DEFAULT_PROJECT_CATEGORIES.find(cat=>cat.id===categoryId)||{id:categoryId,name:categoryId,color:\"gray\",description:\"기타\"};};export const getCategoryColorClasses=color=>{const colorOption=COLOR_OPTIONS.find(option=>option.id===color);if(colorOption){return{bg:colorOption.bgClass,text:colorOption.textClass,border:colorOption.borderClass};}// 기본값\nreturn{bg:\"bg-gray-100\",text:\"text-gray-800\",border:\"border-gray-200\"};};export const filterProjects=(projects,filters)=>{let filtered=[...projects];// 카테고리 필터\nif(filters.category&&filters.category!==\"all\"){filtered=filtered.filter(project=>project.category===filters.category);}// 검색어 필터\nif(filters.searchQuery){const query=filters.searchQuery.toLowerCase();filtered=filtered.filter(project=>{var _project$name,_project$description,_project$tags;return((_project$name=project.name)===null||_project$name===void 0?void 0:_project$name.toLowerCase().includes(query))||((_project$description=project.description)===null||_project$description===void 0?void 0:_project$description.toLowerCase().includes(query))||((_project$tags=project.tags)===null||_project$tags===void 0?void 0:_project$tags.some(tag=>tag.toLowerCase().includes(query)));});}// 정렬\nswitch(filters.sortBy){case\"created\":filtered.sort((a,b)=>new Date(b.createdAt)-new Date(a.createdAt));break;case\"updated\":filtered.sort((a,b)=>new Date(b.updatedAt)-new Date(a.updatedAt));break;case\"name\":filtered.sort((a,b)=>{var _a$name;return(_a$name=a.name)===null||_a$name===void 0?void 0:_a$name.localeCompare(b.name);});break;default:break;}return filtered;};export const formatTokenCount=count=>{if(count>=1000){return`${(count/1000).toFixed(1)}K`;}return count.toString();};export const formatFileSize=bytes=>{if(bytes>=1024){return`${(bytes/1024).toFixed(1)}KB`;}return`${bytes}B`;};export const calculatePromptStats=promptCards=>{if(!promptCards||promptCards.length===0){return{totalCards:0,totalTokens:0,averageTokens:0,categories:[]};}const totalTokens=promptCards.reduce((sum,card)=>{return sum+(card.tokenCount||0);},0);const categories=[...new Set(promptCards.map(card=>card.category))];return{totalCards:promptCards.length,totalTokens,averageTokens:Math.round(totalTokens/promptCards.length),categories};};","map":{"version":3,"names":["axios","API_BASE_URL","process","env","REACT_APP_API_URL","api","create","baseURL","headers","timeout","interceptors","request","use","config","_config$method","console","log","method","toUpperCase","url","response","status","error","_error$response","message","Promise","reject","projectAPI","getProjects","get","data","getProject","projectId","createProject","projectData","post","updateProject","put","deleteProject","delete","getUploadUrl","fileName","params","promptCardAPI","getPromptCards","includeContent","arguments","length","undefined","includeStats","createPromptCard","promptData","updatePromptCard","promptId","deletePromptCard","reorderPromptCards","reorderData","generateAPI","generateTitle","article","userRequest","getExecutionStatus","executionArn","encodeURIComponent","chatAPI","sendMessage","sessionId","userId","getChatHistory","getChatSessions","deleteChatSession","categoryAPI","getUserCategories","categories","id","name","color","description","stepOrder","createCategory","categoryData","Error","updateCategory","categoryId","deleteCategory","projectCategoryAPI","changeProjectCategory","category","authAPI","isAuthenticated","getCurrentUser","email","signin","credentials","signup","userData","signout","verifyEmail","verificationData","forgotPassword","confirmPassword","resetData","handleAPIError","_error$response$data","_error$response$data2","statusCode","DEFAULT_PROJECT_CATEGORIES","COLOR_OPTIONS","bgClass","textClass","borderClass","getCategoryInfo","userCategories","find","cat","getCategoryColorClasses","colorOption","option","bg","text","border","filterProjects","projects","filters","filtered","filter","project","searchQuery","query","toLowerCase","_project$name","_project$description","_project$tags","includes","tags","some","tag","sortBy","sort","a","b","Date","createdAt","updatedAt","_a$name","localeCompare","formatTokenCount","count","toFixed","toString","formatFileSize","bytes","calculatePromptStats","promptCards","totalCards","totalTokens","averageTokens","reduce","sum","card","tokenCount","Set","map","Math","round"],"sources":["/Users/yeong-gwang/Documents/work/서울경제신문/ai_제목달기/frontend/src/services/api.js"],"sourcesContent":["import axios from \"axios\";\n\n// API 기본 설정\nconst API_BASE_URL =\n  process.env.REACT_APP_API_URL ||\n  \"https://vph0fu827a.execute-api.us-east-1.amazonaws.com/prod\";\n\n// Axios 인스턴스\nconst api = axios.create({\n  baseURL: API_BASE_URL,\n  headers: { \"Content-Type\": \"application/json\" },\n  timeout: 30000, // 30초 타임아웃 (AI 처리 시간 고려)\n});\n\n// 요청 인터셉터\napi.interceptors.request.use((config) => {\n  console.log(\"API 요청:\", config.method?.toUpperCase(), config.url);\n  return config;\n});\n\n// 응답 인터셉터\napi.interceptors.response.use(\n  (response) => {\n    console.log(\"API 응답:\", response.status, response.config.url);\n    return response;\n  },\n  (error) => {\n    console.error(\"API 오류:\", error.response?.status, error.message);\n    return Promise.reject(error);\n  }\n);\n\n// =============================================================================\n// 1. 프로젝트 API\n// =============================================================================\n\nexport const projectAPI = {\n  getProjects: async () => {\n    const response = await api.get(\"/projects\");\n    return response.data;\n  },\n\n  getProject: async (projectId) => {\n    const response = await api.get(`/projects/${projectId}`);\n    return response.data;\n  },\n\n  createProject: async (projectData) => {\n    const response = await api.post(\"/projects\", projectData);\n    return response.data;\n  },\n\n  updateProject: async (projectId, projectData) => {\n    const response = await api.put(`/projects/${projectId}`, projectData);\n    return response.data;\n  },\n\n  deleteProject: async (projectId) => {\n    const response = await api.delete(`/projects/${projectId}`);\n    return response.data;\n  },\n\n  getUploadUrl: async (projectId, fileName) => {\n    const response = await api.get(`/projects/${projectId}/upload-url`, {\n      params: { fileName },\n    });\n    return response.data;\n  },\n};\n\n// =============================================================================\n// 2. 프롬프트 카드 API\n// =============================================================================\n\nexport const promptCardAPI = {\n  getPromptCards: async (\n    projectId,\n    includeContent = false,\n    includeStats = false\n  ) => {\n    const response = await api.get(`/prompts/${projectId}`, {\n      params: { includeContent, includeStats },\n    });\n    return response.data;\n  },\n\n  createPromptCard: async (projectId, promptData) => {\n    const response = await api.post(`/prompts/${projectId}`, promptData);\n    return response.data;\n  },\n\n  updatePromptCard: async (projectId, promptId, promptData) => {\n    const response = await api.put(\n      `/prompts/${projectId}/${promptId}`,\n      promptData\n    );\n    return response.data;\n  },\n\n  deletePromptCard: async (projectId, promptId) => {\n    const response = await api.delete(`/prompts/${projectId}/${promptId}`);\n    return response.data;\n  },\n\n  reorderPromptCards: async (projectId, reorderData) => {\n    const response = await api.post(\n      `/prompts/${projectId}/reorder`,\n      reorderData\n    );\n    return response.data;\n  },\n};\n\n// =============================================================================\n// 3. 제목 생성 API\n// =============================================================================\n\nexport const generateAPI = {\n  generateTitle: async (projectId, article, userRequest = \"\") => {\n    const response = await api.post(`/projects/${projectId}/generate`, {\n      article,\n      userRequest,\n    });\n    return response.data;\n  },\n\n  getExecutionStatus: async (executionArn) => {\n    const response = await api.get(\n      `/executions/${encodeURIComponent(executionArn)}`\n    );\n    return response.data;\n  },\n};\n\n// =============================================================================\n// 4. 채팅 API\n// =============================================================================\n\nexport const chatAPI = {\n  sendMessage: async (projectId, message, sessionId, userId = \"default\") => {\n    const response = await api.post(`/projects/${projectId}/chat`, {\n      message,\n      sessionId,\n      userId,\n    });\n    return response.data;\n  },\n\n  getChatHistory: async (projectId, sessionId, userId = \"default\") => {\n    const response = await api.get(\n      `/projects/${projectId}/chat/sessions/${sessionId}`,\n      {\n        params: { userId },\n      }\n    );\n    return response.data;\n  },\n\n  getChatSessions: async (projectId, userId = \"default\") => {\n    const response = await api.get(`/projects/${projectId}/chat/sessions`, {\n      params: { userId },\n    });\n    return response.data;\n  },\n\n  deleteChatSession: async (projectId, sessionId, userId = \"default\") => {\n    const response = await api.delete(\n      `/projects/${projectId}/chat/sessions/${sessionId}`,\n      {\n        params: { userId },\n      }\n    );\n    return response.data;\n  },\n};\n\n// =============================================================================\n// 5. 카테고리 API\n// =============================================================================\n\nexport const categoryAPI = {\n  getUserCategories: async () => {\n    // 백엔드의 AVAILABLE_CATEGORIES에 맞게 직접 반환 (API 호출 제거)\n    return {\n      categories: [\n        {\n          id: \"instruction\",\n          name: \"역할 및 목표\",\n          color: \"blue\",\n          description: \"1단계: 역할 및 목표 설정\",\n          stepOrder: 1,\n        },\n        {\n          id: \"knowledge\",\n          name: \"지식 베이스\",\n          color: \"green\",\n          description: \"2단계: 지식 베이스 구축\",\n          stepOrder: 2,\n        },\n        {\n          id: \"secondary\",\n          name: \"CoT (사고 과정)\",\n          color: \"purple\",\n          description: \"3단계: Chain of Thought 사고 과정\",\n          stepOrder: 3,\n        },\n        {\n          id: \"style_guide\",\n          name: \"스타일 가이드\",\n          color: \"orange\",\n          description: \"4단계: 스타일 가이드 적용\",\n          stepOrder: 4,\n        },\n        {\n          id: \"validation\",\n          name: \"ReAct (추론+행동)\",\n          color: \"red\",\n          description: \"5단계: 추론과 행동 검증\",\n          stepOrder: 5,\n        },\n        {\n          id: \"enhancement\",\n          name: \"품질 검증\",\n          color: \"indigo\",\n          description: \"6단계: 최종 품질 검증\",\n          stepOrder: 6,\n        },\n      ],\n    };\n  },\n\n  createCategory: async (categoryData) => {\n    // 카테고리는 고정이므로 생성 기능 비활성화\n    throw new Error(\"카테고리는 6개 고정 카테고리만 사용 가능합니다.\");\n  },\n\n  updateCategory: async (categoryId, categoryData) => {\n    // 카테고리는 고정이므로 수정 기능 비활성화\n    throw new Error(\"카테고리는 6개 고정 카테고리만 사용 가능합니다.\");\n  },\n\n  deleteCategory: async (categoryId) => {\n    // 카테고리는 고정이므로 삭제 기능 비활성화\n    throw new Error(\"카테고리는 6개 고정 카테고리만 사용 가능합니다.\");\n  },\n};\n\n// =============================================================================\n// 6. 프로젝트 카테고리 API\n// =============================================================================\n\nexport const projectCategoryAPI = {\n  changeProjectCategory: async (projectId, categoryId) => {\n    const response = await api.post(`/projects/${projectId}/category`, {\n      category: categoryId,\n    });\n    return response.data;\n  },\n};\n\n// =============================================================================\n// 7. 인증 API\n// =============================================================================\n\nexport const authAPI = {\n  isAuthenticated: () => {\n    // 실제 토큰 검증 로직으로 대체 필요\n    return true;\n  },\n\n  getCurrentUser: () => {\n    // 실제 사용자 정보 가져오기 로직으로 대체 필요\n    return {\n      id: \"user\",\n      email: \"user@example.com\",\n      name: \"사용자\",\n    };\n  },\n\n  signin: async (credentials) => {\n    const response = await api.post(\"/auth/signin\", credentials);\n    return response.data;\n  },\n\n  signup: async (userData) => {\n    const response = await api.post(\"/auth/signup\", userData);\n    return response.data;\n  },\n\n  signout: async () => {\n    const response = await api.post(\"/auth/signout\");\n    return response.data;\n  },\n\n  verifyEmail: async (verificationData) => {\n    const response = await api.post(\"/auth/verify-email\", verificationData);\n    return response.data;\n  },\n\n  forgotPassword: async (email) => {\n    const response = await api.post(\"/auth/forgot-password\", { email });\n    return response.data;\n  },\n\n  confirmPassword: async (resetData) => {\n    const response = await api.post(\"/auth/confirm-password\", resetData);\n    return response.data;\n  },\n};\n\n// =============================================================================\n// 공통 유틸리티\n// =============================================================================\n\nexport const handleAPIError = (error) => {\n  if (error.response) {\n    // 서버에서 응답을 받았지만 오류 상태\n    const status = error.response.status;\n    const message =\n      error.response.data?.message ||\n      error.response.data?.error ||\n      \"서버 오류가 발생했습니다\";\n\n    switch (status) {\n      case 400:\n        return { message: `잘못된 요청: ${message}`, statusCode: 400 };\n      case 401:\n        return { message: \"인증이 필요합니다\", statusCode: 401 };\n      case 403:\n        return { message: \"권한이 없습니다\", statusCode: 403 };\n      case 404:\n        return { message: \"요청한 리소스를 찾을 수 없습니다\", statusCode: 404 };\n      case 429:\n        return {\n          message: \"요청이 너무 많습니다. 잠시 후 다시 시도해주세요\",\n          statusCode: 429,\n        };\n      case 500:\n        return { message: \"서버 내부 오류가 발생했습니다\", statusCode: 500 };\n      default:\n        return {\n          message: `서버 오류 (${status}): ${message}`,\n          statusCode: status,\n        };\n    }\n  } else if (error.request) {\n    // 요청은 보냈지만 응답을 받지 못함\n    return {\n      message: \"서버에 연결할 수 없습니다. 네트워크 연결을 확인해주세요\",\n      statusCode: 0,\n    };\n  } else {\n    // 요청 설정 중 오류 발생\n    return {\n      message: `요청 오류: ${error.message}`,\n      statusCode: -1,\n    };\n  }\n};\n\n// =============================================================================\n// 상수 정의\n// =============================================================================\n\nexport const DEFAULT_PROJECT_CATEGORIES = [\n  {\n    id: \"instruction\",\n    name: \"역할 및 목표\",\n    color: \"blue\",\n    description: \"1단계: 역할 및 목표 설정\",\n    stepOrder: 1,\n  },\n  {\n    id: \"knowledge\",\n    name: \"지식 베이스\",\n    color: \"green\",\n    description: \"2단계: 지식 베이스 구축\",\n    stepOrder: 2,\n  },\n  {\n    id: \"secondary\",\n    name: \"CoT (사고 과정)\",\n    color: \"purple\",\n    description: \"3단계: Chain of Thought 사고 과정\",\n    stepOrder: 3,\n  },\n  {\n    id: \"style_guide\",\n    name: \"스타일 가이드\",\n    color: \"orange\",\n    description: \"4단계: 스타일 가이드 적용\",\n    stepOrder: 4,\n  },\n  {\n    id: \"validation\",\n    name: \"ReAct (추론+행동)\",\n    color: \"red\",\n    description: \"5단계: 추론과 행동 검증\",\n    stepOrder: 5,\n  },\n  {\n    id: \"enhancement\",\n    name: \"품질 검증\",\n    color: \"indigo\",\n    description: \"6단계: 최종 품질 검증\",\n    stepOrder: 6,\n  },\n];\n\nexport const COLOR_OPTIONS = [\n  {\n    id: \"blue\",\n    name: \"파랑\",\n    bgClass: \"bg-blue-100\",\n    textClass: \"text-blue-800\",\n    borderClass: \"border-blue-200\",\n  },\n  {\n    id: \"green\",\n    name: \"초록\",\n    bgClass: \"bg-green-100\",\n    textClass: \"text-green-800\",\n    borderClass: \"border-green-200\",\n  },\n  {\n    id: \"purple\",\n    name: \"보라\",\n    bgClass: \"bg-purple-100\",\n    textClass: \"text-purple-800\",\n    borderClass: \"border-purple-200\",\n  },\n  {\n    id: \"orange\",\n    name: \"주황\",\n    bgClass: \"bg-orange-100\",\n    textClass: \"text-orange-800\",\n    borderClass: \"border-orange-200\",\n  },\n  {\n    id: \"red\",\n    name: \"빨강\",\n    bgClass: \"bg-red-100\",\n    textClass: \"text-red-800\",\n    borderClass: \"border-red-200\",\n  },\n  {\n    id: \"indigo\",\n    name: \"남색\",\n    bgClass: \"bg-indigo-100\",\n    textClass: \"text-indigo-800\",\n    borderClass: \"border-indigo-200\",\n  },\n  {\n    id: \"pink\",\n    name: \"분홍\",\n    bgClass: \"bg-pink-100\",\n    textClass: \"text-pink-800\",\n    borderClass: \"border-pink-200\",\n  },\n  {\n    id: \"yellow\",\n    name: \"노랑\",\n    bgClass: \"bg-yellow-100\",\n    textClass: \"text-yellow-800\",\n    borderClass: \"border-yellow-200\",\n  },\n];\n\nexport const getCategoryInfo = (\n  categoryId,\n  userCategories = DEFAULT_PROJECT_CATEGORIES\n) => {\n  return (\n    userCategories.find((cat) => cat.id === categoryId) ||\n    DEFAULT_PROJECT_CATEGORIES.find((cat) => cat.id === categoryId) || {\n      id: categoryId,\n      name: categoryId,\n      color: \"gray\",\n      description: \"기타\",\n    }\n  );\n};\n\nexport const getCategoryColorClasses = (color) => {\n  const colorOption = COLOR_OPTIONS.find((option) => option.id === color);\n  if (colorOption) {\n    return {\n      bg: colorOption.bgClass,\n      text: colorOption.textClass,\n      border: colorOption.borderClass,\n    };\n  }\n  // 기본값\n  return {\n    bg: \"bg-gray-100\",\n    text: \"text-gray-800\",\n    border: \"border-gray-200\",\n  };\n};\n\nexport const filterProjects = (projects, filters) => {\n  let filtered = [...projects];\n\n  // 카테고리 필터\n  if (filters.category && filters.category !== \"all\") {\n    filtered = filtered.filter(\n      (project) => project.category === filters.category\n    );\n  }\n\n  // 검색어 필터\n  if (filters.searchQuery) {\n    const query = filters.searchQuery.toLowerCase();\n    filtered = filtered.filter(\n      (project) =>\n        project.name?.toLowerCase().includes(query) ||\n        project.description?.toLowerCase().includes(query) ||\n        project.tags?.some((tag) => tag.toLowerCase().includes(query))\n    );\n  }\n\n  // 정렬\n  switch (filters.sortBy) {\n    case \"created\":\n      filtered.sort((a, b) => new Date(b.createdAt) - new Date(a.createdAt));\n      break;\n    case \"updated\":\n      filtered.sort((a, b) => new Date(b.updatedAt) - new Date(a.updatedAt));\n      break;\n    case \"name\":\n      filtered.sort((a, b) => a.name?.localeCompare(b.name));\n      break;\n    default:\n      break;\n  }\n\n  return filtered;\n};\n\nexport const formatTokenCount = (count) => {\n  if (count >= 1000) {\n    return `${(count / 1000).toFixed(1)}K`;\n  }\n  return count.toString();\n};\n\nexport const formatFileSize = (bytes) => {\n  if (bytes >= 1024) {\n    return `${(bytes / 1024).toFixed(1)}KB`;\n  }\n  return `${bytes}B`;\n};\n\nexport const calculatePromptStats = (promptCards) => {\n  if (!promptCards || promptCards.length === 0) {\n    return {\n      totalCards: 0,\n      totalTokens: 0,\n      averageTokens: 0,\n      categories: [],\n    };\n  }\n\n  const totalTokens = promptCards.reduce((sum, card) => {\n    return sum + (card.tokenCount || 0);\n  }, 0);\n\n  const categories = [...new Set(promptCards.map((card) => card.category))];\n\n  return {\n    totalCards: promptCards.length,\n    totalTokens,\n    averageTokens: Math.round(totalTokens / promptCards.length),\n    categories,\n  };\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}