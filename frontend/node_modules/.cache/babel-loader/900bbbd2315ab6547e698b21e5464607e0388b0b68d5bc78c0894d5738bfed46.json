{"ast":null,"code":"import axios from\"axios\";// API 기본 설정\nconst API_BASE_URL=process.env.REACT_APP_API_URL||\"https://vph0fu827a.execute-api.us-east-1.amazonaws.com/prod\";// Axios 인스턴스\nconst api=axios.create({baseURL:API_BASE_URL,headers:{\"Content-Type\":\"application/json\"}});// 요청 인터셉터\napi.interceptors.request.use(config=>{var _config$method;console.log(\"API 요청:\",(_config$method=config.method)===null||_config$method===void 0?void 0:_config$method.toUpperCase(),config.url);return config;});// 응답 인터셉터\napi.interceptors.response.use(response=>{console.log(\"API 응답:\",response.status,response.config.url);return response;},error=>{var _error$response;console.error(\"API 오류:\",(_error$response=error.response)===null||_error$response===void 0?void 0:_error$response.status,error.message);return Promise.reject(error);});// =============================================================================\n// 1. 프로젝트 API\n// =============================================================================\nexport const projectAPI={getProjects:async()=>{const response=await api.get(\"/projects\");return response.data;},getProject:async projectId=>{const response=await api.get(`/projects/${projectId}`);return response.data;},createProject:async projectData=>{const response=await api.post(\"/projects\",projectData);return response.data;}};// =============================================================================\n// 2. 프롬프트 API (S3/DynamoDB 연동)\n// =============================================================================\nexport const promptCardAPI={// 프롬프트 카드 목록 조회\ngetPromptCards:async function(projectId){let includeContent=arguments.length>1&&arguments[1]!==undefined?arguments[1]:false;console.log(\"🔍 프롬프트 조회:\",projectId);const params=includeContent?{include_content:\"true\"}:{};const response=await api.get(`/prompts/${projectId}`,{params});console.log(\"✅ 프롬프트 조회 성공:\",response.data.count,\"개\");return response.data;},// 프롬프트 카드 생성\ncreatePromptCard:async(projectId,promptData)=>{console.log(\"🆕 프롬프트 생성:\",{projectId,promptData});const response=await api.post(`/prompts/${projectId}`,promptData);return response.data;},// 프롬프트 카드 수정 - S3/DynamoDB 저장\nupdatePromptCard:async(projectId,promptId,promptData)=>{console.log(\"💾 프롬프트 수정:\",{projectId,promptId});const response=await api.put(`/prompts/${projectId}/${promptId}`,promptData);return response.data;},// 프롬프트 카드 삭제\ndeletePromptCard:async(projectId,promptId)=>{console.log(\"🗑️ 프롬프트 삭제:\",{projectId,promptId});const response=await api.delete(`/prompts/${projectId}/${promptId}`);return response.data;}};// =============================================================================\n// 3. 제목 생성 API (Bedrock Claude 호출)\n// =============================================================================\nexport const generateAPI={// 실제 Bedrock Claude 호출\ngenerateTitle:async function(projectId,articleContent){let userRequest=arguments.length>2&&arguments[2]!==undefined?arguments[2]:\"\";console.log(\"🚀 제목 생성 시작:\",{projectId,articleLength:articleContent.length,userRequest});const response=await api.post(`/projects/${projectId}/generate`,{article:articleContent,userRequest});console.log(\"✅ 제목 생성 완료\");return response.data;}};// =============================================================================\n// 4. 유틸리티\n// =============================================================================\nexport const handleAPIError=error=>{if(error.response){const{status,data}=error.response;return{message:(data===null||data===void 0?void 0:data.error)||`서버 오류 (${status})`,status};}else if(error.request){return{message:\"네트워크 연결을 확인해주세요\",status:0};}else{return{message:error.message||\"알 수 없는 오류가 발생했습니다\",status:-1};}};// =============================================================================\n// 5. 인증 API\n// =============================================================================\nexport const authAPI={isAuthenticated:()=>{// 개발 모드: 항상 인증된 상태로 처리\nreturn true;},getCurrentUser:()=>{// 개발 모드: 가짜 사용자 정보 반환\nreturn{id:\"dev-user\",email:\"dev@example.com\",name:\"개발자\"};},signin:async credentials=>{// 개발 모드: 가짜 로그인\nconsole.log(\"🔐 개발 모드 로그인:\",credentials);return{success:true,message:\"로그인 성공 (개발 모드)\"};},signup:async userData=>{// 개발 모드: 가짜 회원가입\nconsole.log(\"📝 개발 모드 회원가입:\",userData);return{success:true,message:\"회원가입 성공 (개발 모드)\"};},signout:async()=>{// 개발 모드: 가짜 로그아웃\nconsole.log(\"👋 개발 모드 로그아웃\");return{success:true};},verifyEmail:async verificationData=>{console.log(\"✉️ 개발 모드 이메일 인증:\",verificationData);return{success:true,message:\"이메일 인증 성공 (개발 모드)\"};},forgotPassword:async email=>{console.log(\"🔄 개발 모드 비밀번호 재설정:\",email);return{success:true,message:\"비밀번호 재설정 이메일 발송 (개발 모드)\"};},confirmPassword:async resetData=>{console.log(\"🔒 개발 모드 비밀번호 확인:\",resetData);return{success:true,message:\"비밀번호 재설정 성공 (개발 모드)\"};}};// =============================================================================\n// 6. 카테고리 API\n// =============================================================================\nexport const DEFAULT_PROJECT_CATEGORIES=[{id:\"news\",name:\"뉴스\",color:\"blue\",description:\"일반 뉴스 기사\"},{id:\"economy\",name:\"경제\",color:\"green\",description:\"경제 관련 기사\"},{id:\"tech\",name:\"기술\",color:\"purple\",description:\"기술 및 IT 기사\"},{id:\"sports\",name:\"스포츠\",color:\"orange\",description:\"스포츠 기사\"},{id:\"culture\",name:\"문화\",color:\"pink\",description:\"문화 및 예술 기사\"}];export const categoryAPI={getUserCategories:async()=>{// 개발 모드: 기본 카테고리 반환\nreturn{categories:DEFAULT_PROJECT_CATEGORIES};},createCategory:async categoryData=>{console.log(\"📁 카테고리 생성:\",categoryData);return{id:`cat_${Date.now()}`,...categoryData,createdAt:new Date().toISOString()};},updateCategory:async(categoryId,categoryData)=>{console.log(\"📝 카테고리 수정:\",categoryId,categoryData);return{success:true};},deleteCategory:async categoryId=>{console.log(\"🗑️ 카테고리 삭제:\",categoryId);return{success:true};}};export const projectCategoryAPI={updateProjectCategory:async(projectId,categoryId)=>{console.log(\"📂 프로젝트 카테고리 변경:\",projectId,categoryId);return{success:true};}};// =============================================================================\n// 7. 오케스트레이션 API\n// =============================================================================\nexport const orchestrationAPI={startExecution:async(projectId,data)=>{console.log(\"🚀 오케스트레이션 시작:\",projectId,data);return{executionArn:`exec_${Date.now()}`,status:\"RUNNING\"};},getExecutionStatus:async executionArn=>{console.log(\"📊 실행 상태 조회:\",executionArn);return{status:\"SUCCEEDED\",result:{message:\"완료됨\"}};}};// =============================================================================\n// 8. 유틸리티 함수들\n// =============================================================================\nexport const getCategoryInfo=function(categoryId){let userCategories=arguments.length>1&&arguments[1]!==undefined?arguments[1]:DEFAULT_PROJECT_CATEGORIES;const category=userCategories.find(cat=>cat.id===categoryId);return category||{id:categoryId,name:\"알 수 없음\",color:\"gray\",description:\"알 수 없는 카테고리\"};};export const getCategoryColorClasses=color=>{const colorMap={blue:\"bg-blue-50 text-blue-700 border-blue-200\",green:\"bg-green-50 text-green-700 border-green-200\",purple:\"bg-purple-50 text-purple-700 border-purple-200\",orange:\"bg-orange-50 text-orange-700 border-orange-200\",pink:\"bg-pink-50 text-pink-700 border-pink-200\",red:\"bg-red-50 text-red-700 border-red-200\",yellow:\"bg-yellow-50 text-yellow-700 border-yellow-200\",indigo:\"bg-indigo-50 text-indigo-700 border-indigo-200\",gray:\"bg-gray-50 text-gray-700 border-gray-200\"};return colorMap[color]||colorMap.gray;};export const filterProjects=(projects,filters)=>{let filtered=[...projects];// 카테고리 필터\nif(filters.category&&filters.category!==\"all\"){filtered=filtered.filter(project=>project.category===filters.category);}// 검색 필터\nif(filters.searchQuery){const query=filters.searchQuery.toLowerCase();filtered=filtered.filter(project=>project.name.toLowerCase().includes(query)||project.description&&project.description.toLowerCase().includes(query)||project.tags&&project.tags.some(tag=>tag.toLowerCase().includes(query)));}// 정렬\nfiltered.sort((a,b)=>{switch(filters.sortBy){case\"name\":return a.name.localeCompare(b.name,\"ko\");case\"updated\":return new Date(b.updatedAt||b.createdAt)-new Date(a.updatedAt||a.createdAt);case\"created\":default:return new Date(b.createdAt)-new Date(a.createdAt);}});return filtered;};export const formatTokenCount=count=>{if(!count||count===0)return\"0\";if(count<1000)return count.toString();if(count<1000000)return`${(count/1000).toFixed(1)}K`;return`${(count/1000000).toFixed(1)}M`;};export const formatFileSize=bytes=>{if(!bytes||bytes===0)return\"0 B\";const sizes=[\"B\",\"KB\",\"MB\",\"GB\"];const i=Math.floor(Math.log(bytes)/Math.log(1024));return`${(bytes/Math.pow(1024,i)).toFixed(1)} ${sizes[i]}`;};export const calculatePromptStats=promptCards=>{if(!promptCards||promptCards.length===0){return{totalCards:0,totalTokens:0,totalSize:0,categories:{}};}const stats={totalCards:promptCards.length,totalTokens:0,totalSize:0,categories:{}};promptCards.forEach(card=>{// 토큰 수 계산 (대략적으로 글자 수 / 4)\nconst contentLength=(card.content||\"\").length;const estimatedTokens=Math.ceil(contentLength/4);stats.totalTokens+=estimatedTokens;// 파일 크기 계산 (UTF-8 기준)\nstats.totalSize+=new Blob([card.content||\"\"]).size;// 카테고리별 통계\nconst category=card.category||\"uncategorized\";if(!stats.categories[category]){stats.categories[category]={count:0,tokens:0,size:0};}stats.categories[category].count++;stats.categories[category].tokens+=estimatedTokens;stats.categories[category].size+=new Blob([card.content||\"\"]).size;});return stats;};// 색상 옵션\nexport const COLOR_OPTIONS=[{id:\"blue\",name:\"파란색\",class:\"bg-blue-500\"},{id:\"green\",name:\"초록색\",class:\"bg-green-500\"},{id:\"purple\",name:\"보라색\",class:\"bg-purple-500\"},{id:\"orange\",name:\"주황색\",class:\"bg-orange-500\"},{id:\"pink\",name:\"분홍색\",class:\"bg-pink-500\"},{id:\"red\",name:\"빨간색\",class:\"bg-red-500\"},{id:\"yellow\",name:\"노란색\",class:\"bg-yellow-500\"},{id:\"indigo\",name:\"남색\",class:\"bg-indigo-500\"},{id:\"gray\",name:\"회색\",class:\"bg-gray-500\"}];export default api;","map":{"version":3,"names":["axios","API_BASE_URL","process","env","REACT_APP_API_URL","api","create","baseURL","headers","interceptors","request","use","config","_config$method","console","log","method","toUpperCase","url","response","status","error","_error$response","message","Promise","reject","projectAPI","getProjects","get","data","getProject","projectId","createProject","projectData","post","promptCardAPI","getPromptCards","includeContent","arguments","length","undefined","params","include_content","count","createPromptCard","promptData","updatePromptCard","promptId","put","deletePromptCard","delete","generateAPI","generateTitle","articleContent","userRequest","articleLength","article","handleAPIError","authAPI","isAuthenticated","getCurrentUser","id","email","name","signin","credentials","success","signup","userData","signout","verifyEmail","verificationData","forgotPassword","confirmPassword","resetData","DEFAULT_PROJECT_CATEGORIES","color","description","categoryAPI","getUserCategories","categories","createCategory","categoryData","Date","now","createdAt","toISOString","updateCategory","categoryId","deleteCategory","projectCategoryAPI","updateProjectCategory","orchestrationAPI","startExecution","executionArn","getExecutionStatus","result","getCategoryInfo","userCategories","category","find","cat","getCategoryColorClasses","colorMap","blue","green","purple","orange","pink","red","yellow","indigo","gray","filterProjects","projects","filters","filtered","filter","project","searchQuery","query","toLowerCase","includes","tags","some","tag","sort","a","b","sortBy","localeCompare","updatedAt","formatTokenCount","toString","toFixed","formatFileSize","bytes","sizes","i","Math","floor","pow","calculatePromptStats","promptCards","totalCards","totalTokens","totalSize","stats","forEach","card","contentLength","content","estimatedTokens","ceil","Blob","size","tokens","COLOR_OPTIONS","class"],"sources":["/Users/yeong-gwang/Documents/work/서울경제신문/ai_제목달기/frontend/src/services/api.js"],"sourcesContent":["import axios from \"axios\";\n\n// API 기본 설정\nconst API_BASE_URL =\n  process.env.REACT_APP_API_URL ||\n  \"https://vph0fu827a.execute-api.us-east-1.amazonaws.com/prod\";\n\n// Axios 인스턴스\nconst api = axios.create({\n  baseURL: API_BASE_URL,\n  headers: { \"Content-Type\": \"application/json\" },\n});\n\n// 요청 인터셉터\napi.interceptors.request.use((config) => {\n  console.log(\"API 요청:\", config.method?.toUpperCase(), config.url);\n  return config;\n});\n\n// 응답 인터셉터\napi.interceptors.response.use(\n  (response) => {\n    console.log(\"API 응답:\", response.status, response.config.url);\n    return response;\n  },\n  (error) => {\n    console.error(\"API 오류:\", error.response?.status, error.message);\n    return Promise.reject(error);\n  }\n);\n\n// =============================================================================\n// 1. 프로젝트 API\n// =============================================================================\nexport const projectAPI = {\n  getProjects: async () => {\n    const response = await api.get(\"/projects\");\n    return response.data;\n  },\n\n  getProject: async (projectId) => {\n    const response = await api.get(`/projects/${projectId}`);\n    return response.data;\n  },\n\n  createProject: async (projectData) => {\n    const response = await api.post(\"/projects\", projectData);\n    return response.data;\n  },\n};\n\n// =============================================================================\n// 2. 프롬프트 API (S3/DynamoDB 연동)\n// =============================================================================\nexport const promptCardAPI = {\n  // 프롬프트 카드 목록 조회\n  getPromptCards: async (projectId, includeContent = false) => {\n    console.log(\"🔍 프롬프트 조회:\", projectId);\n\n    const params = includeContent ? { include_content: \"true\" } : {};\n    const response = await api.get(`/prompts/${projectId}`, { params });\n\n    console.log(\"✅ 프롬프트 조회 성공:\", response.data.count, \"개\");\n    return response.data;\n  },\n\n  // 프롬프트 카드 생성\n  createPromptCard: async (projectId, promptData) => {\n    console.log(\"🆕 프롬프트 생성:\", { projectId, promptData });\n\n    const response = await api.post(`/prompts/${projectId}`, promptData);\n    return response.data;\n  },\n\n  // 프롬프트 카드 수정 - S3/DynamoDB 저장\n  updatePromptCard: async (projectId, promptId, promptData) => {\n    console.log(\"💾 프롬프트 수정:\", { projectId, promptId });\n\n    const response = await api.put(\n      `/prompts/${projectId}/${promptId}`,\n      promptData\n    );\n    return response.data;\n  },\n\n  // 프롬프트 카드 삭제\n  deletePromptCard: async (projectId, promptId) => {\n    console.log(\"🗑️ 프롬프트 삭제:\", { projectId, promptId });\n\n    const response = await api.delete(`/prompts/${projectId}/${promptId}`);\n    return response.data;\n  },\n};\n\n// =============================================================================\n// 3. 제목 생성 API (Bedrock Claude 호출)\n// =============================================================================\nexport const generateAPI = {\n  // 실제 Bedrock Claude 호출\n  generateTitle: async (projectId, articleContent, userRequest = \"\") => {\n    console.log(\"🚀 제목 생성 시작:\", {\n      projectId,\n      articleLength: articleContent.length,\n      userRequest,\n    });\n\n    const response = await api.post(`/projects/${projectId}/generate`, {\n      article: articleContent,\n      userRequest,\n    });\n\n    console.log(\"✅ 제목 생성 완료\");\n    return response.data;\n  },\n};\n\n// =============================================================================\n// 4. 유틸리티\n// =============================================================================\nexport const handleAPIError = (error) => {\n  if (error.response) {\n    const { status, data } = error.response;\n    return {\n      message: data?.error || `서버 오류 (${status})`,\n      status,\n    };\n  } else if (error.request) {\n    return {\n      message: \"네트워크 연결을 확인해주세요\",\n      status: 0,\n    };\n  } else {\n    return {\n      message: error.message || \"알 수 없는 오류가 발생했습니다\",\n      status: -1,\n    };\n  }\n};\n\n// =============================================================================\n// 5. 인증 API\n// =============================================================================\nexport const authAPI = {\n  isAuthenticated: () => {\n    // 개발 모드: 항상 인증된 상태로 처리\n    return true;\n  },\n\n  getCurrentUser: () => {\n    // 개발 모드: 가짜 사용자 정보 반환\n    return {\n      id: \"dev-user\",\n      email: \"dev@example.com\",\n      name: \"개발자\",\n    };\n  },\n\n  signin: async (credentials) => {\n    // 개발 모드: 가짜 로그인\n    console.log(\"🔐 개발 모드 로그인:\", credentials);\n    return { success: true, message: \"로그인 성공 (개발 모드)\" };\n  },\n\n  signup: async (userData) => {\n    // 개발 모드: 가짜 회원가입\n    console.log(\"📝 개발 모드 회원가입:\", userData);\n    return { success: true, message: \"회원가입 성공 (개발 모드)\" };\n  },\n\n  signout: async () => {\n    // 개발 모드: 가짜 로그아웃\n    console.log(\"👋 개발 모드 로그아웃\");\n    return { success: true };\n  },\n\n  verifyEmail: async (verificationData) => {\n    console.log(\"✉️ 개발 모드 이메일 인증:\", verificationData);\n    return { success: true, message: \"이메일 인증 성공 (개발 모드)\" };\n  },\n\n  forgotPassword: async (email) => {\n    console.log(\"🔄 개발 모드 비밀번호 재설정:\", email);\n    return { success: true, message: \"비밀번호 재설정 이메일 발송 (개발 모드)\" };\n  },\n\n  confirmPassword: async (resetData) => {\n    console.log(\"🔒 개발 모드 비밀번호 확인:\", resetData);\n    return { success: true, message: \"비밀번호 재설정 성공 (개발 모드)\" };\n  },\n};\n\n// =============================================================================\n// 6. 카테고리 API\n// =============================================================================\nexport const DEFAULT_PROJECT_CATEGORIES = [\n  { id: \"news\", name: \"뉴스\", color: \"blue\", description: \"일반 뉴스 기사\" },\n  { id: \"economy\", name: \"경제\", color: \"green\", description: \"경제 관련 기사\" },\n  { id: \"tech\", name: \"기술\", color: \"purple\", description: \"기술 및 IT 기사\" },\n  { id: \"sports\", name: \"스포츠\", color: \"orange\", description: \"스포츠 기사\" },\n  { id: \"culture\", name: \"문화\", color: \"pink\", description: \"문화 및 예술 기사\" },\n];\n\nexport const categoryAPI = {\n  getUserCategories: async () => {\n    // 개발 모드: 기본 카테고리 반환\n    return { categories: DEFAULT_PROJECT_CATEGORIES };\n  },\n\n  createCategory: async (categoryData) => {\n    console.log(\"📁 카테고리 생성:\", categoryData);\n    return { \n      id: `cat_${Date.now()}`, \n      ...categoryData, \n      createdAt: new Date().toISOString() \n    };\n  },\n\n  updateCategory: async (categoryId, categoryData) => {\n    console.log(\"📝 카테고리 수정:\", categoryId, categoryData);\n    return { success: true };\n  },\n\n  deleteCategory: async (categoryId) => {\n    console.log(\"🗑️ 카테고리 삭제:\", categoryId);\n    return { success: true };\n  },\n};\n\nexport const projectCategoryAPI = {\n  updateProjectCategory: async (projectId, categoryId) => {\n    console.log(\"📂 프로젝트 카테고리 변경:\", projectId, categoryId);\n    return { success: true };\n  },\n};\n\n// =============================================================================\n// 7. 오케스트레이션 API\n// =============================================================================\nexport const orchestrationAPI = {\n  startExecution: async (projectId, data) => {\n    console.log(\"🚀 오케스트레이션 시작:\", projectId, data);\n    return { \n      executionArn: `exec_${Date.now()}`, \n      status: \"RUNNING\" \n    };\n  },\n\n  getExecutionStatus: async (executionArn) => {\n    console.log(\"📊 실행 상태 조회:\", executionArn);\n    return { \n      status: \"SUCCEEDED\", \n      result: { message: \"완료됨\" } \n    };\n  },\n};\n\n// =============================================================================\n// 8. 유틸리티 함수들\n// =============================================================================\nexport const getCategoryInfo = (categoryId, userCategories = DEFAULT_PROJECT_CATEGORIES) => {\n  const category = userCategories.find(cat => cat.id === categoryId);\n  return category || { \n    id: categoryId, \n    name: \"알 수 없음\", \n    color: \"gray\", \n    description: \"알 수 없는 카테고리\" \n  };\n};\n\nexport const getCategoryColorClasses = (color) => {\n  const colorMap = {\n    blue: \"bg-blue-50 text-blue-700 border-blue-200\",\n    green: \"bg-green-50 text-green-700 border-green-200\",\n    purple: \"bg-purple-50 text-purple-700 border-purple-200\",\n    orange: \"bg-orange-50 text-orange-700 border-orange-200\",\n    pink: \"bg-pink-50 text-pink-700 border-pink-200\",\n    red: \"bg-red-50 text-red-700 border-red-200\",\n    yellow: \"bg-yellow-50 text-yellow-700 border-yellow-200\",\n    indigo: \"bg-indigo-50 text-indigo-700 border-indigo-200\",\n    gray: \"bg-gray-50 text-gray-700 border-gray-200\",\n  };\n  return colorMap[color] || colorMap.gray;\n};\n\nexport const filterProjects = (projects, filters) => {\n  let filtered = [...projects];\n\n  // 카테고리 필터\n  if (filters.category && filters.category !== \"all\") {\n    filtered = filtered.filter(project => project.category === filters.category);\n  }\n\n  // 검색 필터\n  if (filters.searchQuery) {\n    const query = filters.searchQuery.toLowerCase();\n    filtered = filtered.filter(project =>\n      project.name.toLowerCase().includes(query) ||\n      (project.description && project.description.toLowerCase().includes(query)) ||\n      (project.tags && project.tags.some(tag => tag.toLowerCase().includes(query)))\n    );\n  }\n\n  // 정렬\n  filtered.sort((a, b) => {\n    switch (filters.sortBy) {\n      case \"name\":\n        return a.name.localeCompare(b.name, \"ko\");\n      case \"updated\":\n        return new Date(b.updatedAt || b.createdAt) - new Date(a.updatedAt || a.createdAt);\n      case \"created\":\n      default:\n        return new Date(b.createdAt) - new Date(a.createdAt);\n    }\n  });\n\n  return filtered;\n};\n\nexport const formatTokenCount = (count) => {\n  if (!count || count === 0) return \"0\";\n  if (count < 1000) return count.toString();\n  if (count < 1000000) return `${(count / 1000).toFixed(1)}K`;\n  return `${(count / 1000000).toFixed(1)}M`;\n};\n\nexport const formatFileSize = (bytes) => {\n  if (!bytes || bytes === 0) return \"0 B\";\n  const sizes = [\"B\", \"KB\", \"MB\", \"GB\"];\n  const i = Math.floor(Math.log(bytes) / Math.log(1024));\n  return `${(bytes / Math.pow(1024, i)).toFixed(1)} ${sizes[i]}`;\n};\n\nexport const calculatePromptStats = (promptCards) => {\n  if (!promptCards || promptCards.length === 0) {\n    return {\n      totalCards: 0,\n      totalTokens: 0,\n      totalSize: 0,\n      categories: {},\n    };\n  }\n\n  const stats = {\n    totalCards: promptCards.length,\n    totalTokens: 0,\n    totalSize: 0,\n    categories: {},\n  };\n\n  promptCards.forEach(card => {\n    // 토큰 수 계산 (대략적으로 글자 수 / 4)\n    const contentLength = (card.content || \"\").length;\n    const estimatedTokens = Math.ceil(contentLength / 4);\n    stats.totalTokens += estimatedTokens;\n    \n    // 파일 크기 계산 (UTF-8 기준)\n    stats.totalSize += new Blob([card.content || \"\"]).size;\n    \n    // 카테고리별 통계\n    const category = card.category || \"uncategorized\";\n    if (!stats.categories[category]) {\n      stats.categories[category] = { count: 0, tokens: 0, size: 0 };\n    }\n    stats.categories[category].count++;\n    stats.categories[category].tokens += estimatedTokens;\n    stats.categories[category].size += new Blob([card.content || \"\"]).size;\n  });\n\n  return stats;\n};\n\n// 색상 옵션\nexport const COLOR_OPTIONS = [\n  { id: \"blue\", name: \"파란색\", class: \"bg-blue-500\" },\n  { id: \"green\", name: \"초록색\", class: \"bg-green-500\" },\n  { id: \"purple\", name: \"보라색\", class: \"bg-purple-500\" },\n  { id: \"orange\", name: \"주황색\", class: \"bg-orange-500\" },\n  { id: \"pink\", name: \"분홍색\", class: \"bg-pink-500\" },\n  { id: \"red\", name: \"빨간색\", class: \"bg-red-500\" },\n  { id: \"yellow\", name: \"노란색\", class: \"bg-yellow-500\" },\n  { id: \"indigo\", name: \"남색\", class: \"bg-indigo-500\" },\n  { id: \"gray\", name: \"회색\", class: \"bg-gray-500\" },\n];\n\nexport default api;\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,KAAM,OAAO,CAEzB;AACA,KAAM,CAAAC,YAAY,CAChBC,OAAO,CAACC,GAAG,CAACC,iBAAiB,EAC7B,6DAA6D,CAE/D;AACA,KAAM,CAAAC,GAAG,CAAGL,KAAK,CAACM,MAAM,CAAC,CACvBC,OAAO,CAAEN,YAAY,CACrBO,OAAO,CAAE,CAAE,cAAc,CAAE,kBAAmB,CAChD,CAAC,CAAC,CAEF;AACAH,GAAG,CAACI,YAAY,CAACC,OAAO,CAACC,GAAG,CAAEC,MAAM,EAAK,KAAAC,cAAA,CACvCC,OAAO,CAACC,GAAG,CAAC,SAAS,EAAAF,cAAA,CAAED,MAAM,CAACI,MAAM,UAAAH,cAAA,iBAAbA,cAAA,CAAeI,WAAW,CAAC,CAAC,CAAEL,MAAM,CAACM,GAAG,CAAC,CAChE,MAAO,CAAAN,MAAM,CACf,CAAC,CAAC,CAEF;AACAP,GAAG,CAACI,YAAY,CAACU,QAAQ,CAACR,GAAG,CAC1BQ,QAAQ,EAAK,CACZL,OAAO,CAACC,GAAG,CAAC,SAAS,CAAEI,QAAQ,CAACC,MAAM,CAAED,QAAQ,CAACP,MAAM,CAACM,GAAG,CAAC,CAC5D,MAAO,CAAAC,QAAQ,CACjB,CAAC,CACAE,KAAK,EAAK,KAAAC,eAAA,CACTR,OAAO,CAACO,KAAK,CAAC,SAAS,EAAAC,eAAA,CAAED,KAAK,CAACF,QAAQ,UAAAG,eAAA,iBAAdA,eAAA,CAAgBF,MAAM,CAAEC,KAAK,CAACE,OAAO,CAAC,CAC/D,MAAO,CAAAC,OAAO,CAACC,MAAM,CAACJ,KAAK,CAAC,CAC9B,CACF,CAAC,CAED;AACA;AACA;AACA,MAAO,MAAM,CAAAK,UAAU,CAAG,CACxBC,WAAW,CAAE,KAAAA,CAAA,GAAY,CACvB,KAAM,CAAAR,QAAQ,CAAG,KAAM,CAAAd,GAAG,CAACuB,GAAG,CAAC,WAAW,CAAC,CAC3C,MAAO,CAAAT,QAAQ,CAACU,IAAI,CACtB,CAAC,CAEDC,UAAU,CAAE,KAAO,CAAAC,SAAS,EAAK,CAC/B,KAAM,CAAAZ,QAAQ,CAAG,KAAM,CAAAd,GAAG,CAACuB,GAAG,CAAC,aAAaG,SAAS,EAAE,CAAC,CACxD,MAAO,CAAAZ,QAAQ,CAACU,IAAI,CACtB,CAAC,CAEDG,aAAa,CAAE,KAAO,CAAAC,WAAW,EAAK,CACpC,KAAM,CAAAd,QAAQ,CAAG,KAAM,CAAAd,GAAG,CAAC6B,IAAI,CAAC,WAAW,CAAED,WAAW,CAAC,CACzD,MAAO,CAAAd,QAAQ,CAACU,IAAI,CACtB,CACF,CAAC,CAED;AACA;AACA;AACA,MAAO,MAAM,CAAAM,aAAa,CAAG,CAC3B;AACAC,cAAc,CAAE,cAAAA,CAAOL,SAAS,CAA6B,IAA3B,CAAAM,cAAc,CAAAC,SAAA,CAAAC,MAAA,IAAAD,SAAA,MAAAE,SAAA,CAAAF,SAAA,IAAG,KAAK,CACtDxB,OAAO,CAACC,GAAG,CAAC,aAAa,CAAEgB,SAAS,CAAC,CAErC,KAAM,CAAAU,MAAM,CAAGJ,cAAc,CAAG,CAAEK,eAAe,CAAE,MAAO,CAAC,CAAG,CAAC,CAAC,CAChE,KAAM,CAAAvB,QAAQ,CAAG,KAAM,CAAAd,GAAG,CAACuB,GAAG,CAAC,YAAYG,SAAS,EAAE,CAAE,CAAEU,MAAO,CAAC,CAAC,CAEnE3B,OAAO,CAACC,GAAG,CAAC,eAAe,CAAEI,QAAQ,CAACU,IAAI,CAACc,KAAK,CAAE,GAAG,CAAC,CACtD,MAAO,CAAAxB,QAAQ,CAACU,IAAI,CACtB,CAAC,CAED;AACAe,gBAAgB,CAAE,KAAAA,CAAOb,SAAS,CAAEc,UAAU,GAAK,CACjD/B,OAAO,CAACC,GAAG,CAAC,aAAa,CAAE,CAAEgB,SAAS,CAAEc,UAAW,CAAC,CAAC,CAErD,KAAM,CAAA1B,QAAQ,CAAG,KAAM,CAAAd,GAAG,CAAC6B,IAAI,CAAC,YAAYH,SAAS,EAAE,CAAEc,UAAU,CAAC,CACpE,MAAO,CAAA1B,QAAQ,CAACU,IAAI,CACtB,CAAC,CAED;AACAiB,gBAAgB,CAAE,KAAAA,CAAOf,SAAS,CAAEgB,QAAQ,CAAEF,UAAU,GAAK,CAC3D/B,OAAO,CAACC,GAAG,CAAC,aAAa,CAAE,CAAEgB,SAAS,CAAEgB,QAAS,CAAC,CAAC,CAEnD,KAAM,CAAA5B,QAAQ,CAAG,KAAM,CAAAd,GAAG,CAAC2C,GAAG,CAC5B,YAAYjB,SAAS,IAAIgB,QAAQ,EAAE,CACnCF,UACF,CAAC,CACD,MAAO,CAAA1B,QAAQ,CAACU,IAAI,CACtB,CAAC,CAED;AACAoB,gBAAgB,CAAE,KAAAA,CAAOlB,SAAS,CAAEgB,QAAQ,GAAK,CAC/CjC,OAAO,CAACC,GAAG,CAAC,cAAc,CAAE,CAAEgB,SAAS,CAAEgB,QAAS,CAAC,CAAC,CAEpD,KAAM,CAAA5B,QAAQ,CAAG,KAAM,CAAAd,GAAG,CAAC6C,MAAM,CAAC,YAAYnB,SAAS,IAAIgB,QAAQ,EAAE,CAAC,CACtE,MAAO,CAAA5B,QAAQ,CAACU,IAAI,CACtB,CACF,CAAC,CAED;AACA;AACA;AACA,MAAO,MAAM,CAAAsB,WAAW,CAAG,CACzB;AACAC,aAAa,CAAE,cAAAA,CAAOrB,SAAS,CAAEsB,cAAc,CAAuB,IAArB,CAAAC,WAAW,CAAAhB,SAAA,CAAAC,MAAA,IAAAD,SAAA,MAAAE,SAAA,CAAAF,SAAA,IAAG,EAAE,CAC/DxB,OAAO,CAACC,GAAG,CAAC,cAAc,CAAE,CAC1BgB,SAAS,CACTwB,aAAa,CAAEF,cAAc,CAACd,MAAM,CACpCe,WACF,CAAC,CAAC,CAEF,KAAM,CAAAnC,QAAQ,CAAG,KAAM,CAAAd,GAAG,CAAC6B,IAAI,CAAC,aAAaH,SAAS,WAAW,CAAE,CACjEyB,OAAO,CAAEH,cAAc,CACvBC,WACF,CAAC,CAAC,CAEFxC,OAAO,CAACC,GAAG,CAAC,YAAY,CAAC,CACzB,MAAO,CAAAI,QAAQ,CAACU,IAAI,CACtB,CACF,CAAC,CAED;AACA;AACA;AACA,MAAO,MAAM,CAAA4B,cAAc,CAAIpC,KAAK,EAAK,CACvC,GAAIA,KAAK,CAACF,QAAQ,CAAE,CAClB,KAAM,CAAEC,MAAM,CAAES,IAAK,CAAC,CAAGR,KAAK,CAACF,QAAQ,CACvC,MAAO,CACLI,OAAO,CAAE,CAAAM,IAAI,SAAJA,IAAI,iBAAJA,IAAI,CAAER,KAAK,GAAI,UAAUD,MAAM,GAAG,CAC3CA,MACF,CAAC,CACH,CAAC,IAAM,IAAIC,KAAK,CAACX,OAAO,CAAE,CACxB,MAAO,CACLa,OAAO,CAAE,iBAAiB,CAC1BH,MAAM,CAAE,CACV,CAAC,CACH,CAAC,IAAM,CACL,MAAO,CACLG,OAAO,CAAEF,KAAK,CAACE,OAAO,EAAI,mBAAmB,CAC7CH,MAAM,CAAE,CAAC,CACX,CAAC,CACH,CACF,CAAC,CAED;AACA;AACA;AACA,MAAO,MAAM,CAAAsC,OAAO,CAAG,CACrBC,eAAe,CAAEA,CAAA,GAAM,CACrB;AACA,MAAO,KAAI,CACb,CAAC,CAEDC,cAAc,CAAEA,CAAA,GAAM,CACpB;AACA,MAAO,CACLC,EAAE,CAAE,UAAU,CACdC,KAAK,CAAE,iBAAiB,CACxBC,IAAI,CAAE,KACR,CAAC,CACH,CAAC,CAEDC,MAAM,CAAE,KAAO,CAAAC,WAAW,EAAK,CAC7B;AACAnD,OAAO,CAACC,GAAG,CAAC,eAAe,CAAEkD,WAAW,CAAC,CACzC,MAAO,CAAEC,OAAO,CAAE,IAAI,CAAE3C,OAAO,CAAE,gBAAiB,CAAC,CACrD,CAAC,CAED4C,MAAM,CAAE,KAAO,CAAAC,QAAQ,EAAK,CAC1B;AACAtD,OAAO,CAACC,GAAG,CAAC,gBAAgB,CAAEqD,QAAQ,CAAC,CACvC,MAAO,CAAEF,OAAO,CAAE,IAAI,CAAE3C,OAAO,CAAE,iBAAkB,CAAC,CACtD,CAAC,CAED8C,OAAO,CAAE,KAAAA,CAAA,GAAY,CACnB;AACAvD,OAAO,CAACC,GAAG,CAAC,eAAe,CAAC,CAC5B,MAAO,CAAEmD,OAAO,CAAE,IAAK,CAAC,CAC1B,CAAC,CAEDI,WAAW,CAAE,KAAO,CAAAC,gBAAgB,EAAK,CACvCzD,OAAO,CAACC,GAAG,CAAC,kBAAkB,CAAEwD,gBAAgB,CAAC,CACjD,MAAO,CAAEL,OAAO,CAAE,IAAI,CAAE3C,OAAO,CAAE,mBAAoB,CAAC,CACxD,CAAC,CAEDiD,cAAc,CAAE,KAAO,CAAAV,KAAK,EAAK,CAC/BhD,OAAO,CAACC,GAAG,CAAC,oBAAoB,CAAE+C,KAAK,CAAC,CACxC,MAAO,CAAEI,OAAO,CAAE,IAAI,CAAE3C,OAAO,CAAE,yBAA0B,CAAC,CAC9D,CAAC,CAEDkD,eAAe,CAAE,KAAO,CAAAC,SAAS,EAAK,CACpC5D,OAAO,CAACC,GAAG,CAAC,mBAAmB,CAAE2D,SAAS,CAAC,CAC3C,MAAO,CAAER,OAAO,CAAE,IAAI,CAAE3C,OAAO,CAAE,qBAAsB,CAAC,CAC1D,CACF,CAAC,CAED;AACA;AACA;AACA,MAAO,MAAM,CAAAoD,0BAA0B,CAAG,CACxC,CAAEd,EAAE,CAAE,MAAM,CAAEE,IAAI,CAAE,IAAI,CAAEa,KAAK,CAAE,MAAM,CAAEC,WAAW,CAAE,UAAW,CAAC,CAClE,CAAEhB,EAAE,CAAE,SAAS,CAAEE,IAAI,CAAE,IAAI,CAAEa,KAAK,CAAE,OAAO,CAAEC,WAAW,CAAE,UAAW,CAAC,CACtE,CAAEhB,EAAE,CAAE,MAAM,CAAEE,IAAI,CAAE,IAAI,CAAEa,KAAK,CAAE,QAAQ,CAAEC,WAAW,CAAE,YAAa,CAAC,CACtE,CAAEhB,EAAE,CAAE,QAAQ,CAAEE,IAAI,CAAE,KAAK,CAAEa,KAAK,CAAE,QAAQ,CAAEC,WAAW,CAAE,QAAS,CAAC,CACrE,CAAEhB,EAAE,CAAE,SAAS,CAAEE,IAAI,CAAE,IAAI,CAAEa,KAAK,CAAE,MAAM,CAAEC,WAAW,CAAE,YAAa,CAAC,CACxE,CAED,MAAO,MAAM,CAAAC,WAAW,CAAG,CACzBC,iBAAiB,CAAE,KAAAA,CAAA,GAAY,CAC7B;AACA,MAAO,CAAEC,UAAU,CAAEL,0BAA2B,CAAC,CACnD,CAAC,CAEDM,cAAc,CAAE,KAAO,CAAAC,YAAY,EAAK,CACtCpE,OAAO,CAACC,GAAG,CAAC,aAAa,CAAEmE,YAAY,CAAC,CACxC,MAAO,CACLrB,EAAE,CAAE,OAAOsB,IAAI,CAACC,GAAG,CAAC,CAAC,EAAE,CACvB,GAAGF,YAAY,CACfG,SAAS,CAAE,GAAI,CAAAF,IAAI,CAAC,CAAC,CAACG,WAAW,CAAC,CACpC,CAAC,CACH,CAAC,CAEDC,cAAc,CAAE,KAAAA,CAAOC,UAAU,CAAEN,YAAY,GAAK,CAClDpE,OAAO,CAACC,GAAG,CAAC,aAAa,CAAEyE,UAAU,CAAEN,YAAY,CAAC,CACpD,MAAO,CAAEhB,OAAO,CAAE,IAAK,CAAC,CAC1B,CAAC,CAEDuB,cAAc,CAAE,KAAO,CAAAD,UAAU,EAAK,CACpC1E,OAAO,CAACC,GAAG,CAAC,cAAc,CAAEyE,UAAU,CAAC,CACvC,MAAO,CAAEtB,OAAO,CAAE,IAAK,CAAC,CAC1B,CACF,CAAC,CAED,MAAO,MAAM,CAAAwB,kBAAkB,CAAG,CAChCC,qBAAqB,CAAE,KAAAA,CAAO5D,SAAS,CAAEyD,UAAU,GAAK,CACtD1E,OAAO,CAACC,GAAG,CAAC,kBAAkB,CAAEgB,SAAS,CAAEyD,UAAU,CAAC,CACtD,MAAO,CAAEtB,OAAO,CAAE,IAAK,CAAC,CAC1B,CACF,CAAC,CAED;AACA;AACA;AACA,MAAO,MAAM,CAAA0B,gBAAgB,CAAG,CAC9BC,cAAc,CAAE,KAAAA,CAAO9D,SAAS,CAAEF,IAAI,GAAK,CACzCf,OAAO,CAACC,GAAG,CAAC,gBAAgB,CAAEgB,SAAS,CAAEF,IAAI,CAAC,CAC9C,MAAO,CACLiE,YAAY,CAAE,QAAQX,IAAI,CAACC,GAAG,CAAC,CAAC,EAAE,CAClChE,MAAM,CAAE,SACV,CAAC,CACH,CAAC,CAED2E,kBAAkB,CAAE,KAAO,CAAAD,YAAY,EAAK,CAC1ChF,OAAO,CAACC,GAAG,CAAC,cAAc,CAAE+E,YAAY,CAAC,CACzC,MAAO,CACL1E,MAAM,CAAE,WAAW,CACnB4E,MAAM,CAAE,CAAEzE,OAAO,CAAE,KAAM,CAC3B,CAAC,CACH,CACF,CAAC,CAED;AACA;AACA;AACA,MAAO,MAAM,CAAA0E,eAAe,CAAG,QAAAA,CAACT,UAAU,CAAkD,IAAhD,CAAAU,cAAc,CAAA5D,SAAA,CAAAC,MAAA,IAAAD,SAAA,MAAAE,SAAA,CAAAF,SAAA,IAAGqC,0BAA0B,CACrF,KAAM,CAAAwB,QAAQ,CAAGD,cAAc,CAACE,IAAI,CAACC,GAAG,EAAIA,GAAG,CAACxC,EAAE,GAAK2B,UAAU,CAAC,CAClE,MAAO,CAAAW,QAAQ,EAAI,CACjBtC,EAAE,CAAE2B,UAAU,CACdzB,IAAI,CAAE,QAAQ,CACda,KAAK,CAAE,MAAM,CACbC,WAAW,CAAE,aACf,CAAC,CACH,CAAC,CAED,MAAO,MAAM,CAAAyB,uBAAuB,CAAI1B,KAAK,EAAK,CAChD,KAAM,CAAA2B,QAAQ,CAAG,CACfC,IAAI,CAAE,0CAA0C,CAChDC,KAAK,CAAE,6CAA6C,CACpDC,MAAM,CAAE,gDAAgD,CACxDC,MAAM,CAAE,gDAAgD,CACxDC,IAAI,CAAE,0CAA0C,CAChDC,GAAG,CAAE,uCAAuC,CAC5CC,MAAM,CAAE,gDAAgD,CACxDC,MAAM,CAAE,gDAAgD,CACxDC,IAAI,CAAE,0CACR,CAAC,CACD,MAAO,CAAAT,QAAQ,CAAC3B,KAAK,CAAC,EAAI2B,QAAQ,CAACS,IAAI,CACzC,CAAC,CAED,MAAO,MAAM,CAAAC,cAAc,CAAGA,CAACC,QAAQ,CAAEC,OAAO,GAAK,CACnD,GAAI,CAAAC,QAAQ,CAAG,CAAC,GAAGF,QAAQ,CAAC,CAE5B;AACA,GAAIC,OAAO,CAAChB,QAAQ,EAAIgB,OAAO,CAAChB,QAAQ,GAAK,KAAK,CAAE,CAClDiB,QAAQ,CAAGA,QAAQ,CAACC,MAAM,CAACC,OAAO,EAAIA,OAAO,CAACnB,QAAQ,GAAKgB,OAAO,CAAChB,QAAQ,CAAC,CAC9E,CAEA;AACA,GAAIgB,OAAO,CAACI,WAAW,CAAE,CACvB,KAAM,CAAAC,KAAK,CAAGL,OAAO,CAACI,WAAW,CAACE,WAAW,CAAC,CAAC,CAC/CL,QAAQ,CAAGA,QAAQ,CAACC,MAAM,CAACC,OAAO,EAChCA,OAAO,CAACvD,IAAI,CAAC0D,WAAW,CAAC,CAAC,CAACC,QAAQ,CAACF,KAAK,CAAC,EACzCF,OAAO,CAACzC,WAAW,EAAIyC,OAAO,CAACzC,WAAW,CAAC4C,WAAW,CAAC,CAAC,CAACC,QAAQ,CAACF,KAAK,CAAE,EACzEF,OAAO,CAACK,IAAI,EAAIL,OAAO,CAACK,IAAI,CAACC,IAAI,CAACC,GAAG,EAAIA,GAAG,CAACJ,WAAW,CAAC,CAAC,CAACC,QAAQ,CAACF,KAAK,CAAC,CAC7E,CAAC,CACH,CAEA;AACAJ,QAAQ,CAACU,IAAI,CAAC,CAACC,CAAC,CAAEC,CAAC,GAAK,CACtB,OAAQb,OAAO,CAACc,MAAM,EACpB,IAAK,MAAM,CACT,MAAO,CAAAF,CAAC,CAAChE,IAAI,CAACmE,aAAa,CAACF,CAAC,CAACjE,IAAI,CAAE,IAAI,CAAC,CAC3C,IAAK,SAAS,CACZ,MAAO,IAAI,CAAAoB,IAAI,CAAC6C,CAAC,CAACG,SAAS,EAAIH,CAAC,CAAC3C,SAAS,CAAC,CAAG,GAAI,CAAAF,IAAI,CAAC4C,CAAC,CAACI,SAAS,EAAIJ,CAAC,CAAC1C,SAAS,CAAC,CACpF,IAAK,SAAS,CACd,QACE,MAAO,IAAI,CAAAF,IAAI,CAAC6C,CAAC,CAAC3C,SAAS,CAAC,CAAG,GAAI,CAAAF,IAAI,CAAC4C,CAAC,CAAC1C,SAAS,CAAC,CACxD,CACF,CAAC,CAAC,CAEF,MAAO,CAAA+B,QAAQ,CACjB,CAAC,CAED,MAAO,MAAM,CAAAgB,gBAAgB,CAAIzF,KAAK,EAAK,CACzC,GAAI,CAACA,KAAK,EAAIA,KAAK,GAAK,CAAC,CAAE,MAAO,GAAG,CACrC,GAAIA,KAAK,CAAG,IAAI,CAAE,MAAO,CAAAA,KAAK,CAAC0F,QAAQ,CAAC,CAAC,CACzC,GAAI1F,KAAK,CAAG,OAAO,CAAE,MAAO,GAAG,CAACA,KAAK,CAAG,IAAI,EAAE2F,OAAO,CAAC,CAAC,CAAC,GAAG,CAC3D,MAAO,GAAG,CAAC3F,KAAK,CAAG,OAAO,EAAE2F,OAAO,CAAC,CAAC,CAAC,GAAG,CAC3C,CAAC,CAED,MAAO,MAAM,CAAAC,cAAc,CAAIC,KAAK,EAAK,CACvC,GAAI,CAACA,KAAK,EAAIA,KAAK,GAAK,CAAC,CAAE,MAAO,KAAK,CACvC,KAAM,CAAAC,KAAK,CAAG,CAAC,GAAG,CAAE,IAAI,CAAE,IAAI,CAAE,IAAI,CAAC,CACrC,KAAM,CAAAC,CAAC,CAAGC,IAAI,CAACC,KAAK,CAACD,IAAI,CAAC5H,GAAG,CAACyH,KAAK,CAAC,CAAGG,IAAI,CAAC5H,GAAG,CAAC,IAAI,CAAC,CAAC,CACtD,MAAO,GAAG,CAACyH,KAAK,CAAGG,IAAI,CAACE,GAAG,CAAC,IAAI,CAAEH,CAAC,CAAC,EAAEJ,OAAO,CAAC,CAAC,CAAC,IAAIG,KAAK,CAACC,CAAC,CAAC,EAAE,CAChE,CAAC,CAED,MAAO,MAAM,CAAAI,oBAAoB,CAAIC,WAAW,EAAK,CACnD,GAAI,CAACA,WAAW,EAAIA,WAAW,CAACxG,MAAM,GAAK,CAAC,CAAE,CAC5C,MAAO,CACLyG,UAAU,CAAE,CAAC,CACbC,WAAW,CAAE,CAAC,CACdC,SAAS,CAAE,CAAC,CACZlE,UAAU,CAAE,CAAC,CACf,CAAC,CACH,CAEA,KAAM,CAAAmE,KAAK,CAAG,CACZH,UAAU,CAAED,WAAW,CAACxG,MAAM,CAC9B0G,WAAW,CAAE,CAAC,CACdC,SAAS,CAAE,CAAC,CACZlE,UAAU,CAAE,CAAC,CACf,CAAC,CAED+D,WAAW,CAACK,OAAO,CAACC,IAAI,EAAI,CAC1B;AACA,KAAM,CAAAC,aAAa,CAAG,CAACD,IAAI,CAACE,OAAO,EAAI,EAAE,EAAEhH,MAAM,CACjD,KAAM,CAAAiH,eAAe,CAAGb,IAAI,CAACc,IAAI,CAACH,aAAa,CAAG,CAAC,CAAC,CACpDH,KAAK,CAACF,WAAW,EAAIO,eAAe,CAEpC;AACAL,KAAK,CAACD,SAAS,EAAI,GAAI,CAAAQ,IAAI,CAAC,CAACL,IAAI,CAACE,OAAO,EAAI,EAAE,CAAC,CAAC,CAACI,IAAI,CAEtD;AACA,KAAM,CAAAxD,QAAQ,CAAGkD,IAAI,CAAClD,QAAQ,EAAI,eAAe,CACjD,GAAI,CAACgD,KAAK,CAACnE,UAAU,CAACmB,QAAQ,CAAC,CAAE,CAC/BgD,KAAK,CAACnE,UAAU,CAACmB,QAAQ,CAAC,CAAG,CAAExD,KAAK,CAAE,CAAC,CAAEiH,MAAM,CAAE,CAAC,CAAED,IAAI,CAAE,CAAE,CAAC,CAC/D,CACAR,KAAK,CAACnE,UAAU,CAACmB,QAAQ,CAAC,CAACxD,KAAK,EAAE,CAClCwG,KAAK,CAACnE,UAAU,CAACmB,QAAQ,CAAC,CAACyD,MAAM,EAAIJ,eAAe,CACpDL,KAAK,CAACnE,UAAU,CAACmB,QAAQ,CAAC,CAACwD,IAAI,EAAI,GAAI,CAAAD,IAAI,CAAC,CAACL,IAAI,CAACE,OAAO,EAAI,EAAE,CAAC,CAAC,CAACI,IAAI,CACxE,CAAC,CAAC,CAEF,MAAO,CAAAR,KAAK,CACd,CAAC,CAED;AACA,MAAO,MAAM,CAAAU,aAAa,CAAG,CAC3B,CAAEhG,EAAE,CAAE,MAAM,CAAEE,IAAI,CAAE,KAAK,CAAE+F,KAAK,CAAE,aAAc,CAAC,CACjD,CAAEjG,EAAE,CAAE,OAAO,CAAEE,IAAI,CAAE,KAAK,CAAE+F,KAAK,CAAE,cAAe,CAAC,CACnD,CAAEjG,EAAE,CAAE,QAAQ,CAAEE,IAAI,CAAE,KAAK,CAAE+F,KAAK,CAAE,eAAgB,CAAC,CACrD,CAAEjG,EAAE,CAAE,QAAQ,CAAEE,IAAI,CAAE,KAAK,CAAE+F,KAAK,CAAE,eAAgB,CAAC,CACrD,CAAEjG,EAAE,CAAE,MAAM,CAAEE,IAAI,CAAE,KAAK,CAAE+F,KAAK,CAAE,aAAc,CAAC,CACjD,CAAEjG,EAAE,CAAE,KAAK,CAAEE,IAAI,CAAE,KAAK,CAAE+F,KAAK,CAAE,YAAa,CAAC,CAC/C,CAAEjG,EAAE,CAAE,QAAQ,CAAEE,IAAI,CAAE,KAAK,CAAE+F,KAAK,CAAE,eAAgB,CAAC,CACrD,CAAEjG,EAAE,CAAE,QAAQ,CAAEE,IAAI,CAAE,IAAI,CAAE+F,KAAK,CAAE,eAAgB,CAAC,CACpD,CAAEjG,EAAE,CAAE,MAAM,CAAEE,IAAI,CAAE,IAAI,CAAE+F,KAAK,CAAE,aAAc,CAAC,CACjD,CAED,cAAe,CAAAzJ,GAAG","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}