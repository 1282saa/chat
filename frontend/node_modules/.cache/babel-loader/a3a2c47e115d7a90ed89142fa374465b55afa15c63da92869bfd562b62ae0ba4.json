{"ast":null,"code":"import{useState,useEffect,useRef,useCallback}from\"react\";import{toast}from\"react-hot-toast\";import{copyToClipboard}from\"../utils/clipboard\";import{useOrchestration}from\"./useOrchestration\";/**\n * 채팅 기능을 위한 커스텀 훅\n * @param {string} projectId - 프로젝트 ID\n * @param {string} projectName - 프로젝트 이름\n * @param {Array} promptCards - 프롬프트 카드 배열\n * @returns {Object} - 채팅 관련 상태와 함수들\n */export const useChat=function(projectId,projectName){let promptCards=arguments.length>2&&arguments[2]!==undefined?arguments[2]:[];const[messages,setMessages]=useState([]);const[inputValue,setInputValue]=useState(\"\");const[copiedMessage,setCopiedMessage]=useState(null);const messagesEndRef=useRef(null);const inputRef=useRef(null);const{isExecuting:isGenerating,executeOrchestration,pollOrchestrationResult,resetOrchestration}=useOrchestration(projectId);// 초기 환영 메시지 설정\nuseEffect(()=>{const welcomeMessage={id:\"welcome\",type:\"assistant\",content:`안녕하세요! 저는 ${projectName}의 AI 제목 작가입니다.\\n\\n기사 내용을 입력해주시면 다양한 스타일의 제목을 제안해드릴게요. 제목을 수정하거나 다른 스타일로 바꾸고 싶으시면 언제든 말씀해주세요!`,timestamp:new Date()};setMessages([welcomeMessage]);},[projectName]);// 메시지 추가 시 스크롤 하단으로\nuseEffect(()=>{scrollToBottom();},[messages]);const scrollToBottom=useCallback(()=>{var _messagesEndRef$curre;(_messagesEndRef$curre=messagesEndRef.current)===null||_messagesEndRef$curre===void 0?void 0:_messagesEndRef$curre.scrollIntoView({behavior:\"smooth\"});},[]);/**\n   * 메시지 전송\n   */const handleSendMessage=useCallback(async()=>{if(!inputValue.trim()||isGenerating)return;const userMessage={id:Date.now()+Math.random(),type:\"user\",content:inputValue,timestamp:new Date()};setMessages(prev=>[...prev,userMessage]);const currentInput=inputValue;setInputValue(\"\");try{// 로딩 메시지 추가\nconst loadingMessage={id:\"loading-\"+Date.now(),type:\"assistant\",content:\"AI가 제목을 생성하고 있습니다...\\n\\n단계별로 처리 중이니 잠시만 기다려주세요!\",timestamp:new Date(),isLoading:true};setMessages(prev=>[...prev,loadingMessage]);// 오케스트레이션 실행\nconst result=await executeOrchestration(currentInput,{enabledSteps:promptCards.filter(card=>card.enabled).map(card=>card.category)});if(result&&result.result){// 직접 응답 처리 (폴링 불필요)\n// 실제 API 응답에서 result 필드에 제목들이 문자열로 들어있음\nconst titleText=result.result;// 번호가 매겨진 제목들을 파싱\nconst titles=titleText.split('\\n').map(line=>line.trim()).filter(line=>line&&/^\\d+\\./.test(line)).map(line=>line.replace(/^\\d+\\.\\s*/,'')).slice(0,5);// 최대 5개\nconst responseMessage={id:\"response-\"+Date.now(),type:\"assistant\",content:`**생성된 제목 후보들입니다:**\\n\\n${titles.map((title,i)=>`**${i+1}.** ${title}`).join(\"\\n\\n\")}\\n\\n원하시는 제목이 있으시거나 수정이 필요하시면 말씀해주세요!`,timestamp:new Date(),titles:titles};// 로딩 메시지 제거하고 결과 메시지 추가\nsetMessages(prev=>prev.filter(msg=>!msg.isLoading).concat([responseMessage]));}else{// 결과가 없는 경우 에러 처리\nconsole.error(\"AI 응답 오류: 결과가 없습니다\",result);const errorMessage={id:\"error-\"+Date.now(),type:\"assistant\",content:\"죄송합니다. 제목 생성 중 오류가 발생했습니다. 다시 시도해주세요.\",timestamp:new Date(),isError:true};setMessages(prev=>prev.filter(msg=>!msg.isLoading).concat([errorMessage]));}}catch(error){console.error(\"메시지 전송 실패:\",error);const errorMessage={id:\"error-\"+Date.now(),type:\"assistant\",content:\"죄송합니다. 메시지 처리 중 오류가 발생했습니다. 다시 시도해주세요.\",timestamp:new Date(),isError:true};setMessages(prev=>prev.filter(msg=>!msg.isLoading).concat([errorMessage]));}},[inputValue,isGenerating,executeOrchestration,pollOrchestrationResult,promptCards]);/**\n   * Enter 키로 전송\n   */const handleKeyPress=useCallback(e=>{if(e.key===\"Enter\"&&!e.shiftKey){e.preventDefault();handleSendMessage();}},[handleSendMessage]);/**\n   * 메시지 복사\n   */const handleCopyMessage=useCallback(async(content,messageId)=>{const success=await copyToClipboard(content);if(success){setCopiedMessage(messageId);setTimeout(()=>setCopiedMessage(null),2000);}},[]);/**\n   * 개별 제목 복사\n   */const handleCopyTitle=useCallback(async(title,messageId,index)=>{const success=await copyToClipboard(title,\"제목이 복사되었습니다!\");if(success){setCopiedMessage(`${messageId}_title_${index}`);setTimeout(()=>setCopiedMessage(null),2000);}},[]);/**\n   * 채팅 초기화\n   */const resetChat=useCallback(()=>{setMessages([]);setInputValue(\"\");setCopiedMessage(null);resetOrchestration();},[resetOrchestration]);return{messages,inputValue,setInputValue,copiedMessage,isGenerating,messagesEndRef,inputRef,handleSendMessage,handleKeyPress,handleCopyMessage,handleCopyTitle,resetChat,scrollToBottom};};","map":{"version":3,"names":["useState","useEffect","useRef","useCallback","toast","copyToClipboard","useOrchestration","useChat","projectId","projectName","promptCards","arguments","length","undefined","messages","setMessages","inputValue","setInputValue","copiedMessage","setCopiedMessage","messagesEndRef","inputRef","isExecuting","isGenerating","executeOrchestration","pollOrchestrationResult","resetOrchestration","welcomeMessage","id","type","content","timestamp","Date","scrollToBottom","_messagesEndRef$curre","current","scrollIntoView","behavior","handleSendMessage","trim","userMessage","now","Math","random","prev","currentInput","loadingMessage","isLoading","result","enabledSteps","filter","card","enabled","map","category","titleText","titles","split","line","test","replace","slice","responseMessage","title","i","join","msg","concat","console","error","errorMessage","isError","handleKeyPress","e","key","shiftKey","preventDefault","handleCopyMessage","messageId","success","setTimeout","handleCopyTitle","index","resetChat"],"sources":["/Users/yeong-gwang/Documents/work/서울경제신문/ai_제목달기/frontend/src/hooks/useChat.js"],"sourcesContent":["import { useState, useEffect, useRef, useCallback } from \"react\";\nimport { toast } from \"react-hot-toast\";\nimport { copyToClipboard } from \"../utils/clipboard\";\nimport { useOrchestration } from \"./useOrchestration\";\n\n/**\n * 채팅 기능을 위한 커스텀 훅\n * @param {string} projectId - 프로젝트 ID\n * @param {string} projectName - 프로젝트 이름\n * @param {Array} promptCards - 프롬프트 카드 배열\n * @returns {Object} - 채팅 관련 상태와 함수들\n */\nexport const useChat = (projectId, projectName, promptCards = []) => {\n  const [messages, setMessages] = useState([]);\n  const [inputValue, setInputValue] = useState(\"\");\n  const [copiedMessage, setCopiedMessage] = useState(null);\n\n  const messagesEndRef = useRef(null);\n  const inputRef = useRef(null);\n\n  const {\n    isExecuting: isGenerating,\n    executeOrchestration,\n    pollOrchestrationResult,\n    resetOrchestration,\n  } = useOrchestration(projectId);\n\n  // 초기 환영 메시지 설정\n  useEffect(() => {\n    const welcomeMessage = {\n      id: \"welcome\",\n      type: \"assistant\",\n      content: `안녕하세요! 저는 ${projectName}의 AI 제목 작가입니다.\\n\\n기사 내용을 입력해주시면 다양한 스타일의 제목을 제안해드릴게요. 제목을 수정하거나 다른 스타일로 바꾸고 싶으시면 언제든 말씀해주세요!`,\n      timestamp: new Date(),\n    };\n    setMessages([welcomeMessage]);\n  }, [projectName]);\n\n  // 메시지 추가 시 스크롤 하단으로\n  useEffect(() => {\n    scrollToBottom();\n  }, [messages]);\n\n  const scrollToBottom = useCallback(() => {\n    messagesEndRef.current?.scrollIntoView({ behavior: \"smooth\" });\n  }, []);\n\n  /**\n   * 메시지 전송\n   */\n  const handleSendMessage = useCallback(async () => {\n    if (!inputValue.trim() || isGenerating) return;\n\n    const userMessage = {\n      id: Date.now() + Math.random(),\n      type: \"user\",\n      content: inputValue,\n      timestamp: new Date(),\n    };\n\n    setMessages((prev) => [...prev, userMessage]);\n    const currentInput = inputValue;\n    setInputValue(\"\");\n\n    try {\n      // 로딩 메시지 추가\n      const loadingMessage = {\n        id: \"loading-\" + Date.now(),\n        type: \"assistant\",\n        content:\n          \"AI가 제목을 생성하고 있습니다...\\n\\n단계별로 처리 중이니 잠시만 기다려주세요!\",\n        timestamp: new Date(),\n        isLoading: true,\n      };\n\n      setMessages((prev) => [...prev, loadingMessage]);\n\n      // 오케스트레이션 실행\n      const result = await executeOrchestration(currentInput, {\n        enabledSteps: promptCards\n          .filter((card) => card.enabled)\n          .map((card) => card.category),\n      });\n\n      if (result && result.result) {\n        // 직접 응답 처리 (폴링 불필요)\n        // 실제 API 응답에서 result 필드에 제목들이 문자열로 들어있음\n        const titleText = result.result;\n        \n        // 번호가 매겨진 제목들을 파싱\n        const titles = titleText\n          .split('\\n')\n          .map(line => line.trim())\n          .filter(line => line && /^\\d+\\./.test(line))\n          .map(line => line.replace(/^\\d+\\.\\s*/, ''))\n          .slice(0, 5); // 최대 5개\n\n        const responseMessage = {\n          id: \"response-\" + Date.now(),\n          type: \"assistant\",\n          content: `**생성된 제목 후보들입니다:**\\n\\n${titles\n            .map((title, i) => `**${i + 1}.** ${title}`)\n            .join(\n              \"\\n\\n\"\n            )}\\n\\n원하시는 제목이 있으시거나 수정이 필요하시면 말씀해주세요!`,\n          timestamp: new Date(),\n          titles: titles,\n        };\n\n        // 로딩 메시지 제거하고 결과 메시지 추가\n        setMessages((prev) =>\n          prev.filter((msg) => !msg.isLoading).concat([responseMessage])\n        );\n      } else {\n        // 결과가 없는 경우 에러 처리\n        console.error(\"AI 응답 오류: 결과가 없습니다\", result);\n\n        const errorMessage = {\n          id: \"error-\" + Date.now(),\n          type: \"assistant\",\n          content:\n            \"죄송합니다. 제목 생성 중 오류가 발생했습니다. 다시 시도해주세요.\",\n          timestamp: new Date(),\n          isError: true,\n        };\n\n        setMessages((prev) =>\n          prev.filter((msg) => !msg.isLoading).concat([errorMessage])\n        );\n      }\n    } catch (error) {\n      console.error(\"메시지 전송 실패:\", error);\n\n      const errorMessage = {\n        id: \"error-\" + Date.now(),\n        type: \"assistant\",\n        content:\n          \"죄송합니다. 메시지 처리 중 오류가 발생했습니다. 다시 시도해주세요.\",\n        timestamp: new Date(),\n        isError: true,\n      };\n\n      setMessages((prev) =>\n        prev.filter((msg) => !msg.isLoading).concat([errorMessage])\n      );\n    }\n  }, [\n    inputValue,\n    isGenerating,\n    executeOrchestration,\n    pollOrchestrationResult,\n    promptCards,\n  ]);\n\n  /**\n   * Enter 키로 전송\n   */\n  const handleKeyPress = useCallback(\n    (e) => {\n      if (e.key === \"Enter\" && !e.shiftKey) {\n        e.preventDefault();\n        handleSendMessage();\n      }\n    },\n    [handleSendMessage]\n  );\n\n  /**\n   * 메시지 복사\n   */\n  const handleCopyMessage = useCallback(async (content, messageId) => {\n    const success = await copyToClipboard(content);\n    if (success) {\n      setCopiedMessage(messageId);\n      setTimeout(() => setCopiedMessage(null), 2000);\n    }\n  }, []);\n\n  /**\n   * 개별 제목 복사\n   */\n  const handleCopyTitle = useCallback(async (title, messageId, index) => {\n    const success = await copyToClipboard(title, \"제목이 복사되었습니다!\");\n    if (success) {\n      setCopiedMessage(`${messageId}_title_${index}`);\n      setTimeout(() => setCopiedMessage(null), 2000);\n    }\n  }, []);\n\n  /**\n   * 채팅 초기화\n   */\n  const resetChat = useCallback(() => {\n    setMessages([]);\n    setInputValue(\"\");\n    setCopiedMessage(null);\n    resetOrchestration();\n  }, [resetOrchestration]);\n\n  return {\n    messages,\n    inputValue,\n    setInputValue,\n    copiedMessage,\n    isGenerating,\n    messagesEndRef,\n    inputRef,\n    handleSendMessage,\n    handleKeyPress,\n    handleCopyMessage,\n    handleCopyTitle,\n    resetChat,\n    scrollToBottom,\n  };\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}