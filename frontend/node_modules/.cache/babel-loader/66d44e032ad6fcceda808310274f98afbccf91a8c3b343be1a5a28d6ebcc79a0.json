{"ast":null,"code":"import{useState,useCallback}from\"react\";import{aiAPI,handleAPIError}from\"../services/api\";import{toast}from\"react-hot-toast\";export const useAI=()=>{const[isGenerating,setIsGenerating]=useState(false);const[generatedTitles,setGeneratedTitles]=useState([]);const[error,setError]=useState(null);// 제목 생성\nconst generateTitle=useCallback(async(projectId,content)=>{try{setIsGenerating(true);setError(null);const result=await aiAPI.generateTitle(projectId,content);// 생성된 제목을 배열에 추가\nconst newTitle={id:Date.now(),content:result.title,timestamp:new Date(),original:content};setGeneratedTitles(prev=>[newTitle,...prev]);toast.success(\"제목이 생성되었습니다\");return result;}catch(error){const errorInfo=handleAPIError(error);setError(errorInfo.message);toast.error(errorInfo.message);throw error;}finally{setIsGenerating(false);}},[]);// 제목 목록 초기화\nconst clearTitles=useCallback(()=>{setGeneratedTitles([]);setError(null);},[]);// 제목 복사\nconst copyTitle=useCallback(async title=>{try{await navigator.clipboard.writeText(title);toast.success(\"제목이 복사되었습니다\");}catch(error){toast.error(\"복사에 실패했습니다\");}},[]);return{isGenerating,generatedTitles,error,generateTitle,clearTitles,copyTitle};};","map":{"version":3,"names":["useState","useCallback","aiAPI","handleAPIError","toast","useAI","isGenerating","setIsGenerating","generatedTitles","setGeneratedTitles","error","setError","generateTitle","projectId","content","result","newTitle","id","Date","now","title","timestamp","original","prev","success","errorInfo","message","clearTitles","copyTitle","navigator","clipboard","writeText"],"sources":["/Users/yeong-gwang/Documents/work/서울경제신문/ai_제목달기/frontend/src/hooks/useAI.js"],"sourcesContent":["import { useState, useCallback } from \"react\";\nimport { aiAPI, handleAPIError } from \"../services/api\";\nimport { toast } from \"react-hot-toast\";\n\nexport const useAI = () => {\n  const [isGenerating, setIsGenerating] = useState(false);\n  const [generatedTitles, setGeneratedTitles] = useState([]);\n  const [error, setError] = useState(null);\n\n  // 제목 생성\n  const generateTitle = useCallback(async (projectId, content) => {\n    try {\n      setIsGenerating(true);\n      setError(null);\n\n      const result = await aiAPI.generateTitle(projectId, content);\n\n      // 생성된 제목을 배열에 추가\n      const newTitle = {\n        id: Date.now(),\n        content: result.title,\n        timestamp: new Date(),\n        original: content,\n      };\n\n      setGeneratedTitles((prev) => [newTitle, ...prev]);\n      toast.success(\"제목이 생성되었습니다\");\n\n      return result;\n    } catch (error) {\n      const errorInfo = handleAPIError(error);\n      setError(errorInfo.message);\n      toast.error(errorInfo.message);\n      throw error;\n    } finally {\n      setIsGenerating(false);\n    }\n  }, []);\n\n  // 제목 목록 초기화\n  const clearTitles = useCallback(() => {\n    setGeneratedTitles([]);\n    setError(null);\n  }, []);\n\n  // 제목 복사\n  const copyTitle = useCallback(async (title) => {\n    try {\n      await navigator.clipboard.writeText(title);\n      toast.success(\"제목이 복사되었습니다\");\n    } catch (error) {\n      toast.error(\"복사에 실패했습니다\");\n    }\n  }, []);\n\n  return {\n    isGenerating,\n    generatedTitles,\n    error,\n    generateTitle,\n    clearTitles,\n    copyTitle,\n  };\n};\n"],"mappings":"AAAA,OAASA,QAAQ,CAAEC,WAAW,KAAQ,OAAO,CAC7C,OAASC,KAAK,CAAEC,cAAc,KAAQ,iBAAiB,CACvD,OAASC,KAAK,KAAQ,iBAAiB,CAEvC,MAAO,MAAM,CAAAC,KAAK,CAAGA,CAAA,GAAM,CACzB,KAAM,CAACC,YAAY,CAAEC,eAAe,CAAC,CAAGP,QAAQ,CAAC,KAAK,CAAC,CACvD,KAAM,CAACQ,eAAe,CAAEC,kBAAkB,CAAC,CAAGT,QAAQ,CAAC,EAAE,CAAC,CAC1D,KAAM,CAACU,KAAK,CAAEC,QAAQ,CAAC,CAAGX,QAAQ,CAAC,IAAI,CAAC,CAExC;AACA,KAAM,CAAAY,aAAa,CAAGX,WAAW,CAAC,MAAOY,SAAS,CAAEC,OAAO,GAAK,CAC9D,GAAI,CACFP,eAAe,CAAC,IAAI,CAAC,CACrBI,QAAQ,CAAC,IAAI,CAAC,CAEd,KAAM,CAAAI,MAAM,CAAG,KAAM,CAAAb,KAAK,CAACU,aAAa,CAACC,SAAS,CAAEC,OAAO,CAAC,CAE5D;AACA,KAAM,CAAAE,QAAQ,CAAG,CACfC,EAAE,CAAEC,IAAI,CAACC,GAAG,CAAC,CAAC,CACdL,OAAO,CAAEC,MAAM,CAACK,KAAK,CACrBC,SAAS,CAAE,GAAI,CAAAH,IAAI,CAAC,CAAC,CACrBI,QAAQ,CAAER,OACZ,CAAC,CAEDL,kBAAkB,CAAEc,IAAI,EAAK,CAACP,QAAQ,CAAE,GAAGO,IAAI,CAAC,CAAC,CACjDnB,KAAK,CAACoB,OAAO,CAAC,aAAa,CAAC,CAE5B,MAAO,CAAAT,MAAM,CACf,CAAE,MAAOL,KAAK,CAAE,CACd,KAAM,CAAAe,SAAS,CAAGtB,cAAc,CAACO,KAAK,CAAC,CACvCC,QAAQ,CAACc,SAAS,CAACC,OAAO,CAAC,CAC3BtB,KAAK,CAACM,KAAK,CAACe,SAAS,CAACC,OAAO,CAAC,CAC9B,KAAM,CAAAhB,KAAK,CACb,CAAC,OAAS,CACRH,eAAe,CAAC,KAAK,CAAC,CACxB,CACF,CAAC,CAAE,EAAE,CAAC,CAEN;AACA,KAAM,CAAAoB,WAAW,CAAG1B,WAAW,CAAC,IAAM,CACpCQ,kBAAkB,CAAC,EAAE,CAAC,CACtBE,QAAQ,CAAC,IAAI,CAAC,CAChB,CAAC,CAAE,EAAE,CAAC,CAEN;AACA,KAAM,CAAAiB,SAAS,CAAG3B,WAAW,CAAC,KAAO,CAAAmB,KAAK,EAAK,CAC7C,GAAI,CACF,KAAM,CAAAS,SAAS,CAACC,SAAS,CAACC,SAAS,CAACX,KAAK,CAAC,CAC1ChB,KAAK,CAACoB,OAAO,CAAC,aAAa,CAAC,CAC9B,CAAE,MAAOd,KAAK,CAAE,CACdN,KAAK,CAACM,KAAK,CAAC,YAAY,CAAC,CAC3B,CACF,CAAC,CAAE,EAAE,CAAC,CAEN,MAAO,CACLJ,YAAY,CACZE,eAAe,CACfE,KAAK,CACLE,aAAa,CACbe,WAAW,CACXC,SACF,CAAC,CACH,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}