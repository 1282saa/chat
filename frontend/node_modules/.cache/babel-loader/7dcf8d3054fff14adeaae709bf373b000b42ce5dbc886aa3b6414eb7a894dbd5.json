{"ast":null,"code":"var _jsxFileName = \"/Users/yeong-gwang/Documents/work/\\u1109\\u1165\\u110B\\u116E\\u11AF\\u1100\\u1167\\u11BC\\u110C\\u1166\\u1109\\u1175\\u11AB\\u1106\\u116E\\u11AB/dev/nexus/title_generator_ver1/frontend/src/components/AdminView.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport ChatWindow from \"./chat/ChatWindow\";\nimport { promptCardAPI } from \"../services/api\";\nimport { ChatInterfaceSkeleton } from \"./skeleton/SkeletonComponents\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AdminView = ({\n  projectId,\n  projectName\n}) => {\n  _s();\n  const [promptCards, setPromptCards] = useState([]);\n  const [loading, setLoading] = useState(true);\n  useEffect(() => {\n    const loadPromptCards = async () => {\n      try {\n        setLoading(true);\n        const response = await promptCardAPI.getPromptCards(projectId, true);\n        setPromptCards(response.promptCards || []);\n      } catch (error) {\n        console.warn(\"프롬프트 카드 로드 실패:\", error);\n        setPromptCards([]);\n      } finally {\n        setLoading(false);\n      }\n    };\n    loadPromptCards();\n  }, [projectId]);\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(ChatInterfaceSkeleton, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"h-screen bg-white dark:bg-dark-primary transition-colors duration-300\",\n    children: /*#__PURE__*/_jsxDEV(ChatWindow, {\n      projectId: projectId,\n      projectName: projectName,\n      promptCards: promptCards,\n      isAdminMode: false\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n};\n_s(AdminView, \"TeleLBvga0acvjdjYFW9yMTAFjE=\");\n_c = AdminView;\nexport default AdminView;\nvar _c;\n$RefreshReg$(_c, \"AdminView\");","map":{"version":3,"names":["React","useState","useEffect","ChatWindow","promptCardAPI","ChatInterfaceSkeleton","jsxDEV","_jsxDEV","AdminView","projectId","projectName","_s","promptCards","setPromptCards","loading","setLoading","loadPromptCards","response","getPromptCards","error","console","warn","fileName","_jsxFileName","lineNumber","columnNumber","className","children","isAdminMode","_c","$RefreshReg$"],"sources":["/Users/yeong-gwang/Documents/work/서울경제신문/dev/nexus/title_generator_ver1/frontend/src/components/AdminView.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport ChatWindow from \"./chat/ChatWindow\";\nimport { promptCardAPI } from \"../services/api\";\nimport { ChatInterfaceSkeleton } from \"./skeleton/SkeletonComponents\";\n\nconst AdminView = ({ projectId, projectName }) => {\n  const [promptCards, setPromptCards] = useState([]);\n  const [loading, setLoading] = useState(true);\n\n  useEffect(() => {\n    const loadPromptCards = async () => {\n      try {\n        setLoading(true);\n        const response = await promptCardAPI.getPromptCards(projectId, true);\n        setPromptCards(response.promptCards || []);\n      } catch (error) {\n        console.warn(\"프롬프트 카드 로드 실패:\", error);\n        setPromptCards([]);\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    loadPromptCards();\n  }, [projectId]);\n\n  if (loading) {\n    return <ChatInterfaceSkeleton />;\n  }\n\n  return (\n    <div className=\"h-screen bg-white dark:bg-dark-primary transition-colors duration-300\">\n      <ChatWindow\n        projectId={projectId}\n        projectName={projectName}\n        promptCards={promptCards}\n        isAdminMode={false}\n      />\n    </div>\n  );\n};\n\nexport default AdminView;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,UAAU,MAAM,mBAAmB;AAC1C,SAASC,aAAa,QAAQ,iBAAiB;AAC/C,SAASC,qBAAqB,QAAQ,+BAA+B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEtE,MAAMC,SAAS,GAAGA,CAAC;EAAEC,SAAS;EAAEC;AAAY,CAAC,KAAK;EAAAC,EAAA;EAChD,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;EAClD,MAAM,CAACa,OAAO,EAAEC,UAAU,CAAC,GAAGd,QAAQ,CAAC,IAAI,CAAC;EAE5CC,SAAS,CAAC,MAAM;IACd,MAAMc,eAAe,GAAG,MAAAA,CAAA,KAAY;MAClC,IAAI;QACFD,UAAU,CAAC,IAAI,CAAC;QAChB,MAAME,QAAQ,GAAG,MAAMb,aAAa,CAACc,cAAc,CAACT,SAAS,EAAE,IAAI,CAAC;QACpEI,cAAc,CAACI,QAAQ,CAACL,WAAW,IAAI,EAAE,CAAC;MAC5C,CAAC,CAAC,OAAOO,KAAK,EAAE;QACdC,OAAO,CAACC,IAAI,CAAC,gBAAgB,EAAEF,KAAK,CAAC;QACrCN,cAAc,CAAC,EAAE,CAAC;MACpB,CAAC,SAAS;QACRE,UAAU,CAAC,KAAK,CAAC;MACnB;IACF,CAAC;IAEDC,eAAe,CAAC,CAAC;EACnB,CAAC,EAAE,CAACP,SAAS,CAAC,CAAC;EAEf,IAAIK,OAAO,EAAE;IACX,oBAAOP,OAAA,CAACF,qBAAqB;MAAAiB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAClC;EAEA,oBACElB,OAAA;IAAKmB,SAAS,EAAC,uEAAuE;IAAAC,QAAA,eACpFpB,OAAA,CAACJ,UAAU;MACTM,SAAS,EAAEA,SAAU;MACrBC,WAAW,EAAEA,WAAY;MACzBE,WAAW,EAAEA,WAAY;MACzBgB,WAAW,EAAE;IAAM;MAAAN,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACpB;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV,CAAC;AAACd,EAAA,CAnCIH,SAAS;AAAAqB,EAAA,GAATrB,SAAS;AAqCf,eAAeA,SAAS;AAAC,IAAAqB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}