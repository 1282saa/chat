{"ast":null,"code":"var _jsxFileName = \"/Users/yeong-gwang/Documents/work/\\u1109\\u1165\\u110B\\u116E\\u11AF\\u1100\\u1167\\u11BC\\u110C\\u1166\\u1109\\u1175\\u11AB\\u1106\\u116E\\u11AB/dev/nexus/title_generator_ver1/frontend/src/components/ProjectDetail.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { useParams, useNavigate } from \"react-router-dom\";\nimport { toast } from \"react-hot-toast\";\nimport { projectAPI, handleAPIError } from \"../services/api\";\nimport AdminView from \"./AdminView\";\nimport UserView from \"./UserView\";\nimport { useAuth } from \"../contexts/AuthContext\";\nimport { ChatInterfaceSkeleton } from \"./skeleton/SkeletonComponents\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ProjectDetail = () => {\n  _s();\n  const {\n    projectId\n  } = useParams();\n  const navigate = useNavigate();\n  const {\n    user\n  } = useAuth();\n  const [project, setProject] = useState(null);\n  const [loading, setLoading] = useState(true);\n  useEffect(() => {\n    loadProjectData();\n  }, [projectId, navigate]);\n  const loadProjectData = async () => {\n    try {\n      setLoading(true);\n\n      // 일반 사용자인 경우 고정된 프로젝트나 기본 프로젝트를 사용\n      let projectData;\n      if ((user === null || user === void 0 ? void 0 : user.role) === \"user\") {\n        // 일반 사용자용 기본 프로젝트 사용\n        if (projectId && projectId !== \"default\") {\n          try {\n            projectData = await projectAPI.getProject(projectId);\n          } catch (error) {\n            console.log(\"API 호출 실패, 기본 프로젝트 사용:\", error);\n            projectData = {\n              projectId: \"4039d9fc-d318-4903-804e-9cf5bf05ba8e\",\n              name: \"서울경제\",\n              description: \"서울경제신문 AI 제목 생성 시스템\",\n              promptCards: [],\n              createdAt: new Date().toISOString(),\n              updatedAt: new Date().toISOString()\n            };\n          }\n        } else {\n          // 기본 프로젝트 직접 생성\n          projectData = {\n            projectId: \"4039d9fc-d318-4903-804e-9cf5bf05ba8e\",\n            name: \"서울경제\",\n            description: \"서울경제신문 AI 제목 생성 시스템\",\n            promptCards: [],\n            createdAt: new Date().toISOString(),\n            updatedAt: new Date().toISOString()\n          };\n        }\n      } else {\n        // 관리자인 경우\n        try {\n          projectData = await projectAPI.getProject(projectId);\n        } catch (error) {\n          console.error(\"관리자 프로젝트 로드 실패:\", error);\n          throw error; // 관리자는 에러를 그대로 전파\n        }\n      }\n      setProject(projectData);\n    } catch (error) {\n      console.error(\"프로젝트 로드 실패:\", error);\n      const errorInfo = handleAPIError(error);\n      toast.error(errorInfo.message);\n\n      // 권한에 따른 리다이렉트\n      if ((user === null || user === void 0 ? void 0 : user.role) === \"admin\") {\n        navigate(\"/projects\");\n      } else {\n        navigate(\"/dashboard\");\n      }\n    } finally {\n      setLoading(false);\n    }\n  };\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(ChatInterfaceSkeleton, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 12\n    }, this);\n  }\n  if (!project) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"min-h-screen bg-gray-50 dark:bg-gray-900 flex items-center justify-center transition-colors duration-200\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-center\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"text-xl font-semibold text-gray-900 dark:text-white mb-4\",\n          children: \"\\uD504\\uB85C\\uC81D\\uD2B8\\uB97C \\uCC3E\\uC744 \\uC218 \\uC5C6\\uC2B5\\uB2C8\\uB2E4\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => {\n            if ((user === null || user === void 0 ? void 0 : user.role) === \"admin\") {\n              navigate(\"/projects\");\n            } else {\n              navigate(\"/dashboard\");\n            }\n          },\n          className: \"inline-flex items-center px-4 py-2 text-sm font-medium rounded-md text-blue-700 dark:text-blue-300 bg-blue-100 dark:bg-blue-900 hover:bg-blue-200 dark:hover:bg-blue-800 focus:outline-none transition-colors duration-200\",\n          children: (user === null || user === void 0 ? void 0 : user.role) === \"admin\" ? \"프로젝트 목록으로\" : \"대시보드로\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"min-h-screen w-full bg-gray-50 dark:bg-dark-primary transition-all duration-500\",\n    children: (user === null || user === void 0 ? void 0 : user.role) === \"admin\" ?\n    /*#__PURE__*/\n    // 관리자 모드: 프롬프트 카드 관리 + 채팅\n    _jsxDEV(AdminView, {\n      projectId: project.projectId || projectId,\n      projectName: project.name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 9\n    }, this) :\n    /*#__PURE__*/\n    // 사용자 모드: 채팅만\n    _jsxDEV(UserView, {\n      projectId: project.projectId || projectId,\n      projectName: project.name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 110,\n    columnNumber: 5\n  }, this);\n};\n_s(ProjectDetail, \"fZyXiw6b18X0sz3/UrB2Xli5v0U=\", false, function () {\n  return [useParams, useNavigate, useAuth];\n});\n_c = ProjectDetail;\nexport default ProjectDetail;\nvar _c;\n$RefreshReg$(_c, \"ProjectDetail\");","map":{"version":3,"names":["React","useState","useEffect","useParams","useNavigate","toast","projectAPI","handleAPIError","AdminView","UserView","useAuth","ChatInterfaceSkeleton","jsxDEV","_jsxDEV","ProjectDetail","_s","projectId","navigate","user","project","setProject","loading","setLoading","loadProjectData","projectData","role","getProject","error","console","log","name","description","promptCards","createdAt","Date","toISOString","updatedAt","errorInfo","message","fileName","_jsxFileName","lineNumber","columnNumber","className","children","onClick","projectName","_c","$RefreshReg$"],"sources":["/Users/yeong-gwang/Documents/work/서울경제신문/dev/nexus/title_generator_ver1/frontend/src/components/ProjectDetail.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { useParams, useNavigate } from \"react-router-dom\";\nimport { toast } from \"react-hot-toast\";\nimport { projectAPI, handleAPIError } from \"../services/api\";\nimport AdminView from \"./AdminView\";\nimport UserView from \"./UserView\";\nimport { useAuth } from \"../contexts/AuthContext\";\nimport { ChatInterfaceSkeleton } from \"./skeleton/SkeletonComponents\";\n\nconst ProjectDetail = () => {\n  const { projectId } = useParams();\n  const navigate = useNavigate();\n  const { user } = useAuth();\n  const [project, setProject] = useState(null);\n  const [loading, setLoading] = useState(true);\n\n  useEffect(() => {\n    loadProjectData();\n  }, [projectId, navigate]);\n\n  const loadProjectData = async () => {\n    try {\n      setLoading(true);\n\n      // 일반 사용자인 경우 고정된 프로젝트나 기본 프로젝트를 사용\n      let projectData;\n      if (user?.role === \"user\") {\n        // 일반 사용자용 기본 프로젝트 사용\n        if (projectId && projectId !== \"default\") {\n          try {\n            projectData = await projectAPI.getProject(projectId);\n          } catch (error) {\n            console.log(\"API 호출 실패, 기본 프로젝트 사용:\", error);\n            projectData = {\n              projectId: \"4039d9fc-d318-4903-804e-9cf5bf05ba8e\",\n              name: \"서울경제\",\n              description: \"서울경제신문 AI 제목 생성 시스템\",\n              promptCards: [],\n              createdAt: new Date().toISOString(),\n              updatedAt: new Date().toISOString(),\n            };\n          }\n        } else {\n          // 기본 프로젝트 직접 생성\n          projectData = {\n            projectId: \"4039d9fc-d318-4903-804e-9cf5bf05ba8e\",\n            name: \"서울경제\",\n            description: \"서울경제신문 AI 제목 생성 시스템\",\n            promptCards: [],\n            createdAt: new Date().toISOString(),\n            updatedAt: new Date().toISOString(),\n          };\n        }\n      } else {\n        // 관리자인 경우\n        try {\n          projectData = await projectAPI.getProject(projectId);\n        } catch (error) {\n          console.error(\"관리자 프로젝트 로드 실패:\", error);\n          throw error; // 관리자는 에러를 그대로 전파\n        }\n      }\n\n      setProject(projectData);\n    } catch (error) {\n      console.error(\"프로젝트 로드 실패:\", error);\n      const errorInfo = handleAPIError(error);\n      toast.error(errorInfo.message);\n\n      // 권한에 따른 리다이렉트\n      if (user?.role === \"admin\") {\n        navigate(\"/projects\");\n      } else {\n        navigate(\"/dashboard\");\n      }\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  if (loading) {\n    return <ChatInterfaceSkeleton />;\n  }\n\n  if (!project) {\n    return (\n      <div className=\"min-h-screen bg-gray-50 dark:bg-gray-900 flex items-center justify-center transition-colors duration-200\">\n        <div className=\"text-center\">\n          <h2 className=\"text-xl font-semibold text-gray-900 dark:text-white mb-4\">\n            프로젝트를 찾을 수 없습니다\n          </h2>\n          <button\n            onClick={() => {\n              if (user?.role === \"admin\") {\n                navigate(\"/projects\");\n              } else {\n                navigate(\"/dashboard\");\n              }\n            }}\n            className=\"inline-flex items-center px-4 py-2 text-sm font-medium rounded-md text-blue-700 dark:text-blue-300 bg-blue-100 dark:bg-blue-900 hover:bg-blue-200 dark:hover:bg-blue-800 focus:outline-none transition-colors duration-200\"\n          >\n            {user?.role === \"admin\" ? \"프로젝트 목록으로\" : \"대시보드로\"}\n          </button>\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"min-h-screen w-full bg-gray-50 dark:bg-dark-primary transition-all duration-500\">\n      {user?.role === \"admin\" ? (\n        // 관리자 모드: 프롬프트 카드 관리 + 채팅\n        <AdminView\n          projectId={project.projectId || projectId}\n          projectName={project.name}\n        />\n      ) : (\n        // 사용자 모드: 채팅만\n        <UserView\n          projectId={project.projectId || projectId}\n          projectName={project.name}\n        />\n      )}\n    </div>\n  );\n};\n\nexport default ProjectDetail;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}