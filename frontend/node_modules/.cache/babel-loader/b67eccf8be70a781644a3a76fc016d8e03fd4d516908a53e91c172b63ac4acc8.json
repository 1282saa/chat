{"ast":null,"code":"var _jsxFileName = \"/Users/yeong-gwang/Documents/work/\\u1109\\u1165\\u110B\\u116E\\u11AF\\u1100\\u1167\\u11BC\\u110C\\u1166\\u1109\\u1175\\u11AB\\u1106\\u116E\\u11AB/ai_\\u110C\\u1166\\u1106\\u1169\\u11A8\\u1103\\u1161\\u11AF\\u1100\\u1175(\\u1109\\u116E)_\\u110B\\u116A\\u11AB\\u1109\\u1165\\u11BC\\u1107\\u1169\\u11AB_\\u1109\\u1173\\u1110\\u1173\\u1105\\u1175\\u1106\\u1175\\u11BC\\u1100\\u116E\\u1112\\u1167\\u11AB \\u1107\\u1169\\u11A8\\u1109\\u1161\\u1107\\u1169\\u11AB/frontend/src/components/ProjectDetail.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { useParams, useNavigate } from \"react-router-dom\";\nimport { toast } from \"react-hot-toast\";\nimport { ArrowLeftIcon, UserIcon, CogIcon } from \"@heroicons/react/24/outline\";\nimport { projectAPI, promptCardAPI, handleAPIError } from \"../services/api\";\nimport LoadingSpinner from \"./LoadingSpinner\";\nimport PromptCardManager from \"./PromptCardManager\";\nimport ChatInterface from \"./ChatInterface\";\nimport { useApp } from \"../contexts/AppContext\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ProjectDetail = () => {\n  _s();\n  const {\n    projectId\n  } = useParams();\n  const navigate = useNavigate();\n  const {\n    mode,\n    setMode\n  } = useApp();\n  const [project, setProject] = useState(null);\n  const [promptCards, setPromptCards] = useState([]);\n  const [loading, setLoading] = useState(true);\n  useEffect(() => {\n    // 모드가 선택되지 않았다면 모드 선택 페이지로 리다이렉트\n    if (!mode) {\n      toast.error(\"먼저 모드를 선택해주세요.\");\n      navigate(\"/\");\n      return;\n    }\n    loadProjectData();\n  }, [projectId, mode, navigate]);\n  const loadProjectData = async () => {\n    try {\n      setLoading(true);\n      const projectData = await projectAPI.getProject(projectId);\n      setProject(projectData);\n\n      // 사용자 모드일 때만 프롬프트 카드를 별도로 로드\n      // (관리자 모드에서는 PromptCardManager가 자체적으로 로드함)\n      if (mode === \"user\") {\n        try {\n          const promptCardsData = await promptCardAPI.getPromptCards(projectId);\n          setPromptCards(promptCardsData);\n        } catch (promptError) {\n          console.warn(\"프롬프트 카드 로드 실패:\", promptError);\n          setPromptCards([]);\n        }\n      }\n    } catch (error) {\n      console.error(\"프로젝트 로드 실패:\", error);\n      const errorInfo = handleAPIError(error);\n      toast.error(errorInfo.message);\n      navigate(\"/projects\");\n    } finally {\n      setLoading(false);\n    }\n  };\n  const handleBackNavigation = () => {\n    navigate(\"/projects\");\n  };\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"min-h-screen bg-gray-50 flex items-center justify-center\",\n      children: [/*#__PURE__*/_jsxDEV(LoadingSpinner, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"ml-4 text-gray-600\",\n        children: mode === \"admin\" ? \"관리자 화면을 준비하고 있습니다...\" : \"채팅 화면을 준비하고 있습니다...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this);\n  }\n  if (!project) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"min-h-screen bg-gray-50 flex items-center justify-center\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-center\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"text-xl font-semibold text-gray-900 mb-4\",\n          children: \"\\uD504\\uB85C\\uC81D\\uD2B8\\uB97C \\uCC3E\\uC744 \\uC218 \\uC5C6\\uC2B5\\uB2C8\\uB2E4\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => navigate(\"/projects\"),\n          className: \"inline-flex items-center px-4 py-2 border border-transparent text-sm font-medium rounded-md text-blue-700 bg-blue-100 hover:bg-blue-200 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500\",\n          children: [/*#__PURE__*/_jsxDEV(ArrowLeftIcon, {\n            className: \"h-5 w-5 mr-2\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 13\n          }, this), \"\\uD504\\uB85C\\uC81D\\uD2B8 \\uBAA9\\uB85D\\uC73C\\uB85C\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"h-screen flex flex-col bg-gray-50\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex-shrink-0 bg-white border-b border-gray-200 px-4 py-3\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex items-center justify-between\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex items-center space-x-4\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleBackNavigation,\n            className: \"inline-flex items-center px-3 py-2 border border-gray-300 shadow-sm text-sm leading-4 font-medium rounded-md text-gray-700 bg-white hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500\",\n            children: [/*#__PURE__*/_jsxDEV(ArrowLeftIcon, {\n              className: \"h-4 w-4 mr-2\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 103,\n              columnNumber: 15\n            }, this), \"\\uBAA9\\uB85D\\uC73C\\uB85C\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex items-center\",\n            children: /*#__PURE__*/_jsxDEV(\"h1\", {\n              className: \"text-lg font-semibold text-gray-900\",\n              children: project.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 107,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex-1 overflow-hidden\",\n      children: mode === \"admin\" ?\n      /*#__PURE__*/\n      // 관리자 모드: 프롬프트 카드 관리 + 채팅\n      _jsxDEV(PromptCardManager, {\n        projectId: projectId,\n        projectName: project.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 11\n      }, this) :\n      /*#__PURE__*/\n      // 사용자 모드: 채팅만\n      _jsxDEV(\"div\", {\n        className: \"h-full bg-white\",\n        children: /*#__PURE__*/_jsxDEV(ChatInterface, {\n          projectId: projectId,\n          projectName: project.name,\n          promptCards: promptCards\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 94,\n    columnNumber: 5\n  }, this);\n};\n_s(ProjectDetail, \"dIjtRmqHV1zx66muPTd3IzODaWk=\", false, function () {\n  return [useParams, useNavigate, useApp];\n});\n_c = ProjectDetail;\nexport default ProjectDetail;\nvar _c;\n$RefreshReg$(_c, \"ProjectDetail\");","map":{"version":3,"names":["React","useState","useEffect","useParams","useNavigate","toast","ArrowLeftIcon","UserIcon","CogIcon","projectAPI","promptCardAPI","handleAPIError","LoadingSpinner","PromptCardManager","ChatInterface","useApp","jsxDEV","_jsxDEV","ProjectDetail","_s","projectId","navigate","mode","setMode","project","setProject","promptCards","setPromptCards","loading","setLoading","error","loadProjectData","projectData","getProject","promptCardsData","getPromptCards","promptError","console","warn","errorInfo","message","handleBackNavigation","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","name","projectName","_c","$RefreshReg$"],"sources":["/Users/yeong-gwang/Documents/work/서울경제신문/ai_제목달기(수)_완성본_스트리밍구현 복사본/frontend/src/components/ProjectDetail.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { useParams, useNavigate } from \"react-router-dom\";\nimport { toast } from \"react-hot-toast\";\nimport { ArrowLeftIcon, UserIcon, CogIcon } from \"@heroicons/react/24/outline\";\nimport { projectAPI, promptCardAPI, handleAPIError } from \"../services/api\";\nimport LoadingSpinner from \"./LoadingSpinner\";\nimport PromptCardManager from \"./PromptCardManager\";\nimport ChatInterface from \"./ChatInterface\";\nimport { useApp } from \"../contexts/AppContext\";\n\nconst ProjectDetail = () => {\n  const { projectId } = useParams();\n  const navigate = useNavigate();\n  const { mode, setMode } = useApp();\n  const [project, setProject] = useState(null);\n  const [promptCards, setPromptCards] = useState([]);\n  const [loading, setLoading] = useState(true);\n\n  useEffect(() => {\n    // 모드가 선택되지 않았다면 모드 선택 페이지로 리다이렉트\n    if (!mode) {\n      toast.error(\"먼저 모드를 선택해주세요.\");\n      navigate(\"/\");\n      return;\n    }\n\n    loadProjectData();\n  }, [projectId, mode, navigate]);\n\n  const loadProjectData = async () => {\n    try {\n      setLoading(true);\n      const projectData = await projectAPI.getProject(projectId);\n      setProject(projectData);\n\n      // 사용자 모드일 때만 프롬프트 카드를 별도로 로드\n      // (관리자 모드에서는 PromptCardManager가 자체적으로 로드함)\n      if (mode === \"user\") {\n        try {\n          const promptCardsData = await promptCardAPI.getPromptCards(projectId);\n          setPromptCards(promptCardsData);\n        } catch (promptError) {\n          console.warn(\"프롬프트 카드 로드 실패:\", promptError);\n          setPromptCards([]);\n        }\n      }\n    } catch (error) {\n      console.error(\"프로젝트 로드 실패:\", error);\n      const errorInfo = handleAPIError(error);\n      toast.error(errorInfo.message);\n      navigate(\"/projects\");\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const handleBackNavigation = () => {\n    navigate(\"/projects\");\n  };\n\n  if (loading) {\n    return (\n      <div className=\"min-h-screen bg-gray-50 flex items-center justify-center\">\n        <LoadingSpinner />\n        <div className=\"ml-4 text-gray-600\">\n          {mode === \"admin\"\n            ? \"관리자 화면을 준비하고 있습니다...\"\n            : \"채팅 화면을 준비하고 있습니다...\"}\n        </div>\n      </div>\n    );\n  }\n\n  if (!project) {\n    return (\n      <div className=\"min-h-screen bg-gray-50 flex items-center justify-center\">\n        <div className=\"text-center\">\n          <h2 className=\"text-xl font-semibold text-gray-900 mb-4\">\n            프로젝트를 찾을 수 없습니다\n          </h2>\n          <button\n            onClick={() => navigate(\"/projects\")}\n            className=\"inline-flex items-center px-4 py-2 border border-transparent text-sm font-medium rounded-md text-blue-700 bg-blue-100 hover:bg-blue-200 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500\"\n          >\n            <ArrowLeftIcon className=\"h-5 w-5 mr-2\" />\n            프로젝트 목록으로\n          </button>\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"h-screen flex flex-col bg-gray-50\">\n      {/* 상단 네비게이션 바 */}\n      <div className=\"flex-shrink-0 bg-white border-b border-gray-200 px-4 py-3\">\n        <div className=\"flex items-center justify-between\">\n          <div className=\"flex items-center space-x-4\">\n            <button\n              onClick={handleBackNavigation}\n              className=\"inline-flex items-center px-3 py-2 border border-gray-300 shadow-sm text-sm leading-4 font-medium rounded-md text-gray-700 bg-white hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500\"\n            >\n              <ArrowLeftIcon className=\"h-4 w-4 mr-2\" />\n              목록으로\n            </button>\n            <div className=\"flex items-center\">\n              <h1 className=\"text-lg font-semibold text-gray-900\">\n                {project.name}\n              </h1>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {/* 메인 콘텐츠 */}\n      <div className=\"flex-1 overflow-hidden\">\n        {mode === \"admin\" ? (\n          // 관리자 모드: 프롬프트 카드 관리 + 채팅\n          <PromptCardManager projectId={projectId} projectName={project.name} />\n        ) : (\n          // 사용자 모드: 채팅만\n          <div className=\"h-full bg-white\">\n            <ChatInterface\n              projectId={projectId}\n              projectName={project.name}\n              promptCards={promptCards}\n            />\n          </div>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default ProjectDetail;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}