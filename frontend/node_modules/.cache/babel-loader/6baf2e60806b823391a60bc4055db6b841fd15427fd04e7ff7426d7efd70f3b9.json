{"ast":null,"code":"var _jsxFileName = \"/Users/yeong-gwang/Documents/work/\\u1109\\u1165\\u110B\\u116E\\u11AF\\u1100\\u1167\\u11BC\\u110C\\u1166\\u1109\\u1175\\u11AB\\u1106\\u116E\\u11AB/ai_\\u110C\\u1166\\u1106\\u1169\\u11A8\\u1103\\u1161\\u11AF\\u1100\\u1175/frontend/src/components/AuthContainer.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport Login from \"./Login\";\nimport Signup from \"./Signup\";\nimport EmailVerification from \"./EmailVerification\";\nimport { useAuth } from \"../contexts/AuthContext\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContainer = ({\n  onAuthSuccess\n}) => {\n  _s();\n  const [currentView, setCurrentView] = useState(\"login\"); // 'login', 'signup', 'verify'\n  const [signupEmail, setSignupEmail] = useState(\"\");\n  const {\n    login,\n    signup,\n    verifyEmail\n  } = useAuth();\n  const handleLoginSuccess = async response => {\n    // AuthContext의 상태가 업데이트되면 자동으로 App.js에서 인증된 화면으로 전환됨\n    console.log(\"로그인 성공:\", response);\n  };\n  const handleSignupSuccess = (response, email) => {\n    setSignupEmail(email || response.email || signupEmail);\n    setCurrentView(\"verify\");\n  };\n  const handleVerificationSuccess = () => {\n    setCurrentView(\"login\");\n    alert(\"이메일 인증이 완료되었습니다. 로그인해주세요.\");\n  };\n  const handleSwitchToSignup = () => {\n    setCurrentView(\"signup\");\n  };\n  const handleSwitchToLogin = () => {\n    setCurrentView(\"login\");\n  };\n  const renderCurrentView = () => {\n    switch (currentView) {\n      case \"signup\":\n        return /*#__PURE__*/_jsxDEV(Signup, {\n          onSignupSuccess: handleSignupSuccess,\n          onSwitchToLogin: handleSwitchToLogin\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 11\n        }, this);\n      case \"verify\":\n        return /*#__PURE__*/_jsxDEV(EmailVerification, {\n          email: signupEmail,\n          onVerificationSuccess: handleVerificationSuccess,\n          onBackToLogin: handleSwitchToLogin\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 11\n        }, this);\n      case \"login\":\n      default:\n        return /*#__PURE__*/_jsxDEV(Login, {\n          onLoginSuccess: handleLoginSuccess,\n          onSwitchToSignup: handleSwitchToSignup\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 11\n        }, this);\n    }\n  };\n  return renderCurrentView();\n};\n_s(AuthContainer, \"f7XCA9yai7UwmSVCTN111HicJAA=\", false, function () {\n  return [useAuth];\n});\n_c = AuthContainer;\nexport default AuthContainer;\nvar _c;\n$RefreshReg$(_c, \"AuthContainer\");","map":{"version":3,"names":["React","useState","useNavigate","Login","Signup","EmailVerification","useAuth","jsxDEV","_jsxDEV","AuthContainer","onAuthSuccess","_s","currentView","setCurrentView","signupEmail","setSignupEmail","login","signup","verifyEmail","handleLoginSuccess","response","console","log","handleSignupSuccess","email","handleVerificationSuccess","alert","handleSwitchToSignup","handleSwitchToLogin","renderCurrentView","onSignupSuccess","onSwitchToLogin","fileName","_jsxFileName","lineNumber","columnNumber","onVerificationSuccess","onBackToLogin","onLoginSuccess","onSwitchToSignup","_c","$RefreshReg$"],"sources":["/Users/yeong-gwang/Documents/work/서울경제신문/ai_제목달기/frontend/src/components/AuthContainer.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport Login from \"./Login\";\nimport Signup from \"./Signup\";\nimport EmailVerification from \"./EmailVerification\";\nimport { useAuth } from \"../contexts/AuthContext\";\n\nconst AuthContainer = ({ onAuthSuccess }) => {\n  const [currentView, setCurrentView] = useState(\"login\"); // 'login', 'signup', 'verify'\n  const [signupEmail, setSignupEmail] = useState(\"\");\n  const { login, signup, verifyEmail } = useAuth();\n\n  const handleLoginSuccess = async (response) => {\n    // AuthContext의 상태가 업데이트되면 자동으로 App.js에서 인증된 화면으로 전환됨\n    console.log(\"로그인 성공:\", response);\n  };\n\n  const handleSignupSuccess = (response, email) => {\n    setSignupEmail(email || response.email || signupEmail);\n    setCurrentView(\"verify\");\n  };\n\n  const handleVerificationSuccess = () => {\n    setCurrentView(\"login\");\n    alert(\"이메일 인증이 완료되었습니다. 로그인해주세요.\");\n  };\n\n  const handleSwitchToSignup = () => {\n    setCurrentView(\"signup\");\n  };\n\n  const handleSwitchToLogin = () => {\n    setCurrentView(\"login\");\n  };\n\n  const renderCurrentView = () => {\n    switch (currentView) {\n      case \"signup\":\n        return (\n          <Signup\n            onSignupSuccess={handleSignupSuccess}\n            onSwitchToLogin={handleSwitchToLogin}\n          />\n        );\n      case \"verify\":\n        return (\n          <EmailVerification\n            email={signupEmail}\n            onVerificationSuccess={handleVerificationSuccess}\n            onBackToLogin={handleSwitchToLogin}\n          />\n        );\n      case \"login\":\n      default:\n        return (\n          <Login\n            onLoginSuccess={handleLoginSuccess}\n            onSwitchToSignup={handleSwitchToSignup}\n          />\n        );\n    }\n  };\n\n  return renderCurrentView();\n};\n\nexport default AuthContainer;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,WAAW,QAAQ,kBAAkB;AAC9C,OAAOC,KAAK,MAAM,SAAS;AAC3B,OAAOC,MAAM,MAAM,UAAU;AAC7B,OAAOC,iBAAiB,MAAM,qBAAqB;AACnD,SAASC,OAAO,QAAQ,yBAAyB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAElD,MAAMC,aAAa,GAAGA,CAAC;EAAEC;AAAc,CAAC,KAAK;EAAAC,EAAA;EAC3C,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGZ,QAAQ,CAAC,OAAO,CAAC,CAAC,CAAC;EACzD,MAAM,CAACa,WAAW,EAAEC,cAAc,CAAC,GAAGd,QAAQ,CAAC,EAAE,CAAC;EAClD,MAAM;IAAEe,KAAK;IAAEC,MAAM;IAAEC;EAAY,CAAC,GAAGZ,OAAO,CAAC,CAAC;EAEhD,MAAMa,kBAAkB,GAAG,MAAOC,QAAQ,IAAK;IAC7C;IACAC,OAAO,CAACC,GAAG,CAAC,SAAS,EAAEF,QAAQ,CAAC;EAClC,CAAC;EAED,MAAMG,mBAAmB,GAAGA,CAACH,QAAQ,EAAEI,KAAK,KAAK;IAC/CT,cAAc,CAACS,KAAK,IAAIJ,QAAQ,CAACI,KAAK,IAAIV,WAAW,CAAC;IACtDD,cAAc,CAAC,QAAQ,CAAC;EAC1B,CAAC;EAED,MAAMY,yBAAyB,GAAGA,CAAA,KAAM;IACtCZ,cAAc,CAAC,OAAO,CAAC;IACvBa,KAAK,CAAC,2BAA2B,CAAC;EACpC,CAAC;EAED,MAAMC,oBAAoB,GAAGA,CAAA,KAAM;IACjCd,cAAc,CAAC,QAAQ,CAAC;EAC1B,CAAC;EAED,MAAMe,mBAAmB,GAAGA,CAAA,KAAM;IAChCf,cAAc,CAAC,OAAO,CAAC;EACzB,CAAC;EAED,MAAMgB,iBAAiB,GAAGA,CAAA,KAAM;IAC9B,QAAQjB,WAAW;MACjB,KAAK,QAAQ;QACX,oBACEJ,OAAA,CAACJ,MAAM;UACL0B,eAAe,EAAEP,mBAAoB;UACrCQ,eAAe,EAAEH;QAAoB;UAAAI,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACtC,CAAC;MAEN,KAAK,QAAQ;QACX,oBACE3B,OAAA,CAACH,iBAAiB;UAChBmB,KAAK,EAAEV,WAAY;UACnBsB,qBAAqB,EAAEX,yBAA0B;UACjDY,aAAa,EAAET;QAAoB;UAAAI,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACpC,CAAC;MAEN,KAAK,OAAO;MACZ;QACE,oBACE3B,OAAA,CAACL,KAAK;UACJmC,cAAc,EAAEnB,kBAAmB;UACnCoB,gBAAgB,EAAEZ;QAAqB;UAAAK,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACxC,CAAC;IAER;EACF,CAAC;EAED,OAAON,iBAAiB,CAAC,CAAC;AAC5B,CAAC;AAAClB,EAAA,CAzDIF,aAAa;EAAA,QAGsBH,OAAO;AAAA;AAAAkC,EAAA,GAH1C/B,aAAa;AA2DnB,eAAeA,aAAa;AAAC,IAAA+B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}