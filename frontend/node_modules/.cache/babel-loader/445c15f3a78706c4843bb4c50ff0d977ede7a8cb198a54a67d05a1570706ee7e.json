{"ast":null,"code":"import axios from \"axios\";\n\n// API 기본 설정\nconst API_BASE_URL = process.env.REACT_APP_API_URL || \"https://vph0fu827a.execute-api.us-east-1.amazonaws.com/prod\";\n\n// Axios 인스턴스\nconst api = axios.create({\n  baseURL: API_BASE_URL,\n  headers: {\n    \"Content-Type\": \"application/json\"\n  }\n});\n\n// 요청 인터셉터\napi.interceptors.request.use(config => {\n  var _config$method;\n  console.log(\"API 요청:\", (_config$method = config.method) === null || _config$method === void 0 ? void 0 : _config$method.toUpperCase(), config.url);\n  return config;\n});\n\n// 응답 인터셉터\napi.interceptors.response.use(response => {\n  console.log(\"API 응답:\", response.status, response.config.url);\n  return response;\n}, error => {\n  var _error$response;\n  console.error(\"API 오류:\", (_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.status, error.message);\n  return Promise.reject(error);\n});\n\n// =============================================================================\n// 1. 프로젝트 API\n// =============================================================================\nexport const projectAPI = {\n  getProjects: async () => {\n    const response = await api.get(\"/projects\");\n    return response.data;\n  },\n  getProject: async projectId => {\n    const response = await api.get(`/projects/${projectId}`);\n    return response.data;\n  },\n  createProject: async projectData => {\n    const response = await api.post(\"/projects\", projectData);\n    return response.data;\n  }\n};\n\n// =============================================================================\n// 2. 프롬프트 API (S3/DynamoDB 연동)\n// =============================================================================\nexport const promptCardAPI = {\n  // 프롬프트 카드 목록 조회\n  getPromptCards: async (projectId, includeContent = false) => {\n    console.log(\"🔍 프롬프트 조회:\", projectId);\n    const params = includeContent ? {\n      include_content: \"true\"\n    } : {};\n    const response = await api.get(`/prompts/${projectId}`, {\n      params\n    });\n    console.log(\"✅ 프롬프트 조회 성공:\", response.data.count, \"개\");\n    return response.data;\n  },\n  // 프롬프트 카드 생성\n  createPromptCard: async (projectId, promptData) => {\n    console.log(\"🆕 프롬프트 생성:\", {\n      projectId,\n      promptData\n    });\n    const response = await api.post(`/prompts/${projectId}`, promptData);\n    return response.data;\n  },\n  // 프롬프트 카드 수정 - S3/DynamoDB 저장\n  updatePromptCard: async (projectId, promptId, promptData) => {\n    console.log(\"💾 프롬프트 수정:\", {\n      projectId,\n      promptId\n    });\n    const response = await api.put(`/prompts/${projectId}/${promptId}`, promptData);\n    return response.data;\n  },\n  // 프롬프트 카드 삭제\n  deletePromptCard: async (projectId, promptId) => {\n    console.log(\"🗑️ 프롬프트 삭제:\", {\n      projectId,\n      promptId\n    });\n    const response = await api.delete(`/prompts/${projectId}/${promptId}`);\n    return response.data;\n  }\n};\n\n// =============================================================================\n// 3. 제목 생성 API (Bedrock Claude 호출)\n// =============================================================================\nexport const generateAPI = {\n  // 실제 Bedrock Claude 호출\n  generateTitle: async (projectId, articleContent, userRequest = \"\") => {\n    console.log(\"🚀 제목 생성 시작:\", {\n      projectId,\n      articleLength: articleContent.length,\n      userRequest\n    });\n    const response = await api.post(`/projects/${projectId}/generate`, {\n      article: articleContent,\n      userRequest\n    });\n    console.log(\"✅ 제목 생성 완료\");\n    return response.data;\n  }\n};\n\n// =============================================================================\n// 4. 유틸리티\n// =============================================================================\nexport const handleAPIError = error => {\n  if (error.response) {\n    const {\n      status,\n      data\n    } = error.response;\n    return {\n      message: (data === null || data === void 0 ? void 0 : data.error) || `서버 오류 (${status})`,\n      status\n    };\n  } else if (error.request) {\n    return {\n      message: \"네트워크 연결을 확인해주세요\",\n      status: 0\n    };\n  } else {\n    return {\n      message: error.message || \"알 수 없는 오류가 발생했습니다\",\n      status: -1\n    };\n  }\n};\nexport default api;","map":{"version":3,"names":["axios","API_BASE_URL","process","env","REACT_APP_API_URL","api","create","baseURL","headers","interceptors","request","use","config","_config$method","console","log","method","toUpperCase","url","response","status","error","_error$response","message","Promise","reject","projectAPI","getProjects","get","data","getProject","projectId","createProject","projectData","post","promptCardAPI","getPromptCards","includeContent","params","include_content","count","createPromptCard","promptData","updatePromptCard","promptId","put","deletePromptCard","delete","generateAPI","generateTitle","articleContent","userRequest","articleLength","length","article","handleAPIError"],"sources":["/Users/yeong-gwang/Documents/work/서울경제신문/ai_제목달기/frontend/src/services/api.js"],"sourcesContent":["import axios from \"axios\";\n\n// API 기본 설정\nconst API_BASE_URL =\n  process.env.REACT_APP_API_URL ||\n  \"https://vph0fu827a.execute-api.us-east-1.amazonaws.com/prod\";\n\n// Axios 인스턴스\nconst api = axios.create({\n  baseURL: API_BASE_URL,\n  headers: { \"Content-Type\": \"application/json\" },\n});\n\n// 요청 인터셉터\napi.interceptors.request.use((config) => {\n  console.log(\"API 요청:\", config.method?.toUpperCase(), config.url);\n  return config;\n});\n\n// 응답 인터셉터\napi.interceptors.response.use(\n  (response) => {\n    console.log(\"API 응답:\", response.status, response.config.url);\n    return response;\n  },\n  (error) => {\n    console.error(\"API 오류:\", error.response?.status, error.message);\n    return Promise.reject(error);\n  }\n);\n\n// =============================================================================\n// 1. 프로젝트 API\n// =============================================================================\nexport const projectAPI = {\n  getProjects: async () => {\n    const response = await api.get(\"/projects\");\n    return response.data;\n  },\n\n  getProject: async (projectId) => {\n    const response = await api.get(`/projects/${projectId}`);\n    return response.data;\n  },\n\n  createProject: async (projectData) => {\n    const response = await api.post(\"/projects\", projectData);\n    return response.data;\n  },\n};\n\n// =============================================================================\n// 2. 프롬프트 API (S3/DynamoDB 연동)\n// =============================================================================\nexport const promptCardAPI = {\n  // 프롬프트 카드 목록 조회\n  getPromptCards: async (projectId, includeContent = false) => {\n    console.log(\"🔍 프롬프트 조회:\", projectId);\n\n    const params = includeContent ? { include_content: \"true\" } : {};\n    const response = await api.get(`/prompts/${projectId}`, { params });\n\n    console.log(\"✅ 프롬프트 조회 성공:\", response.data.count, \"개\");\n    return response.data;\n  },\n\n  // 프롬프트 카드 생성\n  createPromptCard: async (projectId, promptData) => {\n    console.log(\"🆕 프롬프트 생성:\", { projectId, promptData });\n\n    const response = await api.post(`/prompts/${projectId}`, promptData);\n    return response.data;\n  },\n\n  // 프롬프트 카드 수정 - S3/DynamoDB 저장\n  updatePromptCard: async (projectId, promptId, promptData) => {\n    console.log(\"💾 프롬프트 수정:\", { projectId, promptId });\n\n    const response = await api.put(\n      `/prompts/${projectId}/${promptId}`,\n      promptData\n    );\n    return response.data;\n  },\n\n  // 프롬프트 카드 삭제\n  deletePromptCard: async (projectId, promptId) => {\n    console.log(\"🗑️ 프롬프트 삭제:\", { projectId, promptId });\n\n    const response = await api.delete(`/prompts/${projectId}/${promptId}`);\n    return response.data;\n  },\n};\n\n// =============================================================================\n// 3. 제목 생성 API (Bedrock Claude 호출)\n// =============================================================================\nexport const generateAPI = {\n  // 실제 Bedrock Claude 호출\n  generateTitle: async (projectId, articleContent, userRequest = \"\") => {\n    console.log(\"🚀 제목 생성 시작:\", {\n      projectId,\n      articleLength: articleContent.length,\n      userRequest,\n    });\n\n    const response = await api.post(`/projects/${projectId}/generate`, {\n      article: articleContent,\n      userRequest,\n    });\n\n    console.log(\"✅ 제목 생성 완료\");\n    return response.data;\n  },\n};\n\n// =============================================================================\n// 4. 유틸리티\n// =============================================================================\nexport const handleAPIError = (error) => {\n  if (error.response) {\n    const { status, data } = error.response;\n    return {\n      message: data?.error || `서버 오류 (${status})`,\n      status,\n    };\n  } else if (error.request) {\n    return {\n      message: \"네트워크 연결을 확인해주세요\",\n      status: 0,\n    };\n  } else {\n    return {\n      message: error.message || \"알 수 없는 오류가 발생했습니다\",\n      status: -1,\n    };\n  }\n};\n\nexport default api;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}