{"ast":null,"code":"var _jsxFileName = \"/Users/yeong-gwang/Documents/work/\\u1109\\u1165\\u110B\\u116E\\u11AF\\u1100\\u1167\\u11BC\\u110C\\u1166\\u1109\\u1175\\u11AB\\u1106\\u116E\\u11AB/ai_\\u110C\\u1166\\u1106\\u1169\\u11A8\\u1103\\u1161\\u11AF\\u1100\\u1175(\\u1109\\u116E)_\\u110B\\u116A\\u11AB\\u1109\\u1165\\u11BC\\u1107\\u1169\\u11AB_\\u1109\\u1173\\u1110\\u1173\\u1105\\u1175\\u1106\\u1175\\u11BC\\u1100\\u116E\\u1112\\u1167\\u11AB \\u1107\\u1169\\u11A8\\u1109\\u1161\\u1107\\u1169\\u11AB/frontend/src/contexts/AuthContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useState, useEffect } from \"react\";\nimport { authAPI } from \"../services/api\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext();\nexport const useAuth = () => {\n  _s();\n  const context = useContext(AuthContext);\n  if (!context) {\n    throw new Error(\"useAuth must be used within an AuthProvider\");\n  }\n  return context;\n};\n_s(useAuth, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nexport const AuthProvider = ({\n  children\n}) => {\n  _s2();\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\n  const [user, setUser] = useState(null);\n  const [loading, setLoading] = useState(true);\n  useEffect(() => {\n    checkAuthStatus();\n  }, []);\n  const checkAuthStatus = () => {\n    try {\n      const isAuth = authAPI.isAuthenticated();\n      const currentUser = authAPI.getCurrentUser();\n      setIsAuthenticated(isAuth);\n      setUser(currentUser);\n    } catch (error) {\n      console.error(\"Auth status check failed:\", error);\n      setIsAuthenticated(false);\n      setUser(null);\n    } finally {\n      setLoading(false);\n    }\n  };\n  const login = async credentials => {\n    try {\n      const result = await authAPI.signin(credentials);\n      const user = authAPI.getCurrentUser();\n      setIsAuthenticated(true);\n      setUser(user);\n      return result;\n    } catch (error) {\n      throw error;\n    }\n  };\n  const signup = async userData => {\n    try {\n      const result = await authAPI.signup(userData);\n      return result;\n    } catch (error) {\n      throw error;\n    }\n  };\n  const logout = async () => {\n    try {\n      await authAPI.signout();\n    } finally {\n      setIsAuthenticated(false);\n      setUser(null);\n    }\n  };\n  const verifyEmail = async verificationData => {\n    try {\n      const result = await authAPI.verifyEmail(verificationData);\n      return result;\n    } catch (error) {\n      throw error;\n    }\n  };\n  const forgotPassword = async email => {\n    try {\n      const result = await authAPI.forgotPassword(email);\n      return result;\n    } catch (error) {\n      throw error;\n    }\n  };\n  const confirmPassword = async resetData => {\n    try {\n      const result = await authAPI.confirmPassword(resetData);\n      return result;\n    } catch (error) {\n      throw error;\n    }\n  };\n  const value = {\n    isAuthenticated,\n    user,\n    loading,\n    login,\n    signup,\n    logout,\n    verifyEmail,\n    forgotPassword,\n    confirmPassword,\n    checkAuthStatus\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 111,\n    columnNumber: 10\n  }, this);\n};\n_s2(AuthProvider, \"mKb+zX9grAar2iMVStuBBwt7fpw=\");\n_c = AuthProvider;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useContext","useState","useEffect","authAPI","jsxDEV","_jsxDEV","AuthContext","useAuth","_s","context","Error","AuthProvider","children","_s2","isAuthenticated","setIsAuthenticated","user","setUser","loading","setLoading","checkAuthStatus","isAuth","currentUser","getCurrentUser","error","console","login","credentials","result","signin","signup","userData","logout","signout","verifyEmail","verificationData","forgotPassword","email","confirmPassword","resetData","value","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/yeong-gwang/Documents/work/서울경제신문/ai_제목달기(수)_완성본_스트리밍구현 복사본/frontend/src/contexts/AuthContext.js"],"sourcesContent":["import React, { createContext, useContext, useState, useEffect } from \"react\";\nimport { authAPI } from \"../services/api\";\n\nconst AuthContext = createContext();\n\nexport const useAuth = () => {\n  const context = useContext(AuthContext);\n  if (!context) {\n    throw new Error(\"useAuth must be used within an AuthProvider\");\n  }\n  return context;\n};\n\nexport const AuthProvider = ({ children }) => {\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\n  const [user, setUser] = useState(null);\n  const [loading, setLoading] = useState(true);\n\n  useEffect(() => {\n    checkAuthStatus();\n  }, []);\n\n  const checkAuthStatus = () => {\n    try {\n      const isAuth = authAPI.isAuthenticated();\n      const currentUser = authAPI.getCurrentUser();\n\n      setIsAuthenticated(isAuth);\n      setUser(currentUser);\n    } catch (error) {\n      console.error(\"Auth status check failed:\", error);\n      setIsAuthenticated(false);\n      setUser(null);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const login = async (credentials) => {\n    try {\n      const result = await authAPI.signin(credentials);\n      const user = authAPI.getCurrentUser();\n\n      setIsAuthenticated(true);\n      setUser(user);\n\n      return result;\n    } catch (error) {\n      throw error;\n    }\n  };\n\n  const signup = async (userData) => {\n    try {\n      const result = await authAPI.signup(userData);\n      return result;\n    } catch (error) {\n      throw error;\n    }\n  };\n\n  const logout = async () => {\n    try {\n      await authAPI.signout();\n    } finally {\n      setIsAuthenticated(false);\n      setUser(null);\n    }\n  };\n\n  const verifyEmail = async (verificationData) => {\n    try {\n      const result = await authAPI.verifyEmail(verificationData);\n      return result;\n    } catch (error) {\n      throw error;\n    }\n  };\n\n  const forgotPassword = async (email) => {\n    try {\n      const result = await authAPI.forgotPassword(email);\n      return result;\n    } catch (error) {\n      throw error;\n    }\n  };\n\n  const confirmPassword = async (resetData) => {\n    try {\n      const result = await authAPI.confirmPassword(resetData);\n      return result;\n    } catch (error) {\n      throw error;\n    }\n  };\n\n  const value = {\n    isAuthenticated,\n    user,\n    loading,\n    login,\n    signup,\n    logout,\n    verifyEmail,\n    forgotPassword,\n    confirmPassword,\n    checkAuthStatus,\n  };\n\n  return <AuthContext.Provider value={value}>{children}</AuthContext.Provider>;\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}