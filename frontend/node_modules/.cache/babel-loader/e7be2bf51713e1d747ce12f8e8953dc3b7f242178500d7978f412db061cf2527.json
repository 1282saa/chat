{"ast":null,"code":"var _jsxFileName = \"/Users/yeong-gwang/Documents/work/\\u1109\\u1165\\u110B\\u116E\\u11AF\\u1100\\u1167\\u11BC\\u110C\\u1166\\u1109\\u1175\\u11AB\\u1106\\u116E\\u11AB/ai_\\u110C\\u1166\\u1106\\u1169\\u11A8\\u1103\\u1161\\u11AF\\u1100\\u1175/frontend/src/components/workspace/ChatPanel.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef, useEffect } from 'react';\nimport { toast } from 'react-hot-toast';\nimport { PaperAirplaneIcon, ArrowPathIcon, DocumentDuplicateIcon, TrashIcon } from '@heroicons/react/24/outline';\nimport { orchestrationAPI } from '../../services/api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ChatPanel = ({\n  projectId,\n  projectName,\n  promptCards = [],\n  onToggleCardPanel,\n  cardPanelVisible,\n  className = \"\"\n}) => {\n  _s();\n  const [messages, setMessages] = useState([{\n    id: 'welcome',\n    type: 'assistant',\n    content: `안녕하세요! 저는 ${projectName}의 AI 제목 작가입니다. 🎯\\n\\n기사 내용을 입력해주시면 다양한 스타일의 제목을 제안해드릴게요. 제목을 수정하거나 다른 스타일로 바꾸고 싶으시면 언제든 말씀해주세요!`,\n    timestamp: new Date()\n  }]);\n  const [inputValue, setInputValue] = useState('');\n  const [isGenerating, setIsGenerating] = useState(false);\n  const [currentExecution, setCurrentExecution] = useState(null);\n  const messagesEndRef = useRef(null);\n  const inputRef = useRef(null);\n\n  // 메시지 끝으로 스크롤\n  const scrollToBottom = () => {\n    var _messagesEndRef$curre;\n    (_messagesEndRef$curre = messagesEndRef.current) === null || _messagesEndRef$curre === void 0 ? void 0 : _messagesEndRef$curre.scrollIntoView({\n      behavior: 'smooth'\n    });\n  };\n  useEffect(() => {\n    scrollToBottom();\n  }, [messages]);\n\n  // 키보드 단축키 처리\n  useEffect(() => {\n    const handleKeyDown = e => {\n      // Ctrl/Cmd + B: 카드 패널 토글\n      if ((e.ctrlKey || e.metaKey) && e.key === 'b') {\n        var _inputRef$current;\n        e.preventDefault();\n        onToggleCardPanel();\n        (_inputRef$current = inputRef.current) === null || _inputRef$current === void 0 ? void 0 : _inputRef$current.focus();\n      }\n\n      // /: 카드 빠른 검색 (추후 구현)\n      if (e.key === '/' && !e.ctrlKey && !e.metaKey && document.activeElement !== inputRef.current) {\n        e.preventDefault();\n        onToggleCardPanel();\n      }\n    };\n    document.addEventListener('keydown', handleKeyDown);\n    return () => document.removeEventListener('keydown', handleKeyDown);\n  }, [onToggleCardPanel]);\n\n  // 메시지 전송\n  const handleSendMessage = async () => {\n    if (!inputValue.trim() || isGenerating) return;\n    const userMessage = {\n      id: Date.now() + Math.random(),\n      type: 'user',\n      content: inputValue,\n      timestamp: new Date()\n    };\n    setMessages(prev => [...prev, userMessage]);\n    setInputValue('');\n    setIsGenerating(true);\n    try {\n      // 오케스트레이션 실행\n      const response = await orchestrationAPI.executeOrchestration(projectId, inputValue, {\n        useAllSteps: true,\n        enabledSteps: promptCards.filter(card => card.enabled).map(card => card.category),\n        maxRetries: 3,\n        temperature: 0.7\n      });\n      setCurrentExecution(response.executionId);\n\n      // 임시 로딩 메시지\n      const loadingMessage = {\n        id: 'loading-' + Date.now(),\n        type: 'assistant',\n        content: '🎯 AI가 제목을 생성하고 있습니다...\\n\\n단계별로 처리 중이니 잠시만 기다려주세요!',\n        timestamp: new Date(),\n        isLoading: true\n      };\n      setMessages(prev => [...prev, loadingMessage]);\n\n      // 결과 폴링\n      pollOrchestrationResult(response.executionId);\n    } catch (error) {\n      console.error('메시지 전송 오류:', error);\n      const errorMessage = {\n        id: 'error-' + Date.now(),\n        type: 'assistant',\n        content: '죄송합니다. 제목 생성 중 오류가 발생했습니다. 다시 시도해주세요.',\n        timestamp: new Date(),\n        isError: true\n      };\n      setMessages(prev => [...prev, errorMessage]);\n      setIsGenerating(false);\n    }\n  };\n\n  // 오케스트레이션 결과 폴링\n  const pollOrchestrationResult = async executionId => {\n    const poll = async () => {\n      try {\n        const status = await orchestrationAPI.getOrchestrationStatus(projectId, executionId);\n        if (status.status === 'COMPLETED') {\n          var _result$steps, _result$steps$filter, _result$steps$filter$;\n          const result = await orchestrationAPI.getOrchestrationResult(projectId, executionId);\n\n          // 최종 결과에서 제목들 추출\n          const titles = ((_result$steps = result.steps) === null || _result$steps === void 0 ? void 0 : (_result$steps$filter = _result$steps.filter(step => step.output)) === null || _result$steps$filter === void 0 ? void 0 : (_result$steps$filter$ = _result$steps$filter.map(step => step.output)) === null || _result$steps$filter$ === void 0 ? void 0 : _result$steps$filter$.slice(-3)) || ['제목 생성 완료'];\n          const responseMessage = {\n            id: 'response-' + Date.now(),\n            type: 'assistant',\n            content: `✨ **생성된 제목 후보들입니다:**\\n\\n${titles.map((title, i) => `**${i + 1}.** ${title}`).join('\\n\\n')}\\n\\n원하시는 제목이 있으시거나 수정이 필요하시면 말씀해주세요!`,\n            timestamp: new Date(),\n            titles: titles\n          };\n\n          // 로딩 메시지 제거하고 결과 메시지 추가\n          setMessages(prev => prev.filter(msg => !msg.isLoading).concat([responseMessage]));\n          setIsGenerating(false);\n        } else if (status.status === 'FAILED') {\n          throw new Error('오케스트레이션 실패');\n        } else if (status.status === 'RUNNING') {\n          // 3초 후 다시 폴링\n          setTimeout(poll, 3000);\n        }\n      } catch (error) {\n        console.error('결과 조회 오류:', error);\n        const errorMessage = {\n          id: 'error-' + Date.now(),\n          type: 'assistant',\n          content: '제목 생성 중 문제가 발생했습니다. 다시 시도해주세요.',\n          timestamp: new Date(),\n          isError: true\n        };\n        setMessages(prev => prev.filter(msg => !msg.isLoading).concat([errorMessage]));\n        setIsGenerating(false);\n      }\n    };\n    poll();\n  };\n\n  // 메시지 복사\n  const copyMessage = content => {\n    navigator.clipboard.writeText(content);\n    toast.success('메시지가 복사되었습니다');\n  };\n\n  // 채팅 초기화\n  const clearChat = () => {\n    if (window.confirm('채팅 기록을 모두 삭제하시겠습니까?')) {\n      setMessages([{\n        id: 'welcome',\n        type: 'assistant',\n        content: `안녕하세요! 저는 ${projectName}의 AI 제목 작가입니다. 🎯\\n\\n기사 내용을 입력해주시면 다양한 스타일의 제목을 제안해드릴게요. 제목을 수정하거나 다른 스타일로 바꾸고 싶으시면 언제든 말씀해주세요!`,\n        timestamp: new Date()\n      }]);\n      toast.success('채팅 기록이 초기화되었습니다');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `flex flex-col h-full bg-white ${className}`,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex items-center justify-between p-4 border-b border-gray-200 bg-gray-50\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex items-center space-x-3\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"w-3 h-3 bg-green-500 rounded-full animate-pulse\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 206,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"font-semibold text-gray-900\",\n          children: \"AI \\uC81C\\uBAA9 \\uC791\\uAC00\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 207,\n          columnNumber: 11\n        }, this), !cardPanelVisible && /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: onToggleCardPanel,\n          className: \"text-xs text-blue-600 hover:text-blue-800 ml-2\",\n          children: [\"\\uCE74\\uB4DC \\uBCF4\\uAE30 (\", promptCards.filter(c => c.enabled).length, \"\\uAC1C \\uD65C\\uC131)\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 209,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 205,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex items-center space-x-2\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: clearChat,\n          className: \"p-2 text-gray-400 hover:text-red-600 rounded-lg hover:bg-red-50 transition-colors\",\n          title: \"\\uCC44\\uD305 \\uCD08\\uAE30\\uD654\",\n          children: /*#__PURE__*/_jsxDEV(TrashIcon, {\n            className: \"h-4 w-4\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 223,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 218,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 217,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 204,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex-1 overflow-y-auto p-4 space-y-4\",\n      children: [messages.map(message => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `flex ${message.type === 'user' ? 'justify-end' : 'justify-start'}`,\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `max-w-[80%] p-4 rounded-lg ${message.type === 'user' ? 'bg-blue-600 text-white' : message.isError ? 'bg-red-50 text-red-800 border border-red-200' : message.isLoading ? 'bg-yellow-50 text-yellow-800 border border-yellow-200' : 'bg-gray-100 text-gray-800'}`,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"whitespace-pre-wrap break-words\",\n            children: message.content\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 246,\n            columnNumber: 15\n          }, this), message.titles && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mt-3 flex flex-wrap gap-2\",\n            children: message.titles.map((title, index) => /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => copyMessage(title),\n              className: \"flex items-center px-2 py-1 bg-gray-200 hover:bg-gray-300 rounded text-xs text-gray-700 transition-colors\",\n              children: [/*#__PURE__*/_jsxDEV(DocumentDuplicateIcon, {\n                className: \"h-3 w-3 mr-1\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 259,\n                columnNumber: 23\n              }, this), \"\\uC81C\\uBAA9 \", index + 1, \" \\uBCF5\\uC0AC\"]\n            }, index, true, {\n              fileName: _jsxFileName,\n              lineNumber: 254,\n              columnNumber: 21\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 252,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"text-xs opacity-70 mt-2\",\n            children: message.timestamp.toLocaleTimeString('ko-KR', {\n              hour: 'numeric',\n              minute: '2-digit'\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 266,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 235,\n          columnNumber: 13\n        }, this)\n      }, message.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 231,\n        columnNumber: 11\n      }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n        ref: messagesEndRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 275,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 229,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"p-4 border-t border-gray-200 bg-gray-50\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex space-x-3\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex-1 relative\",\n          children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n            ref: inputRef,\n            value: inputValue,\n            onChange: e => setInputValue(e.target.value),\n            onKeyDown: e => {\n              if (e.key === 'Enter' && !e.shiftKey) {\n                e.preventDefault();\n                handleSendMessage();\n              }\n            },\n            placeholder: \"\\uAE30\\uC0AC \\uB0B4\\uC6A9\\uC744 \\uC785\\uB825\\uD558\\uAC70\\uB098 \\uC81C\\uBAA9 \\uC218\\uC815 \\uC694\\uCCAD\\uC744 \\uD574\\uC8FC\\uC138\\uC694...\",\n            rows: 3,\n            className: \"w-full p-3 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500 resize-none\",\n            disabled: isGenerating\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 282,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex items-center justify-between mt-2 text-xs text-gray-500\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              children: [inputValue.length, \"/2000\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 298,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              children: \"Shift + Enter\\uB85C \\uC904\\uBC14\\uAFC8, Enter\\uB85C \\uC804\\uC1A1\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 299,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 297,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 281,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleSendMessage,\n          disabled: !inputValue.trim() || isGenerating,\n          className: `flex items-center justify-center w-12 h-12 rounded-lg font-medium transition-colors ${!inputValue.trim() || isGenerating ? 'bg-gray-300 text-gray-500 cursor-not-allowed' : 'bg-blue-600 text-white hover:bg-blue-700'}`,\n          children: isGenerating ? /*#__PURE__*/_jsxDEV(ArrowPathIcon, {\n            className: \"h-5 w-5 animate-spin\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 313,\n            columnNumber: 15\n          }, this) : /*#__PURE__*/_jsxDEV(PaperAirplaneIcon, {\n            className: \"h-5 w-5\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 315,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 303,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 280,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 279,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 202,\n    columnNumber: 5\n  }, this);\n};\n_s(ChatPanel, \"Sq5ZkvwLKJeDNkMCUrmZRlsWZuI=\");\n_c = ChatPanel;\nexport default ChatPanel;\nvar _c;\n$RefreshReg$(_c, \"ChatPanel\");","map":{"version":3,"names":["React","useState","useRef","useEffect","toast","PaperAirplaneIcon","ArrowPathIcon","DocumentDuplicateIcon","TrashIcon","orchestrationAPI","jsxDEV","_jsxDEV","ChatPanel","projectId","projectName","promptCards","onToggleCardPanel","cardPanelVisible","className","_s","messages","setMessages","id","type","content","timestamp","Date","inputValue","setInputValue","isGenerating","setIsGenerating","currentExecution","setCurrentExecution","messagesEndRef","inputRef","scrollToBottom","_messagesEndRef$curre","current","scrollIntoView","behavior","handleKeyDown","e","ctrlKey","metaKey","key","_inputRef$current","preventDefault","focus","document","activeElement","addEventListener","removeEventListener","handleSendMessage","trim","userMessage","now","Math","random","prev","response","executeOrchestration","useAllSteps","enabledSteps","filter","card","enabled","map","category","maxRetries","temperature","executionId","loadingMessage","isLoading","pollOrchestrationResult","error","console","errorMessage","isError","poll","status","getOrchestrationStatus","_result$steps","_result$steps$filter","_result$steps$filter$","result","getOrchestrationResult","titles","steps","step","output","slice","responseMessage","title","i","join","msg","concat","Error","setTimeout","copyMessage","navigator","clipboard","writeText","success","clearChat","window","confirm","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","c","length","message","index","toLocaleTimeString","hour","minute","ref","value","onChange","target","onKeyDown","shiftKey","placeholder","rows","disabled","_c","$RefreshReg$"],"sources":["/Users/yeong-gwang/Documents/work/서울경제신문/ai_제목달기/frontend/src/components/workspace/ChatPanel.js"],"sourcesContent":["import React, { useState, useRef, useEffect } from 'react';\nimport { toast } from 'react-hot-toast';\nimport {\n  PaperAirplaneIcon,\n  ArrowPathIcon,\n  DocumentDuplicateIcon,\n  TrashIcon,\n} from '@heroicons/react/24/outline';\nimport { orchestrationAPI } from '../../services/api';\n\nconst ChatPanel = ({ \n  projectId, \n  projectName,\n  promptCards = [],\n  onToggleCardPanel,\n  cardPanelVisible,\n  className = \"\" \n}) => {\n  const [messages, setMessages] = useState([\n    {\n      id: 'welcome',\n      type: 'assistant',\n      content: `안녕하세요! 저는 ${projectName}의 AI 제목 작가입니다. 🎯\\n\\n기사 내용을 입력해주시면 다양한 스타일의 제목을 제안해드릴게요. 제목을 수정하거나 다른 스타일로 바꾸고 싶으시면 언제든 말씀해주세요!`,\n      timestamp: new Date(),\n    }\n  ]);\n  const [inputValue, setInputValue] = useState('');\n  const [isGenerating, setIsGenerating] = useState(false);\n  const [currentExecution, setCurrentExecution] = useState(null);\n  \n  const messagesEndRef = useRef(null);\n  const inputRef = useRef(null);\n\n  // 메시지 끝으로 스크롤\n  const scrollToBottom = () => {\n    messagesEndRef.current?.scrollIntoView({ behavior: 'smooth' });\n  };\n\n  useEffect(() => {\n    scrollToBottom();\n  }, [messages]);\n\n  // 키보드 단축키 처리\n  useEffect(() => {\n    const handleKeyDown = (e) => {\n      // Ctrl/Cmd + B: 카드 패널 토글\n      if ((e.ctrlKey || e.metaKey) && e.key === 'b') {\n        e.preventDefault();\n        onToggleCardPanel();\n        inputRef.current?.focus();\n      }\n      \n      // /: 카드 빠른 검색 (추후 구현)\n      if (e.key === '/' && !e.ctrlKey && !e.metaKey && document.activeElement !== inputRef.current) {\n        e.preventDefault();\n        onToggleCardPanel();\n      }\n    };\n\n    document.addEventListener('keydown', handleKeyDown);\n    return () => document.removeEventListener('keydown', handleKeyDown);\n  }, [onToggleCardPanel]);\n\n  // 메시지 전송\n  const handleSendMessage = async () => {\n    if (!inputValue.trim() || isGenerating) return;\n\n    const userMessage = {\n      id: Date.now() + Math.random(),\n      type: 'user',\n      content: inputValue,\n      timestamp: new Date(),\n    };\n\n    setMessages(prev => [...prev, userMessage]);\n    setInputValue('');\n    setIsGenerating(true);\n\n    try {\n      // 오케스트레이션 실행\n      const response = await orchestrationAPI.executeOrchestration(\n        projectId,\n        inputValue,\n        {\n          useAllSteps: true,\n          enabledSteps: promptCards.filter(card => card.enabled).map(card => card.category),\n          maxRetries: 3,\n          temperature: 0.7\n        }\n      );\n\n      setCurrentExecution(response.executionId);\n\n      // 임시 로딩 메시지\n      const loadingMessage = {\n        id: 'loading-' + Date.now(),\n        type: 'assistant',\n        content: '🎯 AI가 제목을 생성하고 있습니다...\\n\\n단계별로 처리 중이니 잠시만 기다려주세요!',\n        timestamp: new Date(),\n        isLoading: true,\n      };\n\n      setMessages(prev => [...prev, loadingMessage]);\n\n      // 결과 폴링\n      pollOrchestrationResult(response.executionId);\n\n    } catch (error) {\n      console.error('메시지 전송 오류:', error);\n      \n      const errorMessage = {\n        id: 'error-' + Date.now(),\n        type: 'assistant',\n        content: '죄송합니다. 제목 생성 중 오류가 발생했습니다. 다시 시도해주세요.',\n        timestamp: new Date(),\n        isError: true,\n      };\n\n      setMessages(prev => [...prev, errorMessage]);\n      setIsGenerating(false);\n    }\n  };\n\n  // 오케스트레이션 결과 폴링\n  const pollOrchestrationResult = async (executionId) => {\n    const poll = async () => {\n      try {\n        const status = await orchestrationAPI.getOrchestrationStatus(projectId, executionId);\n        \n        if (status.status === 'COMPLETED') {\n          const result = await orchestrationAPI.getOrchestrationResult(projectId, executionId);\n          \n          // 최종 결과에서 제목들 추출\n          const titles = result.steps\n            ?.filter(step => step.output)\n            ?.map(step => step.output)\n            ?.slice(-3) || ['제목 생성 완료'];\n\n          const responseMessage = {\n            id: 'response-' + Date.now(),\n            type: 'assistant',\n            content: `✨ **생성된 제목 후보들입니다:**\\n\\n${titles.map((title, i) => `**${i + 1}.** ${title}`).join('\\n\\n')}\\n\\n원하시는 제목이 있으시거나 수정이 필요하시면 말씀해주세요!`,\n            timestamp: new Date(),\n            titles: titles,\n          };\n\n          // 로딩 메시지 제거하고 결과 메시지 추가\n          setMessages(prev => \n            prev.filter(msg => !msg.isLoading).concat([responseMessage])\n          );\n          setIsGenerating(false);\n          \n        } else if (status.status === 'FAILED') {\n          throw new Error('오케스트레이션 실패');\n        } else if (status.status === 'RUNNING') {\n          // 3초 후 다시 폴링\n          setTimeout(poll, 3000);\n        }\n      } catch (error) {\n        console.error('결과 조회 오류:', error);\n        \n        const errorMessage = {\n          id: 'error-' + Date.now(),\n          type: 'assistant',\n          content: '제목 생성 중 문제가 발생했습니다. 다시 시도해주세요.',\n          timestamp: new Date(),\n          isError: true,\n        };\n\n        setMessages(prev => \n          prev.filter(msg => !msg.isLoading).concat([errorMessage])\n        );\n        setIsGenerating(false);\n      }\n    };\n\n    poll();\n  };\n\n  // 메시지 복사\n  const copyMessage = (content) => {\n    navigator.clipboard.writeText(content);\n    toast.success('메시지가 복사되었습니다');\n  };\n\n  // 채팅 초기화\n  const clearChat = () => {\n    if (window.confirm('채팅 기록을 모두 삭제하시겠습니까?')) {\n      setMessages([\n        {\n          id: 'welcome',\n          type: 'assistant',\n          content: `안녕하세요! 저는 ${projectName}의 AI 제목 작가입니다. 🎯\\n\\n기사 내용을 입력해주시면 다양한 스타일의 제목을 제안해드릴게요. 제목을 수정하거나 다른 스타일로 바꾸고 싶으시면 언제든 말씀해주세요!`,\n          timestamp: new Date(),\n        }\n      ]);\n      toast.success('채팅 기록이 초기화되었습니다');\n    }\n  };\n\n  return (\n    <div className={`flex flex-col h-full bg-white ${className}`}>\n      {/* 채팅 헤더 */}\n      <div className=\"flex items-center justify-between p-4 border-b border-gray-200 bg-gray-50\">\n        <div className=\"flex items-center space-x-3\">\n          <div className=\"w-3 h-3 bg-green-500 rounded-full animate-pulse\"></div>\n          <h3 className=\"font-semibold text-gray-900\">AI 제목 작가</h3>\n          {!cardPanelVisible && (\n            <button\n              onClick={onToggleCardPanel}\n              className=\"text-xs text-blue-600 hover:text-blue-800 ml-2\"\n            >\n              카드 보기 ({promptCards.filter(c => c.enabled).length}개 활성)\n            </button>\n          )}\n        </div>\n        <div className=\"flex items-center space-x-2\">\n          <button\n            onClick={clearChat}\n            className=\"p-2 text-gray-400 hover:text-red-600 rounded-lg hover:bg-red-50 transition-colors\"\n            title=\"채팅 초기화\"\n          >\n            <TrashIcon className=\"h-4 w-4\" />\n          </button>\n        </div>\n      </div>\n\n      {/* 메시지 영역 */}\n      <div className=\"flex-1 overflow-y-auto p-4 space-y-4\">\n        {messages.map((message) => (\n          <div\n            key={message.id}\n            className={`flex ${message.type === 'user' ? 'justify-end' : 'justify-start'}`}\n          >\n            <div\n              className={`max-w-[80%] p-4 rounded-lg ${\n                message.type === 'user'\n                  ? 'bg-blue-600 text-white'\n                  : message.isError\n                  ? 'bg-red-50 text-red-800 border border-red-200'\n                  : message.isLoading\n                  ? 'bg-yellow-50 text-yellow-800 border border-yellow-200'\n                  : 'bg-gray-100 text-gray-800'\n              }`}\n            >\n              <div className=\"whitespace-pre-wrap break-words\">\n                {message.content}\n              </div>\n              \n              {/* 제목 복사 버튼들 */}\n              {message.titles && (\n                <div className=\"mt-3 flex flex-wrap gap-2\">\n                  {message.titles.map((title, index) => (\n                    <button\n                      key={index}\n                      onClick={() => copyMessage(title)}\n                      className=\"flex items-center px-2 py-1 bg-gray-200 hover:bg-gray-300 rounded text-xs text-gray-700 transition-colors\"\n                    >\n                      <DocumentDuplicateIcon className=\"h-3 w-3 mr-1\" />\n                      제목 {index + 1} 복사\n                    </button>\n                  ))}\n                </div>\n              )}\n              \n              <div className=\"text-xs opacity-70 mt-2\">\n                {message.timestamp.toLocaleTimeString('ko-KR', {\n                  hour: 'numeric',\n                  minute: '2-digit'\n                })}\n              </div>\n            </div>\n          </div>\n        ))}\n        <div ref={messagesEndRef} />\n      </div>\n\n      {/* 입력 영역 */}\n      <div className=\"p-4 border-t border-gray-200 bg-gray-50\">\n        <div className=\"flex space-x-3\">\n          <div className=\"flex-1 relative\">\n            <textarea\n              ref={inputRef}\n              value={inputValue}\n              onChange={(e) => setInputValue(e.target.value)}\n              onKeyDown={(e) => {\n                if (e.key === 'Enter' && !e.shiftKey) {\n                  e.preventDefault();\n                  handleSendMessage();\n                }\n              }}\n              placeholder=\"기사 내용을 입력하거나 제목 수정 요청을 해주세요...\"\n              rows={3}\n              className=\"w-full p-3 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500 resize-none\"\n              disabled={isGenerating}\n            />\n            <div className=\"flex items-center justify-between mt-2 text-xs text-gray-500\">\n              <span>{inputValue.length}/2000</span>\n              <span>Shift + Enter로 줄바꿈, Enter로 전송</span>\n            </div>\n          </div>\n          \n          <button\n            onClick={handleSendMessage}\n            disabled={!inputValue.trim() || isGenerating}\n            className={`flex items-center justify-center w-12 h-12 rounded-lg font-medium transition-colors ${\n              !inputValue.trim() || isGenerating\n                ? 'bg-gray-300 text-gray-500 cursor-not-allowed'\n                : 'bg-blue-600 text-white hover:bg-blue-700'\n            }`}\n          >\n            {isGenerating ? (\n              <ArrowPathIcon className=\"h-5 w-5 animate-spin\" />\n            ) : (\n              <PaperAirplaneIcon className=\"h-5 w-5\" />\n            )}\n          </button>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default ChatPanel;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,MAAM,EAAEC,SAAS,QAAQ,OAAO;AAC1D,SAASC,KAAK,QAAQ,iBAAiB;AACvC,SACEC,iBAAiB,EACjBC,aAAa,EACbC,qBAAqB,EACrBC,SAAS,QACJ,6BAA6B;AACpC,SAASC,gBAAgB,QAAQ,oBAAoB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEtD,MAAMC,SAAS,GAAGA,CAAC;EACjBC,SAAS;EACTC,WAAW;EACXC,WAAW,GAAG,EAAE;EAChBC,iBAAiB;EACjBC,gBAAgB;EAChBC,SAAS,GAAG;AACd,CAAC,KAAK;EAAAC,EAAA;EACJ,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGpB,QAAQ,CAAC,CACvC;IACEqB,EAAE,EAAE,SAAS;IACbC,IAAI,EAAE,WAAW;IACjBC,OAAO,EAAE,aAAaV,WAAW,iGAAiG;IAClIW,SAAS,EAAE,IAAIC,IAAI,CAAC;EACtB,CAAC,CACF,CAAC;EACF,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAG3B,QAAQ,CAAC,EAAE,CAAC;EAChD,MAAM,CAAC4B,YAAY,EAAEC,eAAe,CAAC,GAAG7B,QAAQ,CAAC,KAAK,CAAC;EACvD,MAAM,CAAC8B,gBAAgB,EAAEC,mBAAmB,CAAC,GAAG/B,QAAQ,CAAC,IAAI,CAAC;EAE9D,MAAMgC,cAAc,GAAG/B,MAAM,CAAC,IAAI,CAAC;EACnC,MAAMgC,QAAQ,GAAGhC,MAAM,CAAC,IAAI,CAAC;;EAE7B;EACA,MAAMiC,cAAc,GAAGA,CAAA,KAAM;IAAA,IAAAC,qBAAA;IAC3B,CAAAA,qBAAA,GAAAH,cAAc,CAACI,OAAO,cAAAD,qBAAA,uBAAtBA,qBAAA,CAAwBE,cAAc,CAAC;MAAEC,QAAQ,EAAE;IAAS,CAAC,CAAC;EAChE,CAAC;EAEDpC,SAAS,CAAC,MAAM;IACdgC,cAAc,CAAC,CAAC;EAClB,CAAC,EAAE,CAACf,QAAQ,CAAC,CAAC;;EAEd;EACAjB,SAAS,CAAC,MAAM;IACd,MAAMqC,aAAa,GAAIC,CAAC,IAAK;MAC3B;MACA,IAAI,CAACA,CAAC,CAACC,OAAO,IAAID,CAAC,CAACE,OAAO,KAAKF,CAAC,CAACG,GAAG,KAAK,GAAG,EAAE;QAAA,IAAAC,iBAAA;QAC7CJ,CAAC,CAACK,cAAc,CAAC,CAAC;QAClB9B,iBAAiB,CAAC,CAAC;QACnB,CAAA6B,iBAAA,GAAAX,QAAQ,CAACG,OAAO,cAAAQ,iBAAA,uBAAhBA,iBAAA,CAAkBE,KAAK,CAAC,CAAC;MAC3B;;MAEA;MACA,IAAIN,CAAC,CAACG,GAAG,KAAK,GAAG,IAAI,CAACH,CAAC,CAACC,OAAO,IAAI,CAACD,CAAC,CAACE,OAAO,IAAIK,QAAQ,CAACC,aAAa,KAAKf,QAAQ,CAACG,OAAO,EAAE;QAC5FI,CAAC,CAACK,cAAc,CAAC,CAAC;QAClB9B,iBAAiB,CAAC,CAAC;MACrB;IACF,CAAC;IAEDgC,QAAQ,CAACE,gBAAgB,CAAC,SAAS,EAAEV,aAAa,CAAC;IACnD,OAAO,MAAMQ,QAAQ,CAACG,mBAAmB,CAAC,SAAS,EAAEX,aAAa,CAAC;EACrE,CAAC,EAAE,CAACxB,iBAAiB,CAAC,CAAC;;EAEvB;EACA,MAAMoC,iBAAiB,GAAG,MAAAA,CAAA,KAAY;IACpC,IAAI,CAACzB,UAAU,CAAC0B,IAAI,CAAC,CAAC,IAAIxB,YAAY,EAAE;IAExC,MAAMyB,WAAW,GAAG;MAClBhC,EAAE,EAAEI,IAAI,CAAC6B,GAAG,CAAC,CAAC,GAAGC,IAAI,CAACC,MAAM,CAAC,CAAC;MAC9BlC,IAAI,EAAE,MAAM;MACZC,OAAO,EAAEG,UAAU;MACnBF,SAAS,EAAE,IAAIC,IAAI,CAAC;IACtB,CAAC;IAEDL,WAAW,CAACqC,IAAI,IAAI,CAAC,GAAGA,IAAI,EAAEJ,WAAW,CAAC,CAAC;IAC3C1B,aAAa,CAAC,EAAE,CAAC;IACjBE,eAAe,CAAC,IAAI,CAAC;IAErB,IAAI;MACF;MACA,MAAM6B,QAAQ,GAAG,MAAMlD,gBAAgB,CAACmD,oBAAoB,CAC1D/C,SAAS,EACTc,UAAU,EACV;QACEkC,WAAW,EAAE,IAAI;QACjBC,YAAY,EAAE/C,WAAW,CAACgD,MAAM,CAACC,IAAI,IAAIA,IAAI,CAACC,OAAO,CAAC,CAACC,GAAG,CAACF,IAAI,IAAIA,IAAI,CAACG,QAAQ,CAAC;QACjFC,UAAU,EAAE,CAAC;QACbC,WAAW,EAAE;MACf,CACF,CAAC;MAEDrC,mBAAmB,CAAC2B,QAAQ,CAACW,WAAW,CAAC;;MAEzC;MACA,MAAMC,cAAc,GAAG;QACrBjD,EAAE,EAAE,UAAU,GAAGI,IAAI,CAAC6B,GAAG,CAAC,CAAC;QAC3BhC,IAAI,EAAE,WAAW;QACjBC,OAAO,EAAE,oDAAoD;QAC7DC,SAAS,EAAE,IAAIC,IAAI,CAAC,CAAC;QACrB8C,SAAS,EAAE;MACb,CAAC;MAEDnD,WAAW,CAACqC,IAAI,IAAI,CAAC,GAAGA,IAAI,EAAEa,cAAc,CAAC,CAAC;;MAE9C;MACAE,uBAAuB,CAACd,QAAQ,CAACW,WAAW,CAAC;IAE/C,CAAC,CAAC,OAAOI,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,YAAY,EAAEA,KAAK,CAAC;MAElC,MAAME,YAAY,GAAG;QACnBtD,EAAE,EAAE,QAAQ,GAAGI,IAAI,CAAC6B,GAAG,CAAC,CAAC;QACzBhC,IAAI,EAAE,WAAW;QACjBC,OAAO,EAAE,uCAAuC;QAChDC,SAAS,EAAE,IAAIC,IAAI,CAAC,CAAC;QACrBmD,OAAO,EAAE;MACX,CAAC;MAEDxD,WAAW,CAACqC,IAAI,IAAI,CAAC,GAAGA,IAAI,EAAEkB,YAAY,CAAC,CAAC;MAC5C9C,eAAe,CAAC,KAAK,CAAC;IACxB;EACF,CAAC;;EAED;EACA,MAAM2C,uBAAuB,GAAG,MAAOH,WAAW,IAAK;IACrD,MAAMQ,IAAI,GAAG,MAAAA,CAAA,KAAY;MACvB,IAAI;QACF,MAAMC,MAAM,GAAG,MAAMtE,gBAAgB,CAACuE,sBAAsB,CAACnE,SAAS,EAAEyD,WAAW,CAAC;QAEpF,IAAIS,MAAM,CAACA,MAAM,KAAK,WAAW,EAAE;UAAA,IAAAE,aAAA,EAAAC,oBAAA,EAAAC,qBAAA;UACjC,MAAMC,MAAM,GAAG,MAAM3E,gBAAgB,CAAC4E,sBAAsB,CAACxE,SAAS,EAAEyD,WAAW,CAAC;;UAEpF;UACA,MAAMgB,MAAM,GAAG,EAAAL,aAAA,GAAAG,MAAM,CAACG,KAAK,cAAAN,aAAA,wBAAAC,oBAAA,GAAZD,aAAA,CACXlB,MAAM,CAACyB,IAAI,IAAIA,IAAI,CAACC,MAAM,CAAC,cAAAP,oBAAA,wBAAAC,qBAAA,GADhBD,oBAAA,CAEXhB,GAAG,CAACsB,IAAI,IAAIA,IAAI,CAACC,MAAM,CAAC,cAAAN,qBAAA,uBAFbA,qBAAA,CAGXO,KAAK,CAAC,CAAC,CAAC,CAAC,KAAI,CAAC,UAAU,CAAC;UAE7B,MAAMC,eAAe,GAAG;YACtBrE,EAAE,EAAE,WAAW,GAAGI,IAAI,CAAC6B,GAAG,CAAC,CAAC;YAC5BhC,IAAI,EAAE,WAAW;YACjBC,OAAO,EAAE,2BAA2B8D,MAAM,CAACpB,GAAG,CAAC,CAAC0B,KAAK,EAAEC,CAAC,KAAK,KAAKA,CAAC,GAAG,CAAC,OAAOD,KAAK,EAAE,CAAC,CAACE,IAAI,CAAC,MAAM,CAAC,sCAAsC;YACzIrE,SAAS,EAAE,IAAIC,IAAI,CAAC,CAAC;YACrB4D,MAAM,EAAEA;UACV,CAAC;;UAED;UACAjE,WAAW,CAACqC,IAAI,IACdA,IAAI,CAACK,MAAM,CAACgC,GAAG,IAAI,CAACA,GAAG,CAACvB,SAAS,CAAC,CAACwB,MAAM,CAAC,CAACL,eAAe,CAAC,CAC7D,CAAC;UACD7D,eAAe,CAAC,KAAK,CAAC;QAExB,CAAC,MAAM,IAAIiD,MAAM,CAACA,MAAM,KAAK,QAAQ,EAAE;UACrC,MAAM,IAAIkB,KAAK,CAAC,YAAY,CAAC;QAC/B,CAAC,MAAM,IAAIlB,MAAM,CAACA,MAAM,KAAK,SAAS,EAAE;UACtC;UACAmB,UAAU,CAACpB,IAAI,EAAE,IAAI,CAAC;QACxB;MACF,CAAC,CAAC,OAAOJ,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,WAAW,EAAEA,KAAK,CAAC;QAEjC,MAAME,YAAY,GAAG;UACnBtD,EAAE,EAAE,QAAQ,GAAGI,IAAI,CAAC6B,GAAG,CAAC,CAAC;UACzBhC,IAAI,EAAE,WAAW;UACjBC,OAAO,EAAE,gCAAgC;UACzCC,SAAS,EAAE,IAAIC,IAAI,CAAC,CAAC;UACrBmD,OAAO,EAAE;QACX,CAAC;QAEDxD,WAAW,CAACqC,IAAI,IACdA,IAAI,CAACK,MAAM,CAACgC,GAAG,IAAI,CAACA,GAAG,CAACvB,SAAS,CAAC,CAACwB,MAAM,CAAC,CAACpB,YAAY,CAAC,CAC1D,CAAC;QACD9C,eAAe,CAAC,KAAK,CAAC;MACxB;IACF,CAAC;IAEDgD,IAAI,CAAC,CAAC;EACR,CAAC;;EAED;EACA,MAAMqB,WAAW,GAAI3E,OAAO,IAAK;IAC/B4E,SAAS,CAACC,SAAS,CAACC,SAAS,CAAC9E,OAAO,CAAC;IACtCpB,KAAK,CAACmG,OAAO,CAAC,cAAc,CAAC;EAC/B,CAAC;;EAED;EACA,MAAMC,SAAS,GAAGA,CAAA,KAAM;IACtB,IAAIC,MAAM,CAACC,OAAO,CAAC,qBAAqB,CAAC,EAAE;MACzCrF,WAAW,CAAC,CACV;QACEC,EAAE,EAAE,SAAS;QACbC,IAAI,EAAE,WAAW;QACjBC,OAAO,EAAE,aAAaV,WAAW,iGAAiG;QAClIW,SAAS,EAAE,IAAIC,IAAI,CAAC;MACtB,CAAC,CACF,CAAC;MACFtB,KAAK,CAACmG,OAAO,CAAC,iBAAiB,CAAC;IAClC;EACF,CAAC;EAED,oBACE5F,OAAA;IAAKO,SAAS,EAAE,iCAAiCA,SAAS,EAAG;IAAAyF,QAAA,gBAE3DhG,OAAA;MAAKO,SAAS,EAAC,2EAA2E;MAAAyF,QAAA,gBACxFhG,OAAA;QAAKO,SAAS,EAAC,6BAA6B;QAAAyF,QAAA,gBAC1ChG,OAAA;UAAKO,SAAS,EAAC;QAAiD;UAAA0F,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAM,CAAC,eACvEpG,OAAA;UAAIO,SAAS,EAAC,6BAA6B;UAAAyF,QAAA,EAAC;QAAQ;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,EACxD,CAAC9F,gBAAgB,iBAChBN,OAAA;UACEqG,OAAO,EAAEhG,iBAAkB;UAC3BE,SAAS,EAAC,gDAAgD;UAAAyF,QAAA,GAC3D,6BACQ,EAAC5F,WAAW,CAACgD,MAAM,CAACkD,CAAC,IAAIA,CAAC,CAAChD,OAAO,CAAC,CAACiD,MAAM,EAAC,sBACpD;QAAA;UAAAN,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CACT;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACE,CAAC,eACNpG,OAAA;QAAKO,SAAS,EAAC,6BAA6B;QAAAyF,QAAA,eAC1ChG,OAAA;UACEqG,OAAO,EAAER,SAAU;UACnBtF,SAAS,EAAC,mFAAmF;UAC7F0E,KAAK,EAAC,iCAAQ;UAAAe,QAAA,eAEdhG,OAAA,CAACH,SAAS;YAACU,SAAS,EAAC;UAAS;YAAA0F,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC3B;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACN,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC,eAGNpG,OAAA;MAAKO,SAAS,EAAC,sCAAsC;MAAAyF,QAAA,GAClDvF,QAAQ,CAAC8C,GAAG,CAAEiD,OAAO,iBACpBxG,OAAA;QAEEO,SAAS,EAAE,QAAQiG,OAAO,CAAC5F,IAAI,KAAK,MAAM,GAAG,aAAa,GAAG,eAAe,EAAG;QAAAoF,QAAA,eAE/EhG,OAAA;UACEO,SAAS,EAAE,8BACTiG,OAAO,CAAC5F,IAAI,KAAK,MAAM,GACnB,wBAAwB,GACxB4F,OAAO,CAACtC,OAAO,GACf,8CAA8C,GAC9CsC,OAAO,CAAC3C,SAAS,GACjB,uDAAuD,GACvD,2BAA2B,EAC9B;UAAAmC,QAAA,gBAEHhG,OAAA;YAAKO,SAAS,EAAC,iCAAiC;YAAAyF,QAAA,EAC7CQ,OAAO,CAAC3F;UAAO;YAAAoF,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACb,CAAC,EAGLI,OAAO,CAAC7B,MAAM,iBACb3E,OAAA;YAAKO,SAAS,EAAC,2BAA2B;YAAAyF,QAAA,EACvCQ,OAAO,CAAC7B,MAAM,CAACpB,GAAG,CAAC,CAAC0B,KAAK,EAAEwB,KAAK,kBAC/BzG,OAAA;cAEEqG,OAAO,EAAEA,CAAA,KAAMb,WAAW,CAACP,KAAK,CAAE;cAClC1E,SAAS,EAAC,2GAA2G;cAAAyF,QAAA,gBAErHhG,OAAA,CAACJ,qBAAqB;gBAACW,SAAS,EAAC;cAAc;gBAAA0F,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAE,CAAC,iBAC/C,EAACK,KAAK,GAAG,CAAC,EAAC,eAChB;YAAA,GANOA,KAAK;cAAAR,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAMJ,CACT;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACC,CACN,eAEDpG,OAAA;YAAKO,SAAS,EAAC,yBAAyB;YAAAyF,QAAA,EACrCQ,OAAO,CAAC1F,SAAS,CAAC4F,kBAAkB,CAAC,OAAO,EAAE;cAC7CC,IAAI,EAAE,SAAS;cACfC,MAAM,EAAE;YACV,CAAC;UAAC;YAAAX,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACC,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACH;MAAC,GAxCDI,OAAO,CAAC7F,EAAE;QAAAsF,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAyCZ,CACN,CAAC,eACFpG,OAAA;QAAK6G,GAAG,EAAEvF;MAAe;QAAA2E,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACzB,CAAC,eAGNpG,OAAA;MAAKO,SAAS,EAAC,yCAAyC;MAAAyF,QAAA,eACtDhG,OAAA;QAAKO,SAAS,EAAC,gBAAgB;QAAAyF,QAAA,gBAC7BhG,OAAA;UAAKO,SAAS,EAAC,iBAAiB;UAAAyF,QAAA,gBAC9BhG,OAAA;YACE6G,GAAG,EAAEtF,QAAS;YACduF,KAAK,EAAE9F,UAAW;YAClB+F,QAAQ,EAAGjF,CAAC,IAAKb,aAAa,CAACa,CAAC,CAACkF,MAAM,CAACF,KAAK,CAAE;YAC/CG,SAAS,EAAGnF,CAAC,IAAK;cAChB,IAAIA,CAAC,CAACG,GAAG,KAAK,OAAO,IAAI,CAACH,CAAC,CAACoF,QAAQ,EAAE;gBACpCpF,CAAC,CAACK,cAAc,CAAC,CAAC;gBAClBM,iBAAiB,CAAC,CAAC;cACrB;YACF,CAAE;YACF0E,WAAW,EAAC,yIAAgC;YAC5CC,IAAI,EAAE,CAAE;YACR7G,SAAS,EAAC,8GAA8G;YACxH8G,QAAQ,EAAEnG;UAAa;YAAA+E,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACxB,CAAC,eACFpG,OAAA;YAAKO,SAAS,EAAC,8DAA8D;YAAAyF,QAAA,gBAC3EhG,OAAA;cAAAgG,QAAA,GAAOhF,UAAU,CAACuF,MAAM,EAAC,OAAK;YAAA;cAAAN,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAM,CAAC,eACrCpG,OAAA;cAAAgG,QAAA,EAAM;YAA6B;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAM,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACvC,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACH,CAAC,eAENpG,OAAA;UACEqG,OAAO,EAAE5D,iBAAkB;UAC3B4E,QAAQ,EAAE,CAACrG,UAAU,CAAC0B,IAAI,CAAC,CAAC,IAAIxB,YAAa;UAC7CX,SAAS,EAAE,uFACT,CAACS,UAAU,CAAC0B,IAAI,CAAC,CAAC,IAAIxB,YAAY,GAC9B,8CAA8C,GAC9C,0CAA0C,EAC7C;UAAA8E,QAAA,EAEF9E,YAAY,gBACXlB,OAAA,CAACL,aAAa;YAACY,SAAS,EAAC;UAAsB;YAAA0F,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE,CAAC,gBAElDpG,OAAA,CAACN,iBAAiB;YAACa,SAAS,EAAC;UAAS;YAAA0F,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE;QACzC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACK,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACN;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAAC5F,EAAA,CAvTIP,SAAS;AAAAqH,EAAA,GAATrH,SAAS;AAyTf,eAAeA,SAAS;AAAC,IAAAqH,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}