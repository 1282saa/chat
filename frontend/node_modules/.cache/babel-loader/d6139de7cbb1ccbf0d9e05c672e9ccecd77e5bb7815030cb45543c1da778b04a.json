{"ast":null,"code":"import{useCallback}from\"react\";import{useApp}from\"../contexts/AppContext\";import{projectAPI,handleAPIError}from\"../services/api\";import{toast}from\"react-hot-toast\";export const useProjects=()=>{const{state,actions}=useApp();// 프로젝트 목록 로드\nconst loadProjects=useCallback(async()=>{try{actions.setLoading(true);const data=await projectAPI.getProjects();actions.setProjects(data.projects||[]);}catch(error){const errorInfo=handleAPIError(error);actions.setError(errorInfo.message);toast.error(errorInfo.message);}},[actions]);// 프로젝트 생성\nconst createProject=useCallback(async projectData=>{try{actions.setLoading(true);const newProject=await projectAPI.createProject(projectData);actions.addProject(newProject);toast.success(\"프로젝트가 생성되었습니다\");return newProject;}catch(error){const errorInfo=handleAPIError(error);actions.setError(errorInfo.message);toast.error(errorInfo.message);throw error;}},[actions]);// 프로젝트 조회\nconst getProject=useCallback(async projectId=>{try{actions.setLoading(true);const project=await projectAPI.getProject(projectId);actions.setCurrentProject(project);return project;}catch(error){const errorInfo=handleAPIError(error);actions.setError(errorInfo.message);toast.error(errorInfo.message);throw error;}},[actions]);// 프로젝트 삭제\nconst deleteProject=useCallback(async projectId=>{try{actions.setLoading(true);await projectAPI.deleteProject(projectId);actions.removeProject(projectId);toast.success(\"프로젝트가 삭제되었습니다\");}catch(error){const errorInfo=handleAPIError(error);actions.setError(errorInfo.message);toast.error(errorInfo.message);}},[actions]);return{projects:state.projects,currentProject:state.currentProject,loading:state.loading,error:state.error,loadProjects,createProject,getProject,deleteProject};};","map":{"version":3,"names":["useCallback","useApp","projectAPI","handleAPIError","toast","useProjects","state","actions","loadProjects","setLoading","data","getProjects","setProjects","projects","error","errorInfo","setError","message","createProject","projectData","newProject","addProject","success","getProject","projectId","project","setCurrentProject","deleteProject","removeProject","currentProject","loading"],"sources":["/Users/yeong-gwang/Documents/work/서울경제신문/ai_제목달기/frontend/src/hooks/useProjects.js"],"sourcesContent":["import { useCallback } from \"react\";\nimport { useApp } from \"../contexts/AppContext\";\nimport { projectAPI, handleAPIError } from \"../services/api\";\nimport { toast } from \"react-hot-toast\";\n\nexport const useProjects = () => {\n  const { state, actions } = useApp();\n\n  // 프로젝트 목록 로드\n  const loadProjects = useCallback(async () => {\n    try {\n      actions.setLoading(true);\n      const data = await projectAPI.getProjects();\n      actions.setProjects(data.projects || []);\n    } catch (error) {\n      const errorInfo = handleAPIError(error);\n      actions.setError(errorInfo.message);\n      toast.error(errorInfo.message);\n    }\n  }, [actions]);\n\n  // 프로젝트 생성\n  const createProject = useCallback(\n    async (projectData) => {\n      try {\n        actions.setLoading(true);\n        const newProject = await projectAPI.createProject(projectData);\n        actions.addProject(newProject);\n        toast.success(\"프로젝트가 생성되었습니다\");\n        return newProject;\n      } catch (error) {\n        const errorInfo = handleAPIError(error);\n        actions.setError(errorInfo.message);\n        toast.error(errorInfo.message);\n        throw error;\n      }\n    },\n    [actions]\n  );\n\n  // 프로젝트 조회\n  const getProject = useCallback(\n    async (projectId) => {\n      try {\n        actions.setLoading(true);\n        const project = await projectAPI.getProject(projectId);\n        actions.setCurrentProject(project);\n        return project;\n      } catch (error) {\n        const errorInfo = handleAPIError(error);\n        actions.setError(errorInfo.message);\n        toast.error(errorInfo.message);\n        throw error;\n      }\n    },\n    [actions]\n  );\n\n  // 프로젝트 삭제\n  const deleteProject = useCallback(\n    async (projectId) => {\n      try {\n        actions.setLoading(true);\n        await projectAPI.deleteProject(projectId);\n        actions.removeProject(projectId);\n        toast.success(\"프로젝트가 삭제되었습니다\");\n      } catch (error) {\n        const errorInfo = handleAPIError(error);\n        actions.setError(errorInfo.message);\n        toast.error(errorInfo.message);\n      }\n    },\n    [actions]\n  );\n\n  return {\n    projects: state.projects,\n    currentProject: state.currentProject,\n    loading: state.loading,\n    error: state.error,\n    loadProjects,\n    createProject,\n    getProject,\n    deleteProject,\n  };\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}