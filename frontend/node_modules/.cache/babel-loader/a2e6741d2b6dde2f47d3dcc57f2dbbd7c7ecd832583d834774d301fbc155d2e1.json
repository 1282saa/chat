{"ast":null,"code":"import{useState,useEffect,useRef,useCallback}from\"react\";import{toast}from\"react-hot-toast\";import{copyToClipboard}from\"../utils/clipboard\";import{useOrchestration}from\"./useOrchestration\";/**\n * 채팅 기능을 위한 커스텀 훅\n * @param {string} projectId - 프로젝트 ID\n * @param {string} projectName - 프로젝트 이름\n * @param {Array} promptCards - 프롬프트 카드 배열\n * @returns {Object} - 채팅 관련 상태와 함수들\n */export const useChat=function(projectId,projectName){let promptCards=arguments.length>2&&arguments[2]!==undefined?arguments[2]:[];const[messages,setMessages]=useState([]);const[inputValue,setInputValue]=useState(\"\");const[copiedMessage,setCopiedMessage]=useState(null);const messagesEndRef=useRef(null);const inputRef=useRef(null);const{isExecuting:isGenerating,executeOrchestration,pollOrchestrationResult,resetOrchestration}=useOrchestration(projectId);// 초기 환영 메시지 설정 - 제거됨 (빈 상태로 시작)\nuseEffect(()=>{setMessages([]);// 빈 배열로 시작\n},[projectName]);// 메시지 추가 시 스크롤 하단으로\nuseEffect(()=>{scrollToBottom();},[messages]);const scrollToBottom=useCallback(()=>{var _messagesEndRef$curre;(_messagesEndRef$curre=messagesEndRef.current)===null||_messagesEndRef$curre===void 0?void 0:_messagesEndRef$curre.scrollIntoView({behavior:\"smooth\"});},[]);/**\n   * 메시지 전송\n   */const handleSendMessage=useCallback(async()=>{if(!inputValue.trim()||isGenerating)return;const userMessage={id:Date.now()+Math.random(),type:\"user\",content:inputValue,timestamp:new Date()};setMessages(prev=>[...prev,userMessage]);const currentInput=inputValue;setInputValue(\"\");try{// 로딩 메시지 추가 - 일반화된 메시지로 변경\nconst loadingMessage={id:\"loading-\"+Date.now(),type:\"assistant\",content:\"처리 중입니다...\",timestamp:new Date(),isLoading:true};setMessages(prev=>[...prev,loadingMessage]);// 오케스트레이션 실행\nconst result=await executeOrchestration(currentInput,{enabledSteps:promptCards.filter(card=>card.enabled).map(card=>card.category)});if(result&&result.result){// guidance 모드인지 확인 (100자 미만 입력 시)\nif(result.guidance||result.mode===\"guidance\"){const guidanceMessage={id:\"guidance-\"+Date.now(),type:\"assistant\",content:result.result,timestamp:new Date(),isGuidance:true,inputLength:result.input_length,recommendedLength:result.recommended_length};setMessages(prev=>prev.filter(msg=>!msg.isLoading).concat([guidanceMessage]));return;}// 정상적인 제목 생성 결과 처리\nconst titleText=result.result;// 번호가 매겨진 제목들을 파싱\nconst titles=titleText.split(\"\\n\").map(line=>line.trim()).filter(line=>line&&/^\\d+\\./.test(line)).map(line=>line.replace(/^\\d+\\.\\s*/,\"\")).slice(0,5);// 최대 5개\nconst responseMessage={id:\"response-\"+Date.now(),type:\"assistant\",content:`**생성된 제목 후보들입니다:**\\n\\n${titles.map((title,i)=>`**${i+1}.** ${title}`).join(\"\\n\\n\")}\\n\\n원하시는 제목이 있으시거나 수정이 필요하시면 말씀해주세요!`,timestamp:new Date(),titles:titles};// 로딩 메시지 제거하고 결과 메시지 추가\nsetMessages(prev=>prev.filter(msg=>!msg.isLoading).concat([responseMessage]));}else{// 결과가 없는 경우 에러 처리\nconsole.error(\"AI 응답 오류: 결과가 없습니다\",result);const errorMessage={id:\"error-\"+Date.now(),type:\"assistant\",content:\"처리 중 오류가 발생했습니다. 다시 시도해주세요.\",timestamp:new Date(),isError:true};setMessages(prev=>prev.filter(msg=>!msg.isLoading).concat([errorMessage]));}}catch(error){console.error(\"메시지 전송 실패:\",error);const errorMessage={id:\"error-\"+Date.now(),type:\"assistant\",content:\"메시지 처리 중 오류가 발생했습니다. 다시 시도해주세요.\",timestamp:new Date(),isError:true};setMessages(prev=>prev.filter(msg=>!msg.isLoading).concat([errorMessage]));}},[inputValue,isGenerating,executeOrchestration,pollOrchestrationResult,promptCards]);/**\n   * Enter 키로 전송\n   */const handleKeyPress=useCallback(e=>{if(e.key===\"Enter\"&&!e.shiftKey){e.preventDefault();handleSendMessage();}},[handleSendMessage]);/**\n   * 메시지 복사\n   */const handleCopyMessage=useCallback(async(content,messageId)=>{const success=await copyToClipboard(content);if(success){setCopiedMessage(messageId);setTimeout(()=>setCopiedMessage(null),2000);}},[]);/**\n   * 개별 제목 복사\n   */const handleCopyTitle=useCallback(async(title,messageId,index)=>{const success=await copyToClipboard(title,\"복사되었습니다!\");if(success){setCopiedMessage(`${messageId}_title_${index}`);setTimeout(()=>setCopiedMessage(null),2000);}},[]);/**\n   * 채팅 초기화\n   */const resetChat=useCallback(()=>{setMessages([]);setInputValue(\"\");setCopiedMessage(null);resetOrchestration();},[resetOrchestration]);return{messages,inputValue,setInputValue,copiedMessage,isGenerating,messagesEndRef,inputRef,handleSendMessage,handleKeyPress,handleCopyMessage,handleCopyTitle,resetChat,scrollToBottom};};","map":{"version":3,"names":["useState","useEffect","useRef","useCallback","toast","copyToClipboard","useOrchestration","useChat","projectId","projectName","promptCards","arguments","length","undefined","messages","setMessages","inputValue","setInputValue","copiedMessage","setCopiedMessage","messagesEndRef","inputRef","isExecuting","isGenerating","executeOrchestration","pollOrchestrationResult","resetOrchestration","scrollToBottom","_messagesEndRef$curre","current","scrollIntoView","behavior","handleSendMessage","trim","userMessage","id","Date","now","Math","random","type","content","timestamp","prev","currentInput","loadingMessage","isLoading","result","enabledSteps","filter","card","enabled","map","category","guidance","mode","guidanceMessage","isGuidance","inputLength","input_length","recommendedLength","recommended_length","msg","concat","titleText","titles","split","line","test","replace","slice","responseMessage","title","i","join","console","error","errorMessage","isError","handleKeyPress","e","key","shiftKey","preventDefault","handleCopyMessage","messageId","success","setTimeout","handleCopyTitle","index","resetChat"],"sources":["/Users/yeong-gwang/Documents/work/서울경제신문/ai_제목달기/frontend/src/hooks/useChat.js"],"sourcesContent":["import { useState, useEffect, useRef, useCallback } from \"react\";\nimport { toast } from \"react-hot-toast\";\nimport { copyToClipboard } from \"../utils/clipboard\";\nimport { useOrchestration } from \"./useOrchestration\";\n\n/**\n * 채팅 기능을 위한 커스텀 훅\n * @param {string} projectId - 프로젝트 ID\n * @param {string} projectName - 프로젝트 이름\n * @param {Array} promptCards - 프롬프트 카드 배열\n * @returns {Object} - 채팅 관련 상태와 함수들\n */\nexport const useChat = (projectId, projectName, promptCards = []) => {\n  const [messages, setMessages] = useState([]);\n  const [inputValue, setInputValue] = useState(\"\");\n  const [copiedMessage, setCopiedMessage] = useState(null);\n\n  const messagesEndRef = useRef(null);\n  const inputRef = useRef(null);\n\n  const {\n    isExecuting: isGenerating,\n    executeOrchestration,\n    pollOrchestrationResult,\n    resetOrchestration,\n  } = useOrchestration(projectId);\n\n  // 초기 환영 메시지 설정 - 제거됨 (빈 상태로 시작)\n  useEffect(() => {\n    setMessages([]); // 빈 배열로 시작\n  }, [projectName]);\n\n  // 메시지 추가 시 스크롤 하단으로\n  useEffect(() => {\n    scrollToBottom();\n  }, [messages]);\n\n  const scrollToBottom = useCallback(() => {\n    messagesEndRef.current?.scrollIntoView({ behavior: \"smooth\" });\n  }, []);\n\n  /**\n   * 메시지 전송\n   */\n  const handleSendMessage = useCallback(async () => {\n    if (!inputValue.trim() || isGenerating) return;\n\n    const userMessage = {\n      id: Date.now() + Math.random(),\n      type: \"user\",\n      content: inputValue,\n      timestamp: new Date(),\n    };\n\n    setMessages((prev) => [...prev, userMessage]);\n    const currentInput = inputValue;\n    setInputValue(\"\");\n\n    try {\n      // 로딩 메시지 추가 - 일반화된 메시지로 변경\n      const loadingMessage = {\n        id: \"loading-\" + Date.now(),\n        type: \"assistant\",\n        content: \"처리 중입니다...\",\n        timestamp: new Date(),\n        isLoading: true,\n      };\n\n      setMessages((prev) => [...prev, loadingMessage]);\n\n      // 오케스트레이션 실행\n      const result = await executeOrchestration(currentInput, {\n        enabledSteps: promptCards\n          .filter((card) => card.enabled)\n          .map((card) => card.category),\n      });\n\n      if (result && result.result) {\n        // guidance 모드인지 확인 (100자 미만 입력 시)\n        if (result.guidance || result.mode === \"guidance\") {\n          const guidanceMessage = {\n            id: \"guidance-\" + Date.now(),\n            type: \"assistant\",\n            content: result.result,\n            timestamp: new Date(),\n            isGuidance: true,\n            inputLength: result.input_length,\n            recommendedLength: result.recommended_length,\n          };\n\n          setMessages((prev) =>\n            prev.filter((msg) => !msg.isLoading).concat([guidanceMessage])\n          );\n          return;\n        }\n\n        // 정상적인 제목 생성 결과 처리\n        const titleText = result.result;\n\n        // 번호가 매겨진 제목들을 파싱\n        const titles = titleText\n          .split(\"\\n\")\n          .map((line) => line.trim())\n          .filter((line) => line && /^\\d+\\./.test(line))\n          .map((line) => line.replace(/^\\d+\\.\\s*/, \"\"))\n          .slice(0, 5); // 최대 5개\n\n        const responseMessage = {\n          id: \"response-\" + Date.now(),\n          type: \"assistant\",\n          content: `**생성된 제목 후보들입니다:**\\n\\n${titles\n            .map((title, i) => `**${i + 1}.** ${title}`)\n            .join(\n              \"\\n\\n\"\n            )}\\n\\n원하시는 제목이 있으시거나 수정이 필요하시면 말씀해주세요!`,\n          timestamp: new Date(),\n          titles: titles,\n        };\n\n        // 로딩 메시지 제거하고 결과 메시지 추가\n        setMessages((prev) =>\n          prev.filter((msg) => !msg.isLoading).concat([responseMessage])\n        );\n      } else {\n        // 결과가 없는 경우 에러 처리\n        console.error(\"AI 응답 오류: 결과가 없습니다\", result);\n\n        const errorMessage = {\n          id: \"error-\" + Date.now(),\n          type: \"assistant\",\n          content: \"처리 중 오류가 발생했습니다. 다시 시도해주세요.\",\n          timestamp: new Date(),\n          isError: true,\n        };\n\n        setMessages((prev) =>\n          prev.filter((msg) => !msg.isLoading).concat([errorMessage])\n        );\n      }\n    } catch (error) {\n      console.error(\"메시지 전송 실패:\", error);\n\n      const errorMessage = {\n        id: \"error-\" + Date.now(),\n        type: \"assistant\",\n        content: \"메시지 처리 중 오류가 발생했습니다. 다시 시도해주세요.\",\n        timestamp: new Date(),\n        isError: true,\n      };\n\n      setMessages((prev) =>\n        prev.filter((msg) => !msg.isLoading).concat([errorMessage])\n      );\n    }\n  }, [\n    inputValue,\n    isGenerating,\n    executeOrchestration,\n    pollOrchestrationResult,\n    promptCards,\n  ]);\n\n  /**\n   * Enter 키로 전송\n   */\n  const handleKeyPress = useCallback(\n    (e) => {\n      if (e.key === \"Enter\" && !e.shiftKey) {\n        e.preventDefault();\n        handleSendMessage();\n      }\n    },\n    [handleSendMessage]\n  );\n\n  /**\n   * 메시지 복사\n   */\n  const handleCopyMessage = useCallback(async (content, messageId) => {\n    const success = await copyToClipboard(content);\n    if (success) {\n      setCopiedMessage(messageId);\n      setTimeout(() => setCopiedMessage(null), 2000);\n    }\n  }, []);\n\n  /**\n   * 개별 제목 복사\n   */\n  const handleCopyTitle = useCallback(async (title, messageId, index) => {\n    const success = await copyToClipboard(title, \"복사되었습니다!\");\n    if (success) {\n      setCopiedMessage(`${messageId}_title_${index}`);\n      setTimeout(() => setCopiedMessage(null), 2000);\n    }\n  }, []);\n\n  /**\n   * 채팅 초기화\n   */\n  const resetChat = useCallback(() => {\n    setMessages([]);\n    setInputValue(\"\");\n    setCopiedMessage(null);\n    resetOrchestration();\n  }, [resetOrchestration]);\n\n  return {\n    messages,\n    inputValue,\n    setInputValue,\n    copiedMessage,\n    isGenerating,\n    messagesEndRef,\n    inputRef,\n    handleSendMessage,\n    handleKeyPress,\n    handleCopyMessage,\n    handleCopyTitle,\n    resetChat,\n    scrollToBottom,\n  };\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}