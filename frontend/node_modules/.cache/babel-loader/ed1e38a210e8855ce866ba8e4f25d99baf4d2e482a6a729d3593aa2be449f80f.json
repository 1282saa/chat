{"ast":null,"code":"var _jsxFileName = \"/Users/yeong-gwang/Documents/work/\\u1109\\u1165\\u110B\\u116E\\u11AF\\u1100\\u1167\\u11BC\\u110C\\u1166\\u1109\\u1175\\u11AB\\u1106\\u116E\\u11AB/ai_\\u110C\\u1166\\u1106\\u1169\\u11A8\\u1103\\u1161\\u11AF\\u1100\\u1175/frontend/src/components/PromptCardManager.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useCallback } from \"react\";\nimport { toast } from \"react-hot-toast\";\nimport { PlusIcon, Bars3Icon } from \"@heroicons/react/24/outline\";\nimport { promptCardAPI, handleAPIError } from \"../services/api\";\nimport ChatInterface from \"./ChatInterface\";\nimport PromptCard from \"./prompts/PromptCard\";\nimport PromptEditForm from \"./prompts/PromptEditForm\";\nimport { SidebarSkeleton } from \"./SkeletonLoader\";\n\n// 고정된 프롬프트 카테고리 템플릿\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst FIXED_PROMPT_CATEGORIES = [{\n  id: \"role\",\n  name: \"역할\",\n  order: 1,\n  color: \"bg-blue-100 text-blue-800\",\n  description: \"AI의 역할과 정체성을 정의합니다\",\n  defaultContent: \"당신은 서울경제신문의 전문 기사 제목 작성자입니다. 독자의 관심을 끌면서도 정확하고 신뢰할 수 있는 제목을 작성해주세요.\"\n}, {\n  id: \"guidelines\",\n  name: \"가이드라인\",\n  order: 2,\n  color: \"bg-purple-100 text-purple-800\",\n  description: \"제목 작성 시 따라야 할 기본 원칙들\",\n  defaultContent: \"제목 작성 가이드라인:\\n- 15-25자 내외로 간결하게\\n- 핵심 키워드를 앞쪽에 배치\\n- 감정적 어조보다는 사실적 표현 사용\\n- 독자의 호기심을 자극하는 표현 활용\"\n}, {\n  id: \"workflow\",\n  name: \"워크플로우\",\n  order: 3,\n  color: \"bg-green-100 text-green-800\",\n  description: \"제목 생성 과정과 절차\",\n  defaultContent: \"제목 생성 워크플로우:\\n1. 기사 내용의 핵심 메시지 파악\\n2. 주요 키워드 3-5개 추출\\n3. 독자 타겟층 고려\\n4. 3-5개의 제목 후보 생성\\n5. 최종 제목 선별 및 검토\"\n}, {\n  id: \"output_results\",\n  name: \"출력결과\",\n  order: 4,\n  color: \"bg-orange-100 text-orange-800\",\n  description: \"결과물의 형식과 구조\",\n  defaultContent: \"출력 형식:\\n- 메인 제목 1개 (추천)\\n- 대안 제목 2-3개\\n- 각 제목별 간단한 선택 이유\\n- 제목 길이와 키워드 분석\"\n}, {\n  id: \"examples\",\n  name: \"예시\",\n  order: 5,\n  color: \"bg-yellow-100 text-yellow-800\",\n  description: \"좋은 제목의 예시와 패턴\",\n  defaultContent: \"좋은 제목 예시:\\n- '삼성전자, 3분기 영업이익 10조원 돌파'\\n- '부동산 대출 규제 완화로 거래량 30% 증가'\\n- 'K-바이오 해외진출 가속화, 올해 수출 50% 급증'\"\n}, {\n  id: \"review\",\n  name: \"검수\",\n  order: 6,\n  color: \"bg-red-100 text-red-800\",\n  description: \"최종 검토 및 품질 확인\",\n  defaultContent: \"검수 체크리스트:\\n- 사실 관계 정확성 확인\\n- 문법 및 맞춤법 검토\\n- 브랜드 가이드라인 준수\\n- 독자 친화성 및 가독성\\n- SEO 최적화 고려\"\n}];\n\n// 프롬프트 편집 모달\nconst PromptEditModal = ({\n  isOpen,\n  onSubmit,\n  onCancel,\n  initialData\n}) => {\n  if (!isOpen) return null;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50 p-4\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bg-white rounded-xl shadow-xl w-full max-w-2xl max-h-[90vh] overflow-y-auto\",\n      children: /*#__PURE__*/_jsxDEV(PromptEditForm, {\n        onSubmit: onSubmit,\n        onCancel: onCancel,\n        initialData: initialData,\n        isModal: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 73,\n    columnNumber: 5\n  }, this);\n};\n_c = PromptEditModal;\nconst PromptCardManager = ({\n  projectId,\n  onCardsChanged,\n  projectName\n}) => {\n  _s();\n  // 상태 관리\n  const [promptCards, setPromptCards] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [showForm, setShowForm] = useState(false);\n  const [editingCard, setEditingCard] = useState(null);\n\n  // 프롬프트 카드 로드 및 기본 템플릿 생성\n  const loadPromptCards = useCallback(async () => {\n    try {\n      setLoading(true);\n      const response = await promptCardAPI.getPromptCards(projectId);\n\n      // API 응답 구조 확인 및 안전한 처리\n      let cards = [];\n      if (Array.isArray(response)) {\n        cards = response;\n      } else if (response && Array.isArray(response.promptCards)) {\n        cards = response.promptCards;\n      } else if (response && Array.isArray(response.data)) {\n        cards = response.data;\n      } else {\n        console.warn(\"Unexpected API response structure:\", response);\n        cards = [];\n      }\n\n      // 고정된 템플릿 카드들과 기존 카드들을 매칭\n      const templateCards = FIXED_PROMPT_CATEGORIES.map(template => {\n        const existingCard = cards.find(card => card.category === template.id);\n        if (existingCard) {\n          // 기존 카드가 있으면 해당 카드 사용\n          return {\n            ...existingCard,\n            ...template,\n            // 템플릿 정보로 덮어쓰기 (name, order, color, description)\n            title: existingCard.title || `${template.name} 프롬프트`,\n            prompt_text: existingCard.prompt_text || template.defaultContent\n          };\n        } else {\n          // 기존 카드가 없으면 템플릿으로 기본 카드 생성\n          return {\n            id: `template-${template.id}`,\n            promptId: `template-${template.id}`,\n            title: `${template.name} 프롬프트`,\n            category: template.id,\n            prompt_text: template.defaultContent,\n            model_name: \"claude-3-5-sonnet-20241022\",\n            temperature: 0.7,\n            enabled: true,\n            step_order: template.order,\n            isTemplate: true,\n            // 템플릿 카드임을 표시\n            ...template\n          };\n        }\n      });\n\n      // 순서대로 정렬\n      templateCards.sort((a, b) => (a.order || 999) - (b.order || 999));\n      setPromptCards(templateCards);\n    } catch (error) {\n      const errorInfo = handleAPIError(error);\n      toast.error(`프롬프트 카드 로딩 실패: ${errorInfo.message}`);\n\n      // 오류 시에도 기본 템플릿 카드들 표시\n      const defaultCards = FIXED_PROMPT_CATEGORIES.map(template => ({\n        id: `template-${template.id}`,\n        promptId: `template-${template.id}`,\n        title: `${template.name} 프롬프트`,\n        category: template.id,\n        prompt_text: template.defaultContent,\n        model_name: \"claude-3-5-sonnet-20241022\",\n        temperature: 0.7,\n        enabled: true,\n        step_order: template.order,\n        isTemplate: true,\n        ...template\n      }));\n      setPromptCards(defaultCards);\n    } finally {\n      setLoading(false);\n    }\n  }, [projectId]);\n  useEffect(() => {\n    loadPromptCards();\n  }, [loadPromptCards]);\n\n  // 카드 업데이트\n  const handleUpdateCard = async cardData => {\n    try {\n      if (editingCard && !editingCard.isTemplate) {\n        // 기존 카드 편집\n        await promptCardAPI.updatePromptCard(editingCard.promptId || editingCard.id, cardData);\n        toast.success(\"프롬프트 카드가 수정되었습니다!\");\n      } else if (editingCard && editingCard.isTemplate) {\n        // 템플릿 카드를 실제 카드로 생성\n        const newCardData = {\n          ...cardData,\n          category: editingCard.category,\n          step_order: editingCard.order\n        };\n        await promptCardAPI.createPromptCard(projectId, newCardData);\n        toast.success(\"프롬프트 카드가 생성되었습니다!\");\n      } else {\n        // 새 카드 생성\n        await promptCardAPI.createPromptCard(projectId, cardData);\n        toast.success(\"프롬프트 카드가 생성되었습니다!\");\n      }\n      await loadPromptCards();\n      setShowForm(false);\n      setEditingCard(null);\n      if (onCardsChanged) onCardsChanged();\n    } catch (error) {\n      const errorInfo = handleAPIError(error);\n      toast.error(`카드 ${editingCard ? \"수정\" : \"생성\"} 실패: ${errorInfo.message}`);\n    }\n  };\n\n  // 카드 토글 (최적화 UI)\n  const handleToggleCard = async (promptId, enabled) => {\n    // promptCards가 배열인지 확인\n    if (!Array.isArray(promptCards)) {\n      console.error(\"promptCards is not an array:\", promptCards);\n      return;\n    }\n\n    // 낙관적 업데이트: 즉시 UI 반영\n    const originalCards = [...promptCards];\n    const updatedCards = promptCards.map(card => (card.promptId || card.id) === promptId ? {\n      ...card,\n      enabled\n    } : card);\n    setPromptCards(updatedCards);\n    try {\n      // 템플릿 카드가 아닌 경우에만 API 호출\n      const card = promptCards.find(c => (c.promptId || c.id) === promptId);\n      if (card && !card.isTemplate) {\n        await promptCardAPI.updatePromptCard(promptId, {\n          enabled\n        });\n      }\n      if (onCardsChanged) onCardsChanged();\n    } catch (error) {\n      // 실패 시 복원\n      setPromptCards(originalCards);\n      const errorInfo = handleAPIError(error);\n      toast.error(`카드 상태 변경 실패: ${errorInfo.message}`);\n    }\n  };\n\n  // 카드 삭제 - 템플릿 카드는 삭제 불가\n  const handleDeleteCard = async promptId => {\n    const card = promptCards.find(c => (c.promptId || c.id) === promptId);\n    if (card && card.isTemplate) {\n      toast.error(\"기본 템플릿 카드는 삭제할 수 없습니다.\");\n      return;\n    }\n    if (!window.confirm(\"정말로 이 프롬프트 카드를 삭제하시겠습니까?\")) {\n      return;\n    }\n    try {\n      await promptCardAPI.deletePromptCard(projectId, promptId);\n      await loadPromptCards(); // 삭제 후 다시 로드하여 템플릿 카드로 복원\n      toast.success(\"프롬프트 카드가 삭제되었습니다!\");\n      if (onCardsChanged) onCardsChanged();\n    } catch (error) {\n      const errorInfo = handleAPIError(error);\n      toast.error(`카드 삭제 실패: ${errorInfo.message}`);\n    }\n  };\n\n  // 편집 모드 시작\n  const handleEditCard = card => {\n    setEditingCard(card);\n    setShowForm(true);\n  };\n\n  // 폼 취소\n  const handleCancelForm = () => {\n    setShowForm(false);\n    setEditingCard(null);\n  };\n\n  // promptCards가 배열인지 확인하고 안전하게 처리\n  const safePromptCards = Array.isArray(promptCards) ? promptCards : [];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flex h-screen bg-gray-50\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"w-80 bg-white border-r border-gray-200 flex flex-col\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"p-4 border-b border-gray-200\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex items-center justify-between\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            className: \"text-lg font-semibold text-gray-900\",\n            children: \"\\uD504\\uB86C\\uD504\\uD2B8 \\uD15C\\uD50C\\uB9BF\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 291,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"text-xs text-gray-500\",\n            children: [safePromptCards.filter(card => card.enabled).length, \"/\", safePromptCards.length, \" \\uD65C\\uC131\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 294,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 290,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 289,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex-1 overflow-y-auto p-4\",\n        children: loading ? /*#__PURE__*/_jsxDEV(SidebarSkeleton, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 304,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"space-y-3\",\n          children: safePromptCards.map((card, index) => /*#__PURE__*/_jsxDEV(PromptCard, {\n            card: card,\n            onEdit: handleEditCard,\n            onToggle: handleToggleCard,\n            onDelete: handleDeleteCard,\n            stepNumber: index + 1\n          }, card.promptId || card.id || index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 308,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 306,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 302,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"p-4 border-t border-gray-200 bg-gray-50\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"text-xs text-gray-600\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"font-medium mb-1\",\n            children: \"\\uD83D\\uDCA1 \\uACE0\\uC815 \\uD15C\\uD50C\\uB9BF \\uC2DC\\uC2A4\\uD15C\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 324,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"\\uAC01 \\uCE74\\uD14C\\uACE0\\uB9AC\\uBCC4 \\uD504\\uB86C\\uD504\\uD2B8\\uB97C \\uD3B8\\uC9D1\\uD558\\uC5EC AI \\uC751\\uB2F5\\uC744 \\uAC1C\\uC120\\uD558\\uC138\\uC694.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 325,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 323,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 322,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 287,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex-1 relative\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"absolute top-4 right-4 z-10\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"p-2 text-gray-500 hover:text-gray-700 hover:bg-white hover:shadow-md rounded-md transition-all\",\n          children: /*#__PURE__*/_jsxDEV(Bars3Icon, {\n            className: \"h-5 w-5\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 335,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 334,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 333,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ChatInterface, {\n        projectId: projectId,\n        projectName: projectName,\n        promptCards: safePromptCards\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 339,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 331,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(PromptEditModal, {\n      isOpen: showForm,\n      onSubmit: handleUpdateCard,\n      onCancel: handleCancelForm,\n      initialData: editingCard\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 347,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 285,\n    columnNumber: 5\n  }, this);\n};\n_s(PromptCardManager, \"AcIVqa/+sZ2PDglpPDcoGHWxABI=\");\n_c2 = PromptCardManager;\nexport default PromptCardManager;\nvar _c, _c2;\n$RefreshReg$(_c, \"PromptEditModal\");\n$RefreshReg$(_c2, \"PromptCardManager\");","map":{"version":3,"names":["React","useState","useEffect","useCallback","toast","PlusIcon","Bars3Icon","promptCardAPI","handleAPIError","ChatInterface","PromptCard","PromptEditForm","SidebarSkeleton","jsxDEV","_jsxDEV","FIXED_PROMPT_CATEGORIES","id","name","order","color","description","defaultContent","PromptEditModal","isOpen","onSubmit","onCancel","initialData","className","children","isModal","fileName","_jsxFileName","lineNumber","columnNumber","_c","PromptCardManager","projectId","onCardsChanged","projectName","_s","promptCards","setPromptCards","loading","setLoading","showForm","setShowForm","editingCard","setEditingCard","loadPromptCards","response","getPromptCards","cards","Array","isArray","data","console","warn","templateCards","map","template","existingCard","find","card","category","title","prompt_text","promptId","model_name","temperature","enabled","step_order","isTemplate","sort","a","b","error","errorInfo","message","defaultCards","handleUpdateCard","cardData","updatePromptCard","success","newCardData","createPromptCard","handleToggleCard","originalCards","updatedCards","c","handleDeleteCard","window","confirm","deletePromptCard","handleEditCard","handleCancelForm","safePromptCards","filter","length","index","onEdit","onToggle","onDelete","stepNumber","_c2","$RefreshReg$"],"sources":["/Users/yeong-gwang/Documents/work/서울경제신문/ai_제목달기/frontend/src/components/PromptCardManager.js"],"sourcesContent":["import React, { useState, useEffect, useCallback } from \"react\";\nimport { toast } from \"react-hot-toast\";\nimport { PlusIcon, Bars3Icon } from \"@heroicons/react/24/outline\";\nimport { promptCardAPI, handleAPIError } from \"../services/api\";\nimport ChatInterface from \"./ChatInterface\";\nimport PromptCard from \"./prompts/PromptCard\";\nimport PromptEditForm from \"./prompts/PromptEditForm\";\nimport { SidebarSkeleton } from \"./SkeletonLoader\";\n\n// 고정된 프롬프트 카테고리 템플릿\nconst FIXED_PROMPT_CATEGORIES = [\n  {\n    id: \"role\",\n    name: \"역할\",\n    order: 1,\n    color: \"bg-blue-100 text-blue-800\",\n    description: \"AI의 역할과 정체성을 정의합니다\",\n    defaultContent:\n      \"당신은 서울경제신문의 전문 기사 제목 작성자입니다. 독자의 관심을 끌면서도 정확하고 신뢰할 수 있는 제목을 작성해주세요.\",\n  },\n  {\n    id: \"guidelines\",\n    name: \"가이드라인\",\n    order: 2,\n    color: \"bg-purple-100 text-purple-800\",\n    description: \"제목 작성 시 따라야 할 기본 원칙들\",\n    defaultContent:\n      \"제목 작성 가이드라인:\\n- 15-25자 내외로 간결하게\\n- 핵심 키워드를 앞쪽에 배치\\n- 감정적 어조보다는 사실적 표현 사용\\n- 독자의 호기심을 자극하는 표현 활용\",\n  },\n  {\n    id: \"workflow\",\n    name: \"워크플로우\",\n    order: 3,\n    color: \"bg-green-100 text-green-800\",\n    description: \"제목 생성 과정과 절차\",\n    defaultContent:\n      \"제목 생성 워크플로우:\\n1. 기사 내용의 핵심 메시지 파악\\n2. 주요 키워드 3-5개 추출\\n3. 독자 타겟층 고려\\n4. 3-5개의 제목 후보 생성\\n5. 최종 제목 선별 및 검토\",\n  },\n  {\n    id: \"output_results\",\n    name: \"출력결과\",\n    order: 4,\n    color: \"bg-orange-100 text-orange-800\",\n    description: \"결과물의 형식과 구조\",\n    defaultContent:\n      \"출력 형식:\\n- 메인 제목 1개 (추천)\\n- 대안 제목 2-3개\\n- 각 제목별 간단한 선택 이유\\n- 제목 길이와 키워드 분석\",\n  },\n  {\n    id: \"examples\",\n    name: \"예시\",\n    order: 5,\n    color: \"bg-yellow-100 text-yellow-800\",\n    description: \"좋은 제목의 예시와 패턴\",\n    defaultContent:\n      \"좋은 제목 예시:\\n- '삼성전자, 3분기 영업이익 10조원 돌파'\\n- '부동산 대출 규제 완화로 거래량 30% 증가'\\n- 'K-바이오 해외진출 가속화, 올해 수출 50% 급증'\",\n  },\n  {\n    id: \"review\",\n    name: \"검수\",\n    order: 6,\n    color: \"bg-red-100 text-red-800\",\n    description: \"최종 검토 및 품질 확인\",\n    defaultContent:\n      \"검수 체크리스트:\\n- 사실 관계 정확성 확인\\n- 문법 및 맞춤법 검토\\n- 브랜드 가이드라인 준수\\n- 독자 친화성 및 가독성\\n- SEO 최적화 고려\",\n  },\n];\n\n// 프롬프트 편집 모달\nconst PromptEditModal = ({ isOpen, onSubmit, onCancel, initialData }) => {\n  if (!isOpen) return null;\n\n  return (\n    <div className=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50 p-4\">\n      <div className=\"bg-white rounded-xl shadow-xl w-full max-w-2xl max-h-[90vh] overflow-y-auto\">\n        <PromptEditForm\n          onSubmit={onSubmit}\n          onCancel={onCancel}\n          initialData={initialData}\n          isModal={true}\n        />\n      </div>\n    </div>\n  );\n};\n\nconst PromptCardManager = ({ projectId, onCardsChanged, projectName }) => {\n  // 상태 관리\n  const [promptCards, setPromptCards] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [showForm, setShowForm] = useState(false);\n  const [editingCard, setEditingCard] = useState(null);\n\n  // 프롬프트 카드 로드 및 기본 템플릿 생성\n  const loadPromptCards = useCallback(async () => {\n    try {\n      setLoading(true);\n      const response = await promptCardAPI.getPromptCards(projectId);\n\n      // API 응답 구조 확인 및 안전한 처리\n      let cards = [];\n      if (Array.isArray(response)) {\n        cards = response;\n      } else if (response && Array.isArray(response.promptCards)) {\n        cards = response.promptCards;\n      } else if (response && Array.isArray(response.data)) {\n        cards = response.data;\n      } else {\n        console.warn(\"Unexpected API response structure:\", response);\n        cards = [];\n      }\n\n      // 고정된 템플릿 카드들과 기존 카드들을 매칭\n      const templateCards = FIXED_PROMPT_CATEGORIES.map((template) => {\n        const existingCard = cards.find(\n          (card) => card.category === template.id\n        );\n\n        if (existingCard) {\n          // 기존 카드가 있으면 해당 카드 사용\n          return {\n            ...existingCard,\n            ...template, // 템플릿 정보로 덮어쓰기 (name, order, color, description)\n            title: existingCard.title || `${template.name} 프롬프트`,\n            prompt_text: existingCard.prompt_text || template.defaultContent,\n          };\n        } else {\n          // 기존 카드가 없으면 템플릿으로 기본 카드 생성\n          return {\n            id: `template-${template.id}`,\n            promptId: `template-${template.id}`,\n            title: `${template.name} 프롬프트`,\n            category: template.id,\n            prompt_text: template.defaultContent,\n            model_name: \"claude-3-5-sonnet-20241022\",\n            temperature: 0.7,\n            enabled: true,\n            step_order: template.order,\n            isTemplate: true, // 템플릿 카드임을 표시\n            ...template,\n          };\n        }\n      });\n\n      // 순서대로 정렬\n      templateCards.sort((a, b) => (a.order || 999) - (b.order || 999));\n\n      setPromptCards(templateCards);\n    } catch (error) {\n      const errorInfo = handleAPIError(error);\n      toast.error(`프롬프트 카드 로딩 실패: ${errorInfo.message}`);\n\n      // 오류 시에도 기본 템플릿 카드들 표시\n      const defaultCards = FIXED_PROMPT_CATEGORIES.map((template) => ({\n        id: `template-${template.id}`,\n        promptId: `template-${template.id}`,\n        title: `${template.name} 프롬프트`,\n        category: template.id,\n        prompt_text: template.defaultContent,\n        model_name: \"claude-3-5-sonnet-20241022\",\n        temperature: 0.7,\n        enabled: true,\n        step_order: template.order,\n        isTemplate: true,\n        ...template,\n      }));\n\n      setPromptCards(defaultCards);\n    } finally {\n      setLoading(false);\n    }\n  }, [projectId]);\n\n  useEffect(() => {\n    loadPromptCards();\n  }, [loadPromptCards]);\n\n  // 카드 업데이트\n  const handleUpdateCard = async (cardData) => {\n    try {\n      if (editingCard && !editingCard.isTemplate) {\n        // 기존 카드 편집\n        await promptCardAPI.updatePromptCard(\n          editingCard.promptId || editingCard.id,\n          cardData\n        );\n        toast.success(\"프롬프트 카드가 수정되었습니다!\");\n      } else if (editingCard && editingCard.isTemplate) {\n        // 템플릿 카드를 실제 카드로 생성\n        const newCardData = {\n          ...cardData,\n          category: editingCard.category,\n          step_order: editingCard.order,\n        };\n        await promptCardAPI.createPromptCard(projectId, newCardData);\n        toast.success(\"프롬프트 카드가 생성되었습니다!\");\n      } else {\n        // 새 카드 생성\n        await promptCardAPI.createPromptCard(projectId, cardData);\n        toast.success(\"프롬프트 카드가 생성되었습니다!\");\n      }\n\n      await loadPromptCards();\n      setShowForm(false);\n      setEditingCard(null);\n\n      if (onCardsChanged) onCardsChanged();\n    } catch (error) {\n      const errorInfo = handleAPIError(error);\n      toast.error(\n        `카드 ${editingCard ? \"수정\" : \"생성\"} 실패: ${errorInfo.message}`\n      );\n    }\n  };\n\n  // 카드 토글 (최적화 UI)\n  const handleToggleCard = async (promptId, enabled) => {\n    // promptCards가 배열인지 확인\n    if (!Array.isArray(promptCards)) {\n      console.error(\"promptCards is not an array:\", promptCards);\n      return;\n    }\n\n    // 낙관적 업데이트: 즉시 UI 반영\n    const originalCards = [...promptCards];\n    const updatedCards = promptCards.map((card) =>\n      (card.promptId || card.id) === promptId ? { ...card, enabled } : card\n    );\n    setPromptCards(updatedCards);\n\n    try {\n      // 템플릿 카드가 아닌 경우에만 API 호출\n      const card = promptCards.find((c) => (c.promptId || c.id) === promptId);\n      if (card && !card.isTemplate) {\n        await promptCardAPI.updatePromptCard(promptId, { enabled });\n      }\n      if (onCardsChanged) onCardsChanged();\n    } catch (error) {\n      // 실패 시 복원\n      setPromptCards(originalCards);\n      const errorInfo = handleAPIError(error);\n      toast.error(`카드 상태 변경 실패: ${errorInfo.message}`);\n    }\n  };\n\n  // 카드 삭제 - 템플릿 카드는 삭제 불가\n  const handleDeleteCard = async (promptId) => {\n    const card = promptCards.find((c) => (c.promptId || c.id) === promptId);\n\n    if (card && card.isTemplate) {\n      toast.error(\"기본 템플릿 카드는 삭제할 수 없습니다.\");\n      return;\n    }\n\n    if (!window.confirm(\"정말로 이 프롬프트 카드를 삭제하시겠습니까?\")) {\n      return;\n    }\n\n    try {\n      await promptCardAPI.deletePromptCard(projectId, promptId);\n      await loadPromptCards(); // 삭제 후 다시 로드하여 템플릿 카드로 복원\n      toast.success(\"프롬프트 카드가 삭제되었습니다!\");\n      if (onCardsChanged) onCardsChanged();\n    } catch (error) {\n      const errorInfo = handleAPIError(error);\n      toast.error(`카드 삭제 실패: ${errorInfo.message}`);\n    }\n  };\n\n  // 편집 모드 시작\n  const handleEditCard = (card) => {\n    setEditingCard(card);\n    setShowForm(true);\n  };\n\n  // 폼 취소\n  const handleCancelForm = () => {\n    setShowForm(false);\n    setEditingCard(null);\n  };\n\n  // promptCards가 배열인지 확인하고 안전하게 처리\n  const safePromptCards = Array.isArray(promptCards) ? promptCards : [];\n\n  return (\n    <div className=\"flex h-screen bg-gray-50\">\n      {/* 고정된 사이드바 */}\n      <div className=\"w-80 bg-white border-r border-gray-200 flex flex-col\">\n        {/* 사이드바 헤더 */}\n        <div className=\"p-4 border-b border-gray-200\">\n          <div className=\"flex items-center justify-between\">\n            <h2 className=\"text-lg font-semibold text-gray-900\">\n              프롬프트 템플릿\n            </h2>\n            <div className=\"text-xs text-gray-500\">\n              {safePromptCards.filter((card) => card.enabled).length}/\n              {safePromptCards.length} 활성\n            </div>\n          </div>\n        </div>\n\n        {/* 프롬프트 카드 목록 */}\n        <div className=\"flex-1 overflow-y-auto p-4\">\n          {loading ? (\n            <SidebarSkeleton />\n          ) : (\n            <div className=\"space-y-3\">\n              {safePromptCards.map((card, index) => (\n                <PromptCard\n                  key={card.promptId || card.id || index}\n                  card={card}\n                  onEdit={handleEditCard}\n                  onToggle={handleToggleCard}\n                  onDelete={handleDeleteCard}\n                  stepNumber={index + 1}\n                />\n              ))}\n            </div>\n          )}\n        </div>\n\n        {/* 하단 정보 */}\n        <div className=\"p-4 border-t border-gray-200 bg-gray-50\">\n          <div className=\"text-xs text-gray-600\">\n            <p className=\"font-medium mb-1\">💡 고정 템플릿 시스템</p>\n            <p>각 카테고리별 프롬프트를 편집하여 AI 응답을 개선하세요.</p>\n          </div>\n        </div>\n      </div>\n\n      {/* 메인 콘텐츠 - 채팅 인터페이스 */}\n      <div className=\"flex-1 relative\">\n        {/* 우측 상단 메뉴 버튼 */}\n        <div className=\"absolute top-4 right-4 z-10\">\n          <button className=\"p-2 text-gray-500 hover:text-gray-700 hover:bg-white hover:shadow-md rounded-md transition-all\">\n            <Bars3Icon className=\"h-5 w-5\" />\n          </button>\n        </div>\n\n        <ChatInterface\n          projectId={projectId}\n          projectName={projectName}\n          promptCards={safePromptCards}\n        />\n      </div>\n\n      {/* 편집 모달 */}\n      <PromptEditModal\n        isOpen={showForm}\n        onSubmit={handleUpdateCard}\n        onCancel={handleCancelForm}\n        initialData={editingCard}\n      />\n    </div>\n  );\n};\n\nexport default PromptCardManager;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}